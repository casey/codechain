codechain patchfile version 2
treehash ab5361589b30ccad8eabf198081e4df46cf1c5b5593ad7be2285eed20c60da52
+ f fb0817cc0ecb5117f11f49a0ebed1f888dbf56bbbc3da1ac755085d8e18673bb .gitattributes
utf8file 2
.codechain/*/* binary

- f 86b9714bde1b051f77e85e8bd720ed8a2d86e5b7e9c09983b5c51f88226320a5 .secpkg
+ f 65983a8670f81828a165007b25ee74993918e1647c10a9c52c78a4098a83e493 .secpkg
dmppatch 5
@@ -22,86 +22,86 @@
 n%22,%0A
-  %22Head%22: %22f1ba56d83bab91a72dd0996104b96897891573c2a6667b826b70a000d04503f5%22,%0A
+  %22Head%22: %22c614987c547f7ba125b30d52c59d0ef711812e992838c3454111c6f44d2c82b1%22,%0A
   %22D
- f c90d8d66d9ad7b301878d3edd1aa2fb28504b3131c85d1f7d3fb960b88039e0a Makefile
+ f 54d74aa059785a43c0dc74902cda20652d688c11e65ce9a611bd3edbcf2e2f15 Makefile
dmppatch 10
@@ -128,62 +128,64 @@
 ll:%0A
-%09env GO111MODULE=on go build -mod vendor -v ./cmd/...%0A
+%09env GO111MODULE=on go build -mod vendor -v . ./cmd/...%0A
 %0Ains
@@ -194,97 +194,99 @@
 ll:%0A
-%09env GO111MODULE=on GOBIN=$(bindir) go install -mod vendor -v ./cmd/secpkg ./cmd/ssotpub%0A
+%09env GO111MODULE=on GOBIN=$(bindir) go install -mod vendor -v . ./cmd/secpkg ./cmd/ssotpub%0A
 %0Auni
- f b76a4d5a6eb405977d63ac2c38de7a6ca399474f55fdb07d4c6c73cc62c389e9 README.md
+ f 3666abde5683e076a76952b37cdd3a30e82042585c2adbca677ccc50074b20f4 README.md
dmppatch 12
@@ -1,119 +1,92 @@
-Codechain %E2%80%94 code trust through hash chains %E2%80%94 %CE%B2 release%0A------------------------------------------------------%0A
+Codechain %E2%80%94 code trust through hash chains%0A------------------------------------------%0A
 %0A%5B!%5B
@@ -525,50 +525,8 @@
 in)%0A
-%0AThis is a **beta** release of Codechain.%0A
 %0A###
@@ -1539,16 +1539,107 @@
 ...%0A%60%60%60%0A
+%0A(How to %5Binstall Go%5D(https://golang.org/doc/install). Add %60$GOPATH/bin%60%0Ato your %60$PATH%60.)%0A
 %0A### Con
- f 6427fc6a60620759006feba80f6c79ea79d322675aa9f1db5c2c51f14c27690c cmd/secpkg/secpkg.go
+ f c48c8caa054d8895298c55e82d0a0569b113062062fe902c3706c848456a5206 cmd/secpkg/secpkg.go
dmppatch 8
@@ -242,32 +242,110 @@
 secpkg%5Cn%22, cmd)%0A
+%09fmt.Fprintf(os.Stderr, %22       %25s checkupdate %5B-all%5D %5Bpackage_name%5D%5Cn%22, cmd)%0A
 %09fmt.Fprintf(os.
@@ -728,32 +728,97 @@
 argv0, args...)%0A
+%09case %22checkupdate%22:%0A%09%09err = command.CheckUpdate(argv0, args...)%0A
 %09case %22update%22:%0A
- f 37ecc592ad8685a2a1c3a6c2070a00a836977de829297bfe7d291616b5a3bde1 cmd/ssotpub/ssotpub.go
+ f 9faf186a3d45070ea706532781a61e0a3b4abb0acd1f44267e049a59a2877a03 cmd/ssotpub/ssotpub.go
dmppatch 8
@@ -560,16 +560,67 @@
 %22, cmd)%0A
+%09fmt.Fprintf(os.Stderr, %22       %25s status%5Cn%22, cmd)%0A
 %09os.Exit
@@ -1062,16 +1062,71 @@
 rgs...)%0A
+%09case %22status%22:%0A%09%09err = command.Status(argv0, args...)%0A
 %09default
+ f 6a911b51cc047eea7d7b10c75cf1f50a98dea2a39e12ef3414d2f00f31a263f9 cmd/util/cctreehash/cctreehash.go
utf8file 204
/*
cctreehash calculates and prints the tree hash of the current directory in hex.

This file is frozen, do not change it.

This stand alone tool helps bootstrapping Codechain,
see https://github.com/frankbraun/codechain/blob/master/doc/bootstrapping.md.

To calculate the hash of a directory tree (a tree hash) a list of all files in
the directory root (a tree list) is created as follows.

All the files below the root of the directory tree are traversed in lexical
order (with filepath.Walk) and printed in this format:

  m xxx filename

Where:
  m        is the mode ('f' or 'x')
  xxx      is the SHA256 hash for the file in hex notation
  filename is the file name with directory prefix starting at root

Example list:
  f 7d865e959b2466918c9863afca942d0fb89d7c9ac0c99bafc3749504ded97730 bar/baz.txt
  x b5bb9d8014a0f9b1d61e21e796d78dccdf1352f23cd32812f4850b878ae4944c foo.txt

The fields are separated with single white space characters and the lines are
separated with single newline characters.

Directories are only implicitly listed (i.e., if they
contain files). Entries start with 'f' if it is a regular file (read and
write permission for user) and with 'x' if it is an executable (read,
write, and executable for user).

The directory tree must only contain directories, regular files, or executables.

The deterministic tree list serves as the basis for a hash of a directory tree
(the tree hash), which is the SHA256 hash of the tree list in hex notation.
*/
package main

import (
	"bytes"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
)

// ExcludePaths is the default list of paths not considered by Codechain.
// Do not ever change this list! It will break existing Codechains.
var ExcludePaths = []string{
	".codechain",
	".git",
	".gitignore",
	".travis.yml",
}

// SHA256 returns the SHA256 hash of the file with given path.
func SHA256(path string) (*[32]byte, error) {
	f, err := os.Open(path)
	if err != nil {
		return nil, err
	}
	defer f.Close()
	h := sha256.New()
	if _, err := io.Copy(h, f); err != nil {
		return nil, err
	}
	sum := h.Sum(nil)
	var hash [32]byte
	copy(hash[:], sum)
	return &hash, nil
}

// ListEntry describes a directory tree entry.
type ListEntry struct {
	Mode     rune     // 'f' (regular) or 'x' (binary)
	Filename string   // Including directory path starting from root
	Hash     [32]byte // SHA256 hash
}

// List returns a list in lexical order of ListEntry structs of all files in
// the file tree rooted at root. See the ListBytes function for details.
//
// This is a convenience function to make a tree list accessible without
// having to parse tree list entries.
func List(root string, excludePaths []string) ([]ListEntry, error) {
	var entries []ListEntry
	err := filepath.Walk(root, func(path string, info os.FileInfo, err error) error {
		if err != nil {
			return err
		}
		if !info.IsDir() && !info.Mode().IsRegular() {
			return fmt.Errorf("%s: neither directory nor normal file", path)
		}
		if path == root {
			return nil
		}
		canonical := path
		if root != "." {
			canonical = strings.TrimPrefix(path, root)
			canonical = strings.TrimPrefix(canonical, string(filepath.Separator))
		}
		canonical = filepath.ToSlash(canonical)
		if excludePaths != nil {
			for _, excludePath := range excludePaths {
				if excludePath == canonical {
					if info.IsDir() {
						return filepath.SkipDir
					}
					return nil
				}
			}
		}
		perm := info.Mode().Perm() & os.ModePerm
		if info.IsDir() {
			if perm&0700 != 0700 {
				return fmt.Errorf("%s: directory doesn't have all user permissions", path)
			}
			return nil
		}
		var m rune
		if perm&0100 == 0100 {
			if perm&0700 != 0700 {
				return fmt.Errorf("%s: executable is not readable and writable", path)
			}
			m = 'x' // executable
		} else {
			if perm&0010 > 0 {
				return fmt.Errorf("%s: regular file is executable for group, but not for user", path)
			}
			if perm&0001 > 0 {
				return fmt.Errorf("%s: regular file is executable for other, but not for user", path)
			}
			if perm&0600 != 0600 {
				return fmt.Errorf("%s: regular file is not readable and writable", path)
			}
			m = 'f' // regular file
		}
		h, err := SHA256(path)
		if err != nil {
			return err
		}
		entries = append(entries, ListEntry{m, canonical, *h})
		return nil
	})
	if err != nil {
		return nil, err
	}
	return entries, nil
}

// PrintList prints a list of (sorted) entries in the canonical tree list
// format.
//
// This is a convience function to bring a list of entries returned by the
// List functions into the format returned by the ListBytes function.
func PrintList(entries []ListEntry) []byte {
	var b bytes.Buffer
	for _, e := range entries {
		fmt.Fprintf(&b, "%c %x %s\n", e.Mode, e.Hash[:], e.Filename)
	}
	return b.Bytes()
}

// ListBytes returns a list in lexical order of newline separated hashes of
// all files in the file tree rooted at root in the canonical format, except
// for the paths in excludePaths (the tree list).
func ListBytes(root string, excludePaths []string) ([]byte, error) {
	entries, err := List(root, excludePaths)
	if err != nil {
		return nil, err
	}
	return PrintList(entries), nil
}

// Hash returns a SHA256 hash of all files and directories in the file tree
// rooted at root, except for the paths in excludePaths (the tree hash).
func Hash(root string, excludePaths []string) (*[32]byte, error) {
	l, err := ListBytes(root, excludePaths)
	if err != nil {
		return nil, err
	}
	h := sha256.Sum256(l)
	return &h, nil
}

func fatal(err error) {
	fmt.Fprintf(os.Stderr, "%s: error: %s\n", os.Args[0], err)
	os.Exit(1)
}

func main() {
	// calculate tree hash
	hash, err := Hash(".", ExcludePaths)
	if err != nil {
		fatal(err)
	}
	// print tree hash in hex
	fmt.Printf("%x\n", hash[:])
}

- f 2e3a8de4cf94c8e1c34b21a50d762c0ae2f3c112774067113ad3b8591acad3f3 command/keygen.go
+ f c70d12665daf174ff2bcaf6c88fc0831f592d1b72a5cf64db166cc8eb42aa449 command/keygen.go
dmppatch 5
@@ -1775,61 +1775,103 @@
 %22 %7B%0A
-%09%09fmt.Println(%22comment (e.g., name; can be empty):%22)%0A
+%09%09fmt.Println(%22comment (e.g., John Doe %3Cjohn@example.com%3E; can be empty; cannot be changed):%22)%0A
 %09%09co
- f 36fa9f1e89db88b5fd573997e8b8b740e4b8f1ef358dfc49a38a2aaf4601d06d command/publish.go
+ f 69a179856648c8e875f7a057e1b479d1b540efb055dda29b252eb46995259c6d command/publish.go
dmppatch 5
@@ -2853,72 +2853,97 @@
 e %7B%0A
-%09%09fmt.Println(%22comment describing code change (can be empty):%22)%0A
+%09%09fmt.Println(%22comment describing code change (can be empty; cannot be changed later):%22)%0A
 %09%09co
+ f 9f4507f7e0fbdd1e98c28fdfed75b9108ac965a5da1555c6a34e3010732b82b1 doc/bootstrapping.md
utf8file 47
Bootstrapping Codechain
-----------------------

THIS DOCUMENT IS NOT FINISHED: The file codechain-bootstrap.tar.gz has
not been published and the tree hash has not been signed yet.

### Install Go

See https://golang.org/doc/install.

### Download `cctreehash.go`

From https://frankbraun.org/cctreehash.go and verify its SHA-256:

    $ sha256sum cctreehash.go
    6a911b51cc047eea7d7b10c75cf1f50a98dea2a39e12ef3414d2f00f31a263f9 cctreehash.go

### Review the code of `cctreehash.go`

If you can, this is optional.

### Download Codechain bootstrap

From https://frankbraun.org/codechain-bootstrap.tar.gz and execute:

    $ tar -xvf codechain-bootstrap.tar.gz
    $ cd codechain-bootstrap
    $ go run ../cctreehash.go
    d1e69edf8f1c09e82fd16b008d70ec0783982418a4f113f19f661a7b47919641

The tree hash computed by `cctreehash.go` must match the published one.
This makes sure you have the correct Codechain bootstrap source.

TODO: sources of the `codechain-bootrap` tree hash:

-   opentimestamps
-   PGP signed statements by developers
-   websites from projects that use Codechain

### Use the bootstrapped Codechain to install the most current Codechain version

    $ go run cmd/secpkg/secpkg.go install .secpkg

Afterwards `codechain` and `secpkg` are installed in
`~/.config/secpkg/local/bin`. You should add that directory to your
`$PATH` variable and delete the `codechain-bootstrap` directory.

- f 43bb6e67fac3567daf31f2874bbc6a8c0bbf00f9ef7cb08af80f88c16865e469 doc/walkthrough.md
+ f b5100d5a7d85d0a9a0e8de054d85d2a1fd58282f9043cc24627da73a061b5d1f doc/walkthrough.md
dmppatch 10
@@ -254,48 +254,90 @@
 e: %0A
-    comment (e.g., name; can be empty):%0A
+    comment (e.g., John Doe %3Cjohn@example.com%3E; can be empty; cannot be changed):%0A
     
@@ -2592,59 +2592,84 @@
 : y%0A
-    comment describing code change (can be empty):%0A
+    comment describing code change (can be empty; cannot be changed later):%0A
     
- f c26fcc9440f34ac20e0cdf97ca2ea544182ca03d58a54cb1fb96df93e07da794 go.mod
+ f 028ca2ae6cd46473577c6900bbb2ce35193d49063a01dfd259258de2d80ebb27 go.mod
dmppatch 5
@@ -322,127 +322,127 @@
 ect%0A
-%09golang.org/x/crypto v0.0.0-20190513172903-22d7a77e9e5f%0A%09golang.org/x/sys v0.0.0-20190527104216-9cd6430ef91e // indirect%0A
+%09golang.org/x/crypto v0.0.0-20190701094942-4def268fd1a4%0A%09golang.org/x/sys v0.0.0-20190626221950-04f50cda93cb // indirect%0A
 )%0A
- f 8199eb73ecaf1d4f20fc1f5d91768602f0e5fc4df99f0a7446c3c87081b548b6 go.sum
+ f 87cb5be4ab5aef150d4e4073ef6a281fdfbd71ba68a341d8b333a4965a597bc9 go.sum
dmppatch 10
@@ -1797,221 +1797,221 @@
 +w=%0A
-golang.org/x/crypto v0.0.0-20190513172903-22d7a77e9e5f h1:R423Cnkcp5JABoeemiGEPlt9tHXFfw5kvc0yqlxRPWo=%0Agolang.org/x/crypto v0.0.0-20190513172903-22d7a77e9e5f/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=%0A
+golang.org/x/crypto v0.0.0-20190701094942-4def268fd1a4 h1:HuIa8hRrWRSrqYzx1qI49NNxhdi2PrY7gxVSq1JjLDc=%0Agolang.org/x/crypto v0.0.0-20190701094942-4def268fd1a4/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=%0A
 gola
@@ -2438,215 +2438,215 @@
 Es=%0A
-golang.org/x/sys v0.0.0-20190527104216-9cd6430ef91e h1:Pzdi8HRppinixnWWzN6KSa0QkBM+GKsTJaWwwfJskNw=%0Agolang.org/x/sys v0.0.0-20190527104216-9cd6430ef91e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=%0A
+golang.org/x/sys v0.0.0-20190626221950-04f50cda93cb h1:fgwFCsaw9buMuxNd6+DQfAuSFqbNiQZpcgJQAgJsK6k=%0Agolang.org/x/sys v0.0.0-20190626221950-04f50cda93cb/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=%0A
 gola
- f e1217044adf32f0b069651a5e40648207f4e6a4c020b2605ac2304add937a4ad hashchain/read.go
+ f cd1134f355dab74aaafa6069b82ced8796f9c2770124ea105b173d79062b00ad hashchain/read.go
dmppatch 4
@@ -2116,16 +2116,231 @@
 err%0A%09%7D%0A%0A
+%09// having only one signer is VERY BAD NEWS, emit obnoxious warning here, so%0A%09// all tools will display it%0A%09if c.M() == 1 %7B%0A%09%09fmt.Fprintf(os.Stderr, %22WARNING: this Codechain can be updated by only 1 signer!%5Cn%22)%0A%09%7D%0A%0A
 %09return 
- f bcd70e60f83210ff3da9dc4ab77fc492b7e899e15ed4a3bc6cd4b9e9f4d2f5e1 internal/def/def.go
+ f 9e8f6ab25eda38ebba91bbe264ded311f7f608a9736a39cb6bd2c7f00dbafa9b internal/def/def.go
dmppatch 4
@@ -1559,16 +1559,84 @@
 echain.%0A
+// Do not ever change this list! It will break existing Codechains.%0A
 var Excl
- f 6dc2609167fcecb000ab99f061aa53d607539786c6fef37e24cfbb4359e9ebd4 keyfile/keyfile.go
+ f 378a4d0e4c949ce108d1cf0c8a8e42c897096e3cbecf5d641e9870ce2cc6f2c4 keyfile/keyfile.go
dmppatch 5
@@ -1819,131 +1819,45 @@
 %0A%09)%0A
-%09f, err := os.Open(filename)%0A%09if err != nil %7B%0A%09%09return nil, nil, nil, err%0A%09%7D%0A%09defer f.Close()%0A%09c, err := ioutil.ReadAll(f)%0A
+%09c, err := ioutil.ReadFile(filename)%0A
 %09if 
+ f 0ff15836eec5c0c5c4c0d02c6a088481a6efdf5822bede25e53ed1146924970c packages/binpkg.secpkg
utf8file 6
{
  "Name": "binpkg",
  "Head": "3918a460d2145d1c4e65b7962c880ea3e4af3454b89cac210bc40b6d34d7bb4a",
  "DNS": "binpkg.secpkg.net"
}

- f 86b9714bde1b051f77e85e8bd720ed8a2d86e5b7e9c09983b5c51f88226320a5 packages/codechain.secpkg
+ f 65983a8670f81828a165007b25ee74993918e1647c10a9c52c78a4098a83e493 packages/codechain.secpkg
dmppatch 5
@@ -22,86 +22,86 @@
 n%22,%0A
-  %22Head%22: %22f1ba56d83bab91a72dd0996104b96897891573c2a6667b826b70a000d04503f5%22,%0A
+  %22Head%22: %22c614987c547f7ba125b30d52c59d0ef711812e992838c3454111c6f44d2c82b1%22,%0A
   %22D
+ f d35688e870b7838dc462d38ad03f04886a01d47723ada401a8fa0d70f70f892e packages/hello-bin.secpkg
utf8file 6
{
  "Name": "hello-bin",
  "Head": "dc67e751fd99242cd0bc63efcf23660bb0ea9f1899361fafcec21dc5a9a8365d",
  "DNS": "hello-bin.secpkg.net"
}

+ f b1624ecae659d054fd5fafa0012526a128ffec96a1fd1b45ac8957b98c1ce9b9 packages/mole.secpkg
utf8file 7
{
  "Name": "mole",
  "Head": "c4d9fa88c87bbd430a94bfdb7d0f2960569613a32b9ce2c13f6da9b1af77c85b",
  "DNS": "mole.secpkg.net",
  "Key": "5e66e33b5af1e037e2118c2b6547ab3a907962ab51b6450c03d2b14c2df692f7"
}

- f c3b7fe14c712cb6ae7679215611d3c8de6c967e0aad8be483ae4243ed92bff3f packages/testpkg-with-dep.secpkg
+ f e7e1660b6d71c710f567744fe63c4756210dfef70ad95bfe2233f8aedcda14b3 packages/testpkg-with-dep.secpkg
dmppatch 5
@@ -29,86 +29,86 @@
 p%22,%0A
-  %22Head%22: %229ebe13447caeb6258347f7b23d882d3bfe09cd72f9307e786ebb4621de330c7a%22,%0A
+  %22Head%22: %2267fffed474b495702d5fa3ce623ffd63e7908fbb28afa47990005c2434723ded%22,%0A
   %22D
+ x 2fee081d385e478e335cdb8217d78c5379401cc777f12f67383040edcbf93cbe scripts/bootstrap.sh
utf8file 50
#!/bin/sh -e

# these have to be checked manually!
echo "------------------------------------------------------------------------"
echo "CHECK THESE HASHES MANUALLY!"
CCTREEHASH_SHA256="6a911b51cc047eea7d7b10c75cf1f50a98dea2a39e12ef3414d2f00f31a263f9"
CODECHAIN_BOOTSTRAP_TREE_HASH="b54a4a8d17940fc31f8cc5dec84cf513cb62cb312f09bf8bc3ecc2dccc83af77"
echo "cctreehash.go $CCTREEHASH_SHA256"
echo "codechain-bootstrap $CODECHAIN_BOOTSTRAP_TREE_HASH"
echo "------------------------------------------------------------------------"

# download cctreehash.go
cd /tmp
rm -f cctreehash.go
curl -O https://frankbraun.org/cctreehash.go

# verify its SHA-256
CCTREEHASH=$(sha256sum cctreehash.go)
if [ "$CCTREEHASH" = "$CCTREEHASH_SHA256  cctreehash.go" ]
then
  echo "sha256 cctreehash.go matches"
else
  echo "sha256 cctreehash.go does not match"
  exit 1
fi

# download Codechain bootstrap
rm -rf codechain-bootstrap
curl -O https://frankbraun.org/codechain-bootstrap.tar.gz

# verify its tree hash
tar xzf codechain-bootstrap.tar.gz
cd codechain-bootstrap
CODECHAIN_BOOTSTRAP=$(go run ../cctreehash.go)
if [ "$CODECHAIN_BOOTSTRAP" = "$CODECHAIN_BOOTSTRAP_TREE_HASH" ]
then
  echo "codechain-bootstrap tree hash matches"
else
  echo "codechain-bootstrap tree hash does not match"
  exit 1
fi

# use the bootstrapped Codechain to install the most current Codechain version
go run cmd/secpkg/secpkg.go install .secpkg

# cleanup
cd ..
rm -rf codechain-bootstrap
rm -f cctreehash.go

+ f ab6132e6b96bdb93bdf593f0e18411dc1ca98745b590168fbb4739f1fa34ae6f secpkg/checkupdate.go
utf8file 162
package secpkg

import (
	"fmt"
	"path/filepath"
	"strconv"

	"github.com/frankbraun/codechain/hashchain"
	"github.com/frankbraun/codechain/internal/def"
	"github.com/frankbraun/codechain/ssot"
	"github.com/frankbraun/codechain/util/file"
	"github.com/frankbraun/codechain/util/homedir"
	"github.com/frankbraun/codechain/util/log"
)

func checkUpdate(visited map[string]bool, name string) (bool, error) {
	// 1. Make sure the project with NAME has been installed before.
	//    That is, the directory ~/.config/secpkg/pkgs/NAME exists.
	//    Set SKIP_CHECK and NEEDS_UPDATE to false.
	log.Printf("1. make sure '%s' has been installed\n", name)
	pkgDir := filepath.Join(homedir.SecPkg(), "pkgs", name)
	exists, err := file.Exists(pkgDir)
	if err != nil {
		return false, err
	}
	if !exists {
		return false, ErrNotInstalled
	}
	skipCheck := false
	needsUpdate := false

	// 2. Load .secpkg file from ~/.config/secpkg/pkgs/NAME/.secpkg
	log.Println("2. load .secpkg file")
	fn := filepath.Join(pkgDir, File)
	pkg, err := Load(fn)
	if err != nil {
		return false, err
	}
	if pkg.Name != name {
		return false,
			fmt.Errorf("package to update (%s) differs from package name in %s", name, fn)
	}

	// 3. Load signed head from ~/.config/secpkg/pkgs/NAME/signed_head (as DISK)
	log.Println("3. load signed head")
	signedHeadFile := filepath.Join(pkgDir, "signed_head")
	shDisk, err := ssot.Load(signedHeadFile)
	if err != nil {
		return false, err
	}

	// 4. Query TXT record from _codechain-head.DNS, if it is the same as DISK, set
	//    SKIP_CHECK to true.
	log.Println("4. query TX record")
	shDNS, err := ssot.LookupHead(pkg.DNS)
	if err != nil {
		return false, err
	}
	if shDisk.Marshal() == shDNS.Marshal() {
		skipCheck = true
	}

	// 5. If not SKIP_CHECK, validate signed head from TXT (also see ssot package)
	//    and store HEAD:
	//
	// 	  - pubKey from TXT must be the same as pubKey or pubKeyRotate from DISK,
	// 	    if the signed head from DISK is not expired.
	// 	  - The counter from TXT must be larger than the counter from DISK.
	// 	  - The signed head must be valid (as defined by validFrom and validTo).
	//
	// If the validation fails, abort check update procedure and report error.
	log.Println("5. validate signed head")
	if !skipCheck {
		if err := shDisk.Valid(); err == nil { // not expired
			if !(shDNS.PubKey() == shDisk.PubKey() ||
				shDNS.PubKey() == shDisk.PubKeyRotate()) {
				return false,
					fmt.Errorf("secpkg: public key from TXT record does not match public key (or rotate) from disk")
			}
		}
		if shDNS.Counter() <= shDisk.Counter() {
			return false,
				fmt.Errorf("secpkg: counter from TXT record is not increasing")
		}
		if err := shDNS.Valid(); err != nil {
			return false, err
		}
	} else {
		log.Println("skipped")
	}

	// 6. If not SKIP_CHECK and if signed head from TXT record not the same as the
	//    one from DISK, set SKIP_CHECK and NEEDS_UPDATE to true.
	log.Println("6. compare signed heads")
	if !skipCheck {
		if shDNS.Head() == shDisk.Head() {
			log.Println("set SKIP_CHECK and NEEDS_UPDATE to true")
			skipCheck = true
			needsUpdate = true
		}
	} else {
		log.Println("skipped")
	}

	// 7. If not NEEDS_UPDATE, check if HEAD is contained in
	//    ~/.config/secpkg/pkgs/NAME/src/.codchain/hashchain.
	//    If not, set NEEDS_UPDATE to true.
	log.Println("7. check if HEAD is contained in hashchain")
	if !needsUpdate {
		srcDir := filepath.Join(pkgDir, "src")
		c, err := hashchain.ReadFile(filepath.Join(srcDir, def.HashchainFile))
		if err != nil {
			return false, err
		}
		if err := c.Close(); err != nil {
			return false, err
		}
		log.Printf("c.CheckHead(%s)\n", shDNS.Head())
		if err := c.CheckHead(shDNS.HeadBuf()); err != nil {
			log.Println("set NEEDS_UPDATE=true")
			needsUpdate = true
		}
	} else {
		log.Println("skipped")
	}

	// 8. If NEEDS_UPDATE is false, check if the directory
	//    ~/.config/secpkg/pkgs/NAME/src/.secdep exists and contains any .secpkg
	//    files, ensure these secure dependencies are installed and up-to-date. If
	//    at least one dependency needs an update, set NEEDS_UPDATE to true.
	log.Println("8. check .secdep directory")
	if !needsUpdate {
		needsUpdate, err = ensureCheckUpdate(visited, name)
		if err != nil {
			return false, err
		}
	} else {
		log.Println("skipped")
	}

	// 9. Update signed head:
	//
	//    - `cp -f ~/.config/secpkg/pkgs/NAME/signed_head
	//             ~/.config/secpkg/pkgs/NAME/previous_signed_head`
	//    - Save new signed head to ~/.config/secpkg/pkgs/NAME/signed_head (atomic).
	log.Println("9. update signed head")
	if err := shDNS.RotateFile(pkgDir); err != nil {
		return false, nil
	}

	// 10. Return NEEDS_UPDATE.
	log.Printf("10. return NEEDS_UPDATE=%s\n", strconv.FormatBool(needsUpdate))
	return needsUpdate, nil
}

// CheckUpdate package with name, see specification for details.
func CheckUpdate(name string) (bool, error) {
	visited := make(map[string]bool)
	visited[name] = true
	return checkUpdate(visited, name)
}

+ f 49d96fabea1c997f5565508645ea55ba4f912f40ac031fa181b5293c876ddeb6 secpkg/command/checkupdate.go
utf8file 77
package command

import (
	"flag"
	"fmt"
	"os"
	"path/filepath"

	"github.com/fatih/color"
	"github.com/frankbraun/codechain/secpkg"
	"github.com/frankbraun/codechain/util/file"
	"github.com/frankbraun/codechain/util/homedir"
	"github.com/frankbraun/codechain/util/log"
)

// checkUpdateAll checks all packages for updates. If an update check for a
// single fails the error is reported on stderr and the next package will be
// updated. The function returns the first encountered error, if any.
func checkUpdateAll() error {
	pkgDir := filepath.Join(homedir.SecPkg(), "pkgs")
	pkgs, err := file.List(pkgDir)
	if err != nil {
		return err
	}
	var firstError error
	for _, pkg := range pkgs {
		fmt.Printf("%s: checking\n", pkg)
		needsUpdate, err := secpkg.CheckUpdate(pkg)
		if err != nil {
			if firstError == nil {
				firstError = err
			}
			fmt.Fprintf(os.Stderr, "error: %v\n", err)
		} else if needsUpdate {
			fmt.Println(color.RedString("needs update!"))
		} else {
			fmt.Println("up-to-date")
		}
	}
	return firstError
}

// CheckUpdate implements the secpkg 'checkupdate' command.
func CheckUpdate(argv0 string, args ...string) error {
	fs := flag.NewFlagSet(argv0, flag.ContinueOnError)
	fs.Usage = func() {
		fmt.Fprintf(os.Stderr, "Usage: %s [-all] [project_name]\n", argv0)
		fmt.Fprintf(os.Stderr, "Check if installed package with given project_name can be updated.\n")
		fs.PrintDefaults()
	}
	all := fs.Bool("all", false, "Check all installed packages")
	verbose := fs.Bool("v", false, "Be verbose")
	if err := fs.Parse(args); err != nil {
		return err
	}
	if *verbose {
		log.Std = log.NewStd(os.Stdout)
	}
	if *all && fs.NArg() != 0 || !*all && fs.NArg() != 1 {
		fs.Usage()
		return flag.ErrHelp
	}
	if *all {
		return checkUpdateAll()
	}
	needsUpdate, err := secpkg.CheckUpdate(fs.Arg(0))
	if err != nil {
		return err
	}
	if needsUpdate {
		fmt.Println(color.RedString("needs update!"))
	} else {
		fmt.Println("up-to-date")
	}
	return nil
}

- f f47e8bc9be31dddd9e69c70f3216d4075d10f18484c4e41fddfdc68d763348d2 secpkg/command/list.go
+ f 02a7c50bd6722c3209acfd3ea95d3e5b27017d73e8b7a0b6a653b026d9f3abcd secpkg/command/list.go
dmppatch 12
@@ -44,51 +44,119 @@
 os%22%0A
+%09%22path/filepath%22%0A
 %0A
-%09%22github.com/frankbraun/codechain/secpkg%22%0A
+%09%22github.com/frankbraun/codechain/util/file%22%0A%09%22github.com/frankbraun/codechain/util/homedir%22%0A
 %09%22gi
@@ -708,36 +708,91 @@
 %0A%09%7D%0A
-%09pkgs, err := secpkg.List()%0A
+%09pkgDir := filepath.Join(homedir.SecPkg(), %22pkgs%22)%0A%09pkgs, err := file.List(pkgDir)%0A
 %09if 
- f b7d76ce08e17b86b927ece679476007a242c995ccbe2be9f10379b9a2d3041c3 secpkg/command/update.go
+ f 410b7da43fd1cb34bdaf87eec9b7234f45156fd6724953c5c460ffd3973b5a0b secpkg/command/update.go
dmppatch 18
@@ -40,16 +40,33 @@
 %22%0A%09%22os%22%0A
+%09%22path/filepath%22%0A
 %0A%09%22githu
@@ -100,16 +100,109 @@
 secpkg%22%0A
+%09%22github.com/frankbraun/codechain/util/file%22%0A%09%22github.com/frankbraun/codechain/util/homedir%22%0A
 %09%22github
@@ -470,36 +470,91 @@
 r %7B%0A
-%09pkgs, err := secpkg.List()%0A
+%09pkgDir := filepath.Join(homedir.SecPkg(), %22pkgs%22)%0A%09pkgs, err := file.List(pkgDir)%0A
 %09if 
@@ -1213,71 +1213,71 @@
 %0A%09%7D%0A
-%09all := fs.Bool(%22all%22, false, %22update all installed packages%22)%0A
+%09all := fs.Bool(%22all%22, false, %22Update all installed packages%22)%0A
 %09ver
- f 205a359d24995baf241e2e5d1d2240c1a2ffe35bb3720954de94d40defd86dd3 secpkg/doc.go
+ f b6e7a1aaf2ba0538e81e0d6fd25ea8fbbb02c017709e7f9c28b7ca51d72fd300 secpkg/doc.go
dmppatch 58
@@ -3435,100 +3435,75 @@
 e.%0A%0A
-   5. If not SKIP_BUILD, query TXT record from _codechain-url.DNS and save it as%0A      URL.%0A
+   5. Query TXT record from _codechain-url.DNS and save it as URL.%0A
 %0A   
@@ -3605,86 +3605,139 @@
 D:%0A%0A
-      - pubKey from TXT must be the same as pubKey or pubKeyRotate from DISK.%0A
+      - pubKey from TXT must be the same as pubKey or pubKeyRotate from DISK,%0A        if the signed head from DISK is not expired.%0A
     
@@ -4083,85 +4083,284 @@
 e.%0A%0A
-   8. If not SKIP_BUILD, download distribution file from URL/HEAD.tar.gz and%0A
+   8. If SKIP_BUILD, check if HEAD is contained in%0A      ~/.config/secpkg/pkgs/NAME/src/.codchain/hashchain.%0A      If not, set SKIP_BUILD to false.%0A      This can happend if we checked for updates.%0A%0A   9. If not SKIP_BUILD, download distribution file from URL/HEAD.tar.gz and%0A
     
@@ -4410,84 +4410,84 @@
 ts%0A%0A
-   9. If not SKIP_BUILD, apply ~/.config/secpkg/pkgs/NAME/dists/HEAD.tar.gz%0A
+  10. If not SKIP_BUILD, apply ~/.config/secpkg/pkgs/NAME/dists/HEAD.tar.gz%0A
     
@@ -4616,81 +4616,81 @@
 %60.%0A%0A
-  10. If the directory ~/.config/secpkg/pkgs/NAME/src/.secdep exists and%0A
+  11. If the directory ~/.config/secpkg/pkgs/NAME/src/.secdep exists and%0A
     
@@ -4864,101 +4864,101 @@
 e.%0A%0A
-  11. If not SKIP_BUILD, %60rm -rf ~/.config/secpkg/pkgs/NAME/build%60%0A
+  12. If not SKIP_BUILD, %60rm -rf ~/.config/secpkg/pkgs/NAME/build%60%0A
 %0A
-  12. If not SKIP_BUILD,%0A
+  13. If not SKIP_BUILD,%0A
     
@@ -5036,78 +5036,78 @@
 d%60%0A%0A
-  13. If not SKIP_BUILD, call %60make prefix=~/.config/secpkg/local%60 in%0A
+  14. If not SKIP_BUILD, call %60make prefix=~/.config/secpkg/local%60 in%0A
     
@@ -5146,87 +5146,87 @@
 ld%0A%0A
-  14. If not SKIP_BUILD, call %60make prefix= ~/.config/secpkg/local install%60 in%0A
+  15. If not SKIP_BUILD, call %60make prefix= ~/.config/secpkg/local install%60 in%0A
     
@@ -5265,33 +5265,33 @@
 ld%0A%0A
-  15. If not SKIP_BUILD,%0A
+  16. If not SKIP_BUILD,%0A
     
@@ -5372,34 +5372,34 @@
 d%60%0A%0A
-  16. Update signed head:%0A
+  17. Update signed head:%0A
 %0A   
@@ -5599,58 +5599,1889 @@
 ).%0A%0A
-  17. The software has been successfully updated.%0A
+  18. The software has been successfully updated.%0A%0ACheckUpdate specification%0A%0AChecking if a software package with NAME needs an update works as follows:%0A%0A   1. Make sure the project with NAME has been installed before.%0A      That is, the directory ~/.config/secpkg/pkgs/NAME exists.%0A      Set SKIP_CHECK and NEEDS_UPDATE to false.%0A%0A   2. Load .secpkg file from ~/.config/secpkg/pkgs/NAME/.secpkg%0A%0A   3. Load signed head from ~/.config/secpkg/pkgs/NAME/signed_head (as DISK)%0A%0A   4. Query TXT record from _codechain-head.DNS, if it is the same as DISK, set%0A      SKIP_CHECK to true.%0A%0A   5. If not SKIP_CHECK, validate signed head from TXT (also see ssot package)%0A      and store HEAD:%0A%0A      - pubKey from TXT must be the same as pubKey or pubKeyRotate from DISK,%0A        if the signed head from DISK is not expired.%0A      - The counter from TXT must be larger than the counter from DISK.%0A      - The signed head must be valid (as defined by validFrom and validTo).%0A%0A      If the validation fails, abort check update procedure and report error.%0A%0A   6. If not SKIP_CHECK and if signed head from TXT record not the same as the%0A      one from DISK, set SKIP_CHECK and NEEDS_UPDATE to true.%0A%0A   7. If not NEEDS_UPDATE, check if HEAD is contained in%0A      ~/.config/secpkg/pkgs/NAME/src/.codchain/hashchain.%0A      If not, set NEEDS_UPDATE to true.%0A%0A   8. If NEEDS_UPDATE is false, check if the directory%0A      ~/.config/secpkg/pkgs/NAME/src/.secdep exists and contains any .secpkg%0A      files, ensure these secure dependencies are installed and up-to-date. If%0A      at least one dependency needs an update, set NEEDS_UPDATE to true.%0A%0A   9. Update signed head:%0A%0A      - %60cp -f ~/.config/secpkg/pkgs/NAME/signed_head%0A               ~/.config/secpkg/pkgs/NAME/previous_signed_head%60%0A      - Save new signed head to ~/.config/secpkg/pkgs/NAME/signed_head (atomic).%0A%0A  10. Return NEEDS_UPDATE.%0A
 */%0Ap
- f 226f0905aaf71bb6c4be34cd776ce846e9e1e090e7d7b74bae38d3faf8f25ddb secpkg/ensure.go
+ f d138a9ea5ddd2c2b9ea66f27da97f18b13e15e601f1f49d123b368f3978c2577 secpkg/ensure.go
dmppatch 3
@@ -3024,8 +3024,2025 @@
 , nil%0A%7D%0A
+%0A// ensureCheckUpdate ensures the secure dependencies for package name are up-to-date.%0Afunc ensureCheckUpdate(visited map%5Bstring%5Dbool, name string) (bool, error) %7B%0A%09// If the directory ~/.config/secpkg/pkgs/NAME/src/.secdep exists and%0A%09// contains any .secpkg files, ensure these secure dependencies are%0A%09// up-to-date.%0A%09secdepDir := filepath.Join(homedir.SecPkg(), %22pkgs%22, name, %22src%22, %22.secdep%22)%0A%09exists, err := file.Exists(secdepDir)%0A%09if err != nil %7B%0A%09%09return false, err%0A%09%7D%0A%09if !exists %7B%0A%09%09log.Println(%22.secdep: no dependencies found%22)%0A%09%09return false, nil // no dependencies found%0A%09%7D%0A%09log.Printf(%22.secdep: scanning dir '%25s'%5Cn%22, secdepDir)%0A%0A%09// process .secdep directory%0A%09files, err := ioutil.ReadDir(secdepDir)%0A%09if err != nil %7B%0A%09%09return false, err%0A%09%7D%0A%09needsUpdate := false%0A%09for _, fi := range files %7B%0A%09%09if !strings.HasSuffix(fi.Name(), %22.secpkg%22) %7B%0A%09%09%09log.Printf(%22.secdep: skip '%25s'%22, fi.Name())%0A%09%09%09continue // not a .secpkg file%0A%09%09%7D%0A%09%09// load .secpkg file%0A%09%09log.Printf(%22.secdep: load '%25s'%22, fi.Name())%0A%09%09pkg, err := Load(filepath.Join(secdepDir, fi.Name()))%0A%09%09if err != nil %7B%0A%09%09%09return false, err%0A%09%09%7D%0A%09%09// check for cycles%0A%09%09if visited%5Bpkg.Name%5D %7B%0A%09%09%09return false, fmt.Errorf(%22secpkg: dependency cycle detected for package '%25s'%22,%0A%09%09%09%09pkg.Name)%0A%09%09%7D%0A%09%09// check if it is already installed%0A%09%09pkgDir := filepath.Join(homedir.SecPkg(), %22pkgs%22, pkg.Name)%0A%09%09exists, err := file.Exists(pkgDir)%0A%09%09if err != nil %7B%0A%09%09%09return false, err%0A%09%09%7D%0A%09%09visited%5Bpkg.Name%5D = true%0A%09%09if !exists %7B%0A%09%09%09// not installled%0A%09%09%09log.Printf(%22.secdep: package '%25s' not installed%5Cn%22, pkg.Name)%0A%09%09%09needsUpdate = true%0A%09%09%7D else %7B%0A%09%09%09// parse head%0A%09%09%09h, err := hex.Decode(pkg.Head, 32)%0A%09%09%09if err != nil %7B%0A%09%09%09%09return false, err%0A%09%09%09%7D%0A%09%09%09var head %5B32%5Dbyte%0A%09%09%09copy(head%5B:%5D, h)%0A%09%09%09// update%0A%09%09%09log.Printf(%22.secdep: check update for package '%25s'%5Cn%22, pkg.Name)%0A%09%09%09update, err := checkUpdate(visited, pkg.Name)%0A%09%09%09if err != nil %7B%0A%09%09%09%09return false, err%0A%09%09%09%7D%0A%09%09%09if update %7B%0A%09%09%09%09needsUpdate = true%0A%09%09%09%7D%0A%09%09%7D%0A%09%09delete(visited, pkg.Name)%0A%09%7D%0A%0A%09return needsUpdate, nil%0A%7D%0A
- f 4c79a80ca797dd9d47c69892b5c3817b4d0108a1c1a8e88061159f79c1dfb07b secpkg/errors.go
+ f fe65288c5abdad7b5d3d6d9b673e5d8405112a1f4cfa2fda1b8ffb292361b41f secpkg/errors.go
dmppatch 4
@@ -31,16 +31,145 @@
 ors%22%0A)%0A%0A
+// ErrNotInstalled is returned if a package is not installed.%0Avar ErrNotInstalled = errors.New(%22secpkg: package not installed%22)%0A%0A
 // ErrPk
- f 2230859cdfff898af39703f011aa42ba603f56d21b1507dbd4794ea954272c00 secpkg/list.go
- f d9a21d5a65678c51326b1402113ad99f13f43172057c41f1be77949329e21c86 secpkg/update.go
+ f 08d3fc52a13c2d6bb7c419b30ed2ab523399f53df5388982e0560c9f1fffa8b1 secpkg/update.go
dmppatch 70
@@ -749,92 +749,40 @@
 s %7B%0A
-%09%09return false,%0A%09%09%09fmt.Errorf(%22package not installed: '%25s' does not exist%22, pkgDir)%0A
+%09%09return false, ErrNotInstalled%0A
 %09%7D%0A%09
@@ -1562,239 +1562,173 @@
 %09%7D%0A%0A
-%09// 5. If not SKIP_BUILD, query TXT record from _codechain-url.DNS and save it as%0A%09//    URL.%0A%09var URL string%0A%09if !skipBuild %7B%0A%09%09URL, err = ssot.LookupURL(pkg.DNS)%0A%09%09if err != nil %7B%0A%09%09%09os.RemoveAll(pkgDir)%0A%09%09%09return false, err%0A%09%09%7D%0A
+%09// 5. Query TXT record from _codechain-url.DNS and save it as URL.%0A%09URL, err := ssot.LookupURL(pkg.DNS)%0A%09if err != nil %7B%0A%09%09os.RemoveAll(pkgDir)%0A%09%09return false, err%0A
 %09%7D%0A%0A
@@ -1838,87 +1838,140 @@
 %09//%0A
-%09//    - pubKey from TXT must be the same as pubKey or pubKeyRotate from DISK.%0A
+%09//    - pubKey from TXT must be the same as pubKey or pubKeyRotate from DISK%0A%09//      if the signed head from DISK is not expired.%0A
 %09// 
@@ -2215,216 +2215,281 @@
 d %7B%0A
-%09%09if !(shDNS.PubKey() == shDisk.PubKey() %7C%7C%0A%09%09%09shDNS.PubKey() == shDisk.PubKeyRotate()) %7B%0A%09%09%09return false,%0A%09%09%09%09fmt.Errorf(%22secpkg: public key from TXT record does not match public key (or rotate) from disk%22)%0A
+%09%09if err := shDisk.Valid(); err == nil %7B // not expired%0A%09%09%09if !(shDNS.PubKey() == shDisk.PubKey() %7C%7C%0A%09%09%09%09shDNS.PubKey() == shDisk.PubKeyRotate()) %7B%0A%09%09%09%09return false,%0A%09%09%09%09%09fmt.Errorf(%22secpkg: public key from TXT record does not match public key (or rotate) from disk%22)%0A%09%09%09%7D%0A
 %09%09%7D%0A
@@ -2900,86 +2900,605 @@
 %09%7D%0A%0A
-%09// 8. If not SKIP_BUILD, download distribution file from URL/HEAD.tar.gz and%0A
+%09// 8. If SKIP_BUILD, check if HEAD is contained in%0A%09//    ~/.config/secpkg/pkgs/NAME/src/.codchain/hashchain.%0A%09//    If not, set SKIP_BUILD to false.%0A%09//    This can happend if we checked for updates.%0A%09srcDir := filepath.Join(pkgDir, %22src%22)%0A%09if skipBuild %7B%0A%09%09c, err := hashchain.ReadFile(filepath.Join(srcDir, def.HashchainFile))%0A%09%09if err != nil %7B%0A%09%09%09return false, err%0A%09%09%7D%0A%09%09if err := c.Close(); err != nil %7B%0A%09%09%09return false, err%0A%09%09%7D%0A%09%09if err := c.CheckHead(shDNS.HeadBuf()); err != nil %7B%0A%09%09%09skipBuild = false%0A%09%09%7D%0A%09%7D%0A%0A%09// 9. If not SKIP_BUILD, download distribution file from URL/HEAD.tar.gz and%0A
 %09// 
@@ -3907,256 +3907,219 @@
 %09%7D%0A%0A
-%09// 9. If not SKIP_BUILD, apply ~/.config/secpkg/pkgs/NAME/dists/HEAD.tar.gz%0A%09//    to ~/.config/secpkg/pkgs/NAME/src with %60codechain apply%0A%09//    -f ~/.config/secpkg/pkgs/NAME/dists/HEAD.tar.gz -head HEAD%60.%0A%09srcDir := filepath.Join(pkgDir, %22src%22)%0A
+%09// 10. If not SKIP_BUILD, apply ~/.config/secpkg/pkgs/NAME/dists/HEAD.tar.gz%0A%09//     to ~/.config/secpkg/pkgs/NAME/src with %60codechain apply%0A%09//     -f ~/.config/secpkg/pkgs/NAME/dists/HEAD.tar.gz -head HEAD%60.%0A
 %09if 
@@ -4874,83 +4874,83 @@
 %09%7D%0A%0A
-%09// 10. If the directory ~/.config/secpkg/pkgs/NAME/src/.secdep exists and%0A
+%09// 11. If the directory ~/.config/secpkg/pkgs/NAME/src/.secdep exists and%0A
 %09// 
@@ -5252,77 +5252,77 @@
 %09%7D%0A%0A
-%09// 11. If not SKIP_BUILD, %60rm -rf ~/.config/secpkg/pkgs/NAME/build%60%0A
+%09// 12. If not SKIP_BUILD, %60rm -rf ~/.config/secpkg/pkgs/NAME/build%60%0A
 %09bui
@@ -5460,35 +5460,35 @@
 %09%7D%0A%0A
-%09// 12. If not SKIP_BUILD,%0A
+%09// 13. If not SKIP_BUILD,%0A
 %09// 
@@ -5670,80 +5670,80 @@
 %09%7D%0A%0A
-%09// 13. If not SKIP_BUILD, call %60make prefix=~/.config/secpkg/local%60 in%0A
+%09// 14. If not SKIP_BUILD, call %60make prefix=~/.config/secpkg/local%60 in%0A
 %09// 
@@ -6026,89 +6026,89 @@
 %09%7D%0A%0A
-%09// 14. If not SKIP_BUILD, call %60make prefix= ~/.config/secpkg/local install%60 in%0A
+%09// 15. If not SKIP_BUILD, call %60make prefix= ~/.config/secpkg/local install%60 in%0A
 %09// 
@@ -6246,35 +6246,35 @@
 %09%7D%0A%0A
-%09// 15. If not SKIP_BUILD,%0A
+%09// 16. If not SKIP_BUILD,%0A
 %09// 
@@ -6593,36 +6593,36 @@
 %09%7D%0A%0A
-%09// 16. Update signed head:%0A
+%09// 17. Update signed head:%0A
 %09//%0A
@@ -6907,60 +6907,60 @@
 %09%7D%0A%0A
-%09// 17. The software has been successfully updated.%0A
+%09// 18. The software has been successfully updated.%0A
 %09if 
- f 54e18363d59dfcae4b645a3e25f746f644d9aa629a92443361bd37b1dd4e0c94 ssot/command/createpkg.go
+ f bdd60da303429f513e14e65e06fb30a4602051229d6fdcb662e8dd239339d48b ssot/command/createpkg.go
dmppatch 22
@@ -109,16 +109,24 @@
 trings%22%0A
+%09%22time%22%0A
 %0A%09%22githu
@@ -1482,32 +1482,57 @@
 assword string,%0A
+%09validity time.Duration,%0A
 ) error %7B%0A%09head 
@@ -3039,47 +3039,100 @@
  0.%0A
-%09sh := ssot.SignHead(head, 0, *secKey)%0A
+%09sh, err := ssot.SignHead(head, 0, *secKey, nil, validity)%0A%09if err != nil %7B%0A%09%09return err%0A%09%7D%0A
 %0A%09//
@@ -6280,16 +6280,102 @@
 S API%22)%0A
+%09validity := fs.Duration(%22validity%22, ssot.MaximumValidity, %22Validity of signed head%22)%0A
 %09if err 
@@ -7465,48 +7465,59 @@
 ed,%0A
-%09%09%09*customerName, *userName, *password)%0A
+%09%09%09*customerName, *userName, *password, *validity)%0A
 %09%09if
- f 13c6bd1b8f5dd6c560147842916fadeecbdc4c4f56cf67e9326dea95f0e5a269 ssot/command/refresh.go
+ f d1f7c2d3b04dbb0c3d5d3f5eddbb1b6d76fac84cb159273e633d3eb27dc2a23c ssot/command/refresh.go
dmppatch 59
@@ -68,17 +68,76 @@
 trings%22%0A
+%09%22time%22%0A
 %0A
+%09%22github.com/frankbraun/codechain/internal/base64%22%0A
 %09%22github
@@ -493,52 +493,151 @@
 %0A)%0A%0A
-func refresh(secpkgFilename string) error %7B%0A
+func refresh(%0A%09secpkgFilename string,%0A%09validity time.Duration,%0A%09secKeyRotate *%5B64%5Dbyte,%0A%09sigRotate *%5B64%5Dbyte,%0A%09commentRotate %5B%5Dbyte,%0A) error %7B%0A
 %09// 
@@ -1187,147 +1187,84 @@
 %09%7D%0A%0A
-%09// 3. Validate the signed head in ~/.config/ssotpub/pkgs/NAME/signed_head%0A%09//    and make sure the corresponding secret key is available.%0A
+%09// 3. Validate the signed head in ~/.config/ssotpub/pkgs/NAME/signed_head.%0A
 %09log
@@ -1443,180 +1443,8 @@
 %09%7D%0A%0A
-%09secKeyFile := filepath.Join(homedir.SSOTPub(), def.SecretsSubDir, prevSignedHead.PubKey())%0A%09secKey, _, _, err := seckey.Read(secKeyFile)%0A%09if err != nil %7B%0A%09%09return err%0A%09%7D%0A%0A
 %09// 
@@ -2258,88 +2258,833 @@
 %09%7D%0A%0A
-%09// 6. Create a new signed head with the same HEAD, the counter of the previous%0A
+%09// 6. If ROTATE is set, check if ~/.config/ssotput/pkgs/NAME/rotate_to exists.%0A%09//    If it does, abort. Otherwise write public key to rotate to and rotate time%0A%09//    to ~/.config/ssotput/pkgs/NAME/rotate_to.%0A%09rotateToFile := filepath.Join(pkgDir, %22rotate_to%22)%0A%09log.Printf(%226. if -rotate is set, check if '%25s' exists%22, rotateToFile)%0A%09if secKeyRotate != nil %7B%0A%09%09log.Println(%22ROTATE set%22)%0A%09%09exists, err := file.Exists(rotateToFile)%0A%09%09if err != nil %7B%0A%09%09%09return err%0A%09%09%7D%0A%09%09if exists %7B%0A%09%09%09return fmt.Errorf(%22-rotate set with existing file '%25s'%22, rotateToFile)%0A%09%09%7D%0A%09%09err = prevSignedHead.WriteRotateTo(rotateToFile, secKeyRotate,%0A%09%09%09sigRotate, commentRotate, validity)%0A%09%09if err != nil %7B%0A%09%09%09return err%0A%09%09%7D%0A%09%7D else %7B%0A%09%09log.Println(%22ROTATE not set%22)%0A%09%7D%0A%0A%09// 7. Create a new signed head with current HEAD, the counter of the previous%0A
 %09// 
@@ -3353,149 +3353,1207 @@
 c).%0A
-%09log.Println(%226. create a new signed head%22)%0A%09newSignedHead := ssot.SignHead(prevSignedHead.HeadBuf(),%0A%09%09prevSignedHead.Counter()+1, *secKey)%0A
+%09//%0A%09//    If ~/.config/ssotput/pkgs/NAME/rotate_to exists:%0A%09//%0A%09//    - If rotate time has been reached use pubkey from file as PUBKEY and%0A%09//      remove ~/.config/ssotput/pkgs/NAME/rotate_to.%0A%09//    - Otherwise use old PUBKEY and set pubkey from file as PUBKEY_ROTATE.%0A%09log.Println(%227. create a new signed head%22)%0A%09pubKey := prevSignedHead.PubKey()%0A%09var pubKeyRotate *%5B32%5Dbyte%0A%09exists, err = file.Exists(rotateToFile)%0A%09if err != nil %7B%0A%09%09return err%0A%09%7D%0A%09var reached bool%0A%09if exists %7B%0A%09%09log.Println(%22rotate_to file exists%22)%0A%09%09var rotateTo string%0A%09%09rotateTo, reached, err = ssot.ReadRotateTo(rotateToFile)%0A%09%09if err != nil %7B%0A%09%09%09return err%0A%09%09%7D%0A%09%09if reached %7B%0A%09%09%09log.Println(%22reached%22)%0A%09%09%09pubKey = rotateTo%0A%09%09%7D else %7B%0A%09%09%09log.Println(%22set PUBKEY_ROTATE%22)%0A%09%09%09pk, err := base64.Decode(rotateTo, 32)%0A%09%09%09if err != nil %7B%0A%0A%09%09%09%7D%0A%09%09%09pubKeyRotate = new(%5B32%5Dbyte)%0A%09%09%09copy(pubKeyRotate%5B:%5D, pk)%0A%09%09%7D%0A%09%7D%0A%0A%09secKeyFile := filepath.Join(homedir.SSOTPub(), def.SecretsSubDir, pubKey)%0A%09secKey, _, _, err := seckey.Read(secKeyFile)%0A%09if err != nil %7B%0A%09%09return err%0A%09%7D%0A%0A%09newSignedHead, err := ssot.SignHead(prevSignedHead.HeadBuf(), prevSignedHead.Counter()+1,%0A%09%09*secKey, pubKeyRotate, validity)%0A%09if err != nil %7B%0A%09%09return err%0A%09%7D%0A
 %09if 
@@ -4623,92 +4623,177 @@
 err%0A
+%09%7D%0A%09if reached %7B%0A%09%09if err := os.Remove(rotateToFile); err != nil %7B%0A%09%09%09return err%0A%09%09%7D%0A
 %09%7D%0A%0A
-%09// 7. Print DNS TXT record as defined by the .secpkg file and the signed head.%0A
+%09// 8. Print DNS TXT record as defined by the .secpkg file and the signed head.%0A
 %09// 
@@ -4871,48 +4871,48 @@
 rd.%0A
-%09log.Println(%227. print DNS TXT record%22)%0A
+%09log.Println(%228. print DNS TXT record%22)%0A
 %09if 
@@ -5722,16 +5722,70 @@
 ts()%0A%09%7D%0A
+%09rotate := fs.String(%22rotate%22, %22%22, %22Secret key file%22)%0A
 %09verbose
@@ -5822,16 +5822,102 @@
 rbose%22)%0A
+%09validity := fs.Duration(%22validity%22, ssot.MaximumValidity, %22Validity of signed head%22)%0A
 %09if err 
@@ -6075,16 +6075,245 @@
 Help%0A%09%7D%0A
+%09var (%0A%09%09secKeyRotate  *%5B64%5Dbyte%0A%09%09sigRotate     *%5B64%5Dbyte%0A%09%09commentRotate %5B%5Dbyte%0A%09)%0A%09if *rotate != %22%22 %7B%0A%09%09var err error%0A%09%09secKeyRotate, sigRotate, commentRotate, err = seckey.Read(*rotate)%0A%09%09if err != nil %7B%0A%09%09%09return err%0A%09%09%7D%0A%09%7D%0A
 %09for _, 
@@ -6403,58 +6403,113 @@
 me)%0A
-%09%09if err := refresh(secpkgFilename); err != nil %7B%0A
+%09%09err := refresh(secpkgFilename, *validity, secKeyRotate, sigRotate,%0A%09%09%09commentRotate)%0A%09%09if err != nil %7B%0A
 %09%09%09r
- f 212f0fd8779db5c260af34b8cf66b97050222a85a6fe3437fd32a0ef5f1c6c74 ssot/command/signhead.go
+ f 957e885e19bf54bf33384f11a9898e0baae1d8a9e7526b7c21a3e5f5f8a07ff2 ssot/command/signhead.go
dmppatch 86
@@ -98,16 +98,24 @@
 trings%22%0A
+%09%22time%22%0A
 %0A%09%22githu
@@ -195,16 +195,67 @@
 hchain%22%0A
+%09%22github.com/frankbraun/codechain/internal/base64%22%0A
 %09%22github
@@ -1227,54 +1227,153 @@
 %0A%7D%0A%0A
-func signHead(c *hashchain.HashChain) error %7B%0A
+func signHead(%0A%09c *hashchain.HashChain,%0A%09validity time.Duration,%0A%09secKeyRotate *%5B64%5Dbyte,%0A%09sigRotate *%5B64%5Dbyte,%0A%09commentRotate %5B%5Dbyte,%0A) error %7B%0A
 %09// 
@@ -1944,147 +1944,84 @@
 %09%7D%0A%0A
-%09// 3. Validate the signed head in ~/.config/ssotpub/pkgs/NAME/signed_head%0A%09//    and make sure the corresponding secret key is available.%0A
+%09// 3. Validate the signed head in ~/.config/ssotpub/pkgs/NAME/signed_head.%0A
 %09log
@@ -2200,180 +2200,8 @@
 %09%7D%0A%0A
-%09secKeyFile := filepath.Join(homedir.SSOTPub(), def.SecretsSubDir, prevSignedHead.PubKey())%0A%09secKey, _, _, err := seckey.Read(secKeyFile)%0A%09if err != nil %7B%0A%09%09return err%0A%09%7D%0A%0A
 %09// 
@@ -2914,87 +2914,763 @@
 %09%7D%0A%0A
-%09// 6. Create a new signed head with current HEAD, the counter of the previous%0A
+%09// 6. If ROTATE is set, check if ~/.config/ssotput/pkgs/NAME/rotate_to exists.%0A%09//    If it does, abort. Otherwise write public key to rotate to and rotate time%0A%09//    to ~/.config/ssotput/pkgs/NAME/rotate_to.%0A%09rotateToFile := filepath.Join(pkgDir, %22rotate_to%22)%0A%09log.Printf(%226. if -rotate is set, check if '%25s' exists%22, rotateToFile)%0A%09if secKeyRotate != nil %7B%0A%09%09exists, err := file.Exists(rotateToFile)%0A%09%09if err != nil %7B%0A%09%09%09return err%0A%09%09%7D%0A%09%09if exists %7B%0A%09%09%09return fmt.Errorf(%22-rotate set with existing file '%25s'%22, rotateToFile)%0A%09%09%7D%0A%09%09err = prevSignedHead.WriteRotateTo(rotateToFile, secKeyRotate,%0A%09%09%09sigRotate, commentRotate, validity)%0A%09%09if err != nil %7B%0A%09%09%09return err%0A%09%09%7D%0A%09%7D%0A%0A%09// 7. Create a new signed head with current HEAD, the counter of the previous%0A
 %09// 
@@ -3790,72 +3790,74 @@
 ead%0A
-%09//           ~/.config/ssotpub/pkgs/NAME/previous_signed_head%60%0A
+%09//             ~/.config/ssotpub/pkgs/NAME/previous_signed_head%60%0A
 %09// 
@@ -3939,127 +3939,1086 @@
 c).%0A
-%09log.Println(%226. create a new signed head%22)%0A%09newSignedHead := ssot.SignHead(head, prevSignedHead.Counter()+1, *secKey)%0A
+%09//%0A%09//    If ~/.config/ssotput/pkgs/NAME/rotate_to exists:%0A%09//%0A%09//    - If rotate time has been reached use pubkey from file as PUBKEY and%0A%09//      remove ~/.config/ssotput/pkgs/NAME/rotate_to.%0A%09//    - Otherwise use old PUBKEY and set pubkey from file as PUBKEY_ROTATE.%0A%09log.Println(%227. create a new signed head%22)%0A%09pubKey := prevSignedHead.PubKey()%0A%09var pubKeyRotate *%5B32%5Dbyte%0A%09exists, err = file.Exists(rotateToFile)%0A%09if err != nil %7B%0A%09%09return err%0A%09%7D%0A%09var reached bool%0A%09if exists %7B%0A%09%09var rotateTo string%0A%09%09rotateTo, reached, err = ssot.ReadRotateTo(rotateToFile)%0A%09%09if err != nil %7B%0A%09%09%09return err%0A%09%09%7D%0A%09%09if reached %7B%0A%09%09%09pubKey = rotateTo%0A%09%09%7D else %7B%0A%09%09%09pk, err := base64.Decode(rotateTo, 32)%0A%09%09%09if err != nil %7B%0A%0A%09%09%09%7D%0A%09%09%09pubKeyRotate = new(%5B32%5Dbyte)%0A%09%09%09copy(pubKeyRotate%5B:%5D, pk)%0A%09%09%7D%0A%09%7D%0A%0A%09secKeyFile := filepath.Join(homedir.SSOTPub(), def.SecretsSubDir, pubKey)%0A%09secKey, _, _, err := seckey.Read(secKeyFile)%0A%09if err != nil %7B%0A%09%09return err%0A%09%7D%0A%0A%09newSignedHead, err := ssot.SignHead(head, prevSignedHead.Counter()+1,%0A%09%09*secKey, pubKeyRotate, validity)%0A%09if err != nil %7B%0A%09%09return err%0A%09%7D%0A
 %09if 
@@ -5091,71 +5091,156 @@
 %0A%09%7D%0A
+%09if reached %7B%0A%09%09if err := os.Remove(rotateToFile); err != nil %7B%0A%09%09%09return err%0A%09%09%7D%0A%09%7D%0A
 %0A
-%09// 7. If the HEAD changed, save the current distribution to:%0A
+%09// 8. If the HEAD changed, save the current distribution to:%0A
 %09// 
@@ -5317,78 +5317,78 @@
 %60).%0A
-%09log.Println(%227. if the HEAD changed, save the current distribution%22)%0A
+%09log.Println(%228. if the HEAD changed, save the current distribution%22)%0A
 %09h :
@@ -5929,86 +5929,86 @@
 %09%7D%0A%0A
-%09// 8. If the HEAD changed, lookup the download URL and print where to upload%0A
+%09// 9. If the HEAD changed, lookup the download URL and print where to upload%0A
 %09// 
@@ -6090,72 +6090,72 @@
 .gz%0A
-%09log.Println(%228. if the HEAD changed, lookup the download URL%22)%0A
+%09log.Println(%229. if the HEAD changed, lookup the download URL%22)%0A
 %09if 
@@ -6388,201 +6388,207 @@
 %09%7D%0A%0A
-%09// 9. Print DNS TXT record as defined by the .secpkg and the signed head.%0A%09// If TXT records are to be published automatically, publish the TXT record.%0A%09log.Println(%229. print DNS TXT record%22)%0A
+%09// 10. Print DNS TXT record as defined by the .secpkg and the signed head.%0A%09//     If TXT records are to be published automatically, publish the TXT record.%0A%09log.Println(%2210. print DNS TXT record%22)%0A
 %09if 
@@ -7060,139 +7060,139 @@
 S)%0A%0A
-%09// 10. If the HEAD changed, update the .secpkg file accordingly.%0A%09log.Println(%2210. if the HEAD changed, update the .secpkg file%22)%0A
+%09// 11. If the HEAD changed, update the .secpkg file accordingly.%0A%09log.Println(%2211. if the HEAD changed, update the .secpkg file%22)%0A
 %09if 
@@ -7843,16 +7843,70 @@
 ts()%0A%09%7D%0A
+%09rotate := fs.String(%22rotate%22, %22%22, %22Secret key file%22)%0A
 %09verbose
@@ -7939,24 +7939,110 @@
 e verbose%22)%0A
+%09validity := fs.Duration(%22validity%22, ssot.MaximumValidity, %22Validity of signed head%22)%0A
 %09if err := f
@@ -8295,16 +8295,229 @@
 Close()%0A
+%09var (%0A%09%09secKeyRotate  *%5B64%5Dbyte%0A%09%09sigRotate     *%5B64%5Dbyte%0A%09%09commentRotate %5B%5Dbyte%0A%09)%0A%09if *rotate != %22%22 %7B%0A%09%09secKeyRotate, sigRotate, commentRotate, err = seckey.Read(*rotate)%0A%09%09if err != nil %7B%0A%09%09%09return err%0A%09%09%7D%0A%09%7D%0A
 %09// add 
@@ -8624,46 +8624,98 @@
 ) %7B%0A
-%09%09if err := signHead(c); err != nil %7B%0A
+%09%09err := signHead(c, *validity, secKeyRotate, sigRotate, commentRotate)%0A%09%09if err != nil %7B%0A
 %09%09%09i
+ f 0b4b2a826f1f34fcfe382a656b5fe4dd854293df8a7200525c674dfbb927878c ssot/command/status.go
utf8file 58
package command

import (
	"flag"
	"fmt"
	"os"
	"path/filepath"

	"github.com/frankbraun/codechain/ssot"
	"github.com/frankbraun/codechain/util/file"
	"github.com/frankbraun/codechain/util/homedir"
	"github.com/frankbraun/codechain/util/log"
)

func status() error {
	pkgDir := filepath.Join(homedir.SSOTPub(), "pkgs")
	pkgs, err := file.List(pkgDir)
	if err != nil {
		return err
	}
	for _, pkg := range pkgs {
		filename := filepath.Join(pkgDir, pkg, ssot.File)
		sh, err := ssot.Load(filename)
		if err != nil {
			return err
		}

		fmt.Printf("%s:\n", filename)
		fmt.Println(sh.MarshalText())
	}
	return nil
}

// Status implements the ssotpub 'status' command.
func Status(argv0 string, args ...string) error {
	fs := flag.NewFlagSet(argv0, flag.ContinueOnError)
	fs.Usage = func() {
		fmt.Fprintf(os.Stderr, "Usage: %s\n", argv0)
		fmt.Fprintf(os.Stderr, "Show status of managed packages.\n")
		fs.PrintDefaults()
	}
	verbose := fs.Bool("v", false, "Be verbose")
	if err := fs.Parse(args); err != nil {
		return err
	}
	if *verbose {
		log.Std = log.NewStd(os.Stdout)
	}
	if fs.NArg() > 0 {
		fs.Usage()
		return flag.ErrHelp
	}
	if err := status(); err != nil {
		return err
	}
	return nil
}

- f ae7a52d09ffbfbb4d0f337a0b11f35f8218d8f728df5a0171684a042173482eb ssot/doc.go
+ f 5573fd9971e8a055d701253e8590177a07cf8c0b995164baa19cef9838a67081 ssot/doc.go
dmppatch 53
@@ -2888,145 +2888,83 @@
 s.%0A%0A
-   3. Validate the signed head in ~/.config/ssotpub/pkgs/NAME/signed_head%0A      and make sure the corresponding secret key is available.%0A
+   3. Validate the signed head in ~/.config/ssotpub/pkgs/NAME/signed_head.%0A
 %0A   
@@ -3191,86 +3191,307 @@
 s.%0A%0A
-   6. Create a new signed head with current HEAD, the counter of the previous%0A
+   6. If ROTATE is set, check if ~/.config/ssotput/pkgs/NAME/rotate_to exists.%0A      If it does, abort. Otherwise write public key to rotate to and rotate time%0A      (see below) to ~/.config/ssotput/pkgs/NAME/rotate_to.%0A%0A   7. Create a new signed head with current HEAD, the counter of the previous%0A
     
@@ -3754,69 +3754,331 @@
 ).%0A%0A
-   7. If the HEAD changed, save the current distribution to:%0A
+      If ~/.config/ssotput/pkgs/NAME/rotate_to exists:%0A%0A      - If rotate time has been reached use pubkey from file as PUBKEY and%0A        remove ~/.config/ssotput/pkgs/NAME/rotate_to.%0A      - Otherwise use old PUBKEY and set pubkey from file as PUBKEY_ROTATE.%0A%0A   8. If the HEAD changed, save the current distribution to:%0A
     
@@ -4155,85 +4155,85 @@
 ).%0A%0A
-   8. If the HEAD changed, lookup the download URL and print where to upload%0A
+   9. If the HEAD changed, lookup the download URL and print where to upload%0A
     
@@ -4314,87 +4314,87 @@
 gz%0A%0A
-   9. Print DNS TXT record as defined by the .secpkg file and the signed head.%0A
+  10. Print DNS TXT record as defined by the .secpkg file and the signed head.%0A
     
@@ -4474,72 +4474,72 @@
 d.%0A%0A
-  10. If the HEAD changed, update the .secpkg file accordingly.%0A
+  11. If the HEAD changed, update the .secpkg file accordingly.%0A
 %0A  A
@@ -5031,145 +5031,83 @@
 s.%0A%0A
-   3. Validate the signed head in ~/.config/ssotpub/pkgs/NAME/signed_head%0A      and make sure the corresponding secret key is available.%0A
+   3. Validate the signed head in ~/.config/ssotpub/pkgs/NAME/signed_head.%0A
 %0A   
@@ -5374,87 +5374,308 @@
 s.%0A%0A
-   6. Create a new signed head with the same HEAD, the counter of the previous%0A
+   6. If ROTATE is set, check if ~/.config/ssotput/pkgs/NAME/rotate_to exists.%0A      If it does, abort. Otherwise write public key to rotate to and rotate time%0A      (see below) to ~/.config/ssotput/pkgs/NAME/rotate_to.%0A%0A   7. Create a new signed head with the same HEAD, the counter of the previous%0A
     
@@ -5938,87 +5938,349 @@
 ).%0A%0A
-   7. Print DNS TXT record as defined by the .secpkg file and the signed head.%0A
+      If ~/.config/ssotput/pkgs/NAME/rotate_to exists:%0A%0A      - If rotate time has been reached use pubkey from file as PUBKEY and%0A        remove ~/.config/ssotput/pkgs/NAME/rotate_to.%0A      - Otherwise use old PUBKEY and set pubkey from file as PUBKEY_ROTATE.%0A%0A   8. Print DNS TXT record as defined by the .secpkg file and the signed head.%0A
     
@@ -6505,68 +6505,435 @@
 d.%0A%0A
-TODO%0A%0AThe following should be specified:%0A
+Rotate time calculation%0A
 %0A
-  - Key rotation.%0A
+The earliest time a PUBKEY_ROTATE can be used as PUBKEY is when the previous%0Asigned head (without PUBKEY_ROTATE) has expired. This gives clients time to%0Alearn about PUBKEY_ROTATE. To give some extra time we take the time span a%0Asigned head with PUBKEY_ROTATE is valid after the signed head without%0APUBKEY_ROTATE has expired and divide it by three. The rotate time is set to the%0Aend of the first third.%0A
 */%0Ap
- f 5d081af81cfd597953efe491d7c744f17966a4e80249eed0e8ce55cfed4e7ce5 ssot/errors.go
+ f b1a4f5d0e541c82b00315b30301204f11ee84747a267dd190f6cd3da758e140d ssot/errors.go
dmppatch 3
@@ -518,8 +518,272 @@
 pired%22)%0A
+%0A// ErrValidityTooLong is returned if the validity is too long.%0Avar ErrValidityTooLong = errors.New(%22ssot: validity is too long%22)%0A%0A// ErrValidityTooShort is returned if the validity is too short.%0Avar ErrValidityTooShort = errors.New(%22ssot: validity is too short%22)%0A
- f 71845c24d0c3247e05dbc40e2cf3324144b6f2140cf97f556ffda086add11a2b ssot/rotatefile.go
+ f 8ebc6ada35f56ae8f3d148523a05e21219f87169752f13525ca6c5306c5f41d4 ssot/rotatefile.go
dmppatch 13
@@ -20,15 +20,8 @@
 t (%0A
-%09%22fmt%22%0A
 %09%22io
@@ -98,16 +98,60 @@
 l/file%22%0A
+%09%22github.com/frankbraun/codechain/util/log%22%0A
 )%0A%0A// Ro
@@ -973,53 +973,59 @@
 %0A%09%7D%0A
-%09fmt.Printf(%22%25s: written%5Cn%22, signedHeadFile)%0A
+%09log.Printf(%22ssot: %25s: written%5Cn%22, signedHeadFile)%0A
 %09ret
+ f 5f57e53f3d059d207dabb2c27955f04455e96fca93a332c85caa7c904ed5d5fa ssot/rotateto.go
utf8file 86
package ssot

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"os"
	"strings"
	"time"

	"github.com/frankbraun/codechain/internal/base64"
	utime "github.com/frankbraun/codechain/util/time"
)

func (sh *SignedHead) calculateRotateTime(validity time.Duration) int64 {
	now := utime.Now()
	rest := now - sh.validTo
	if rest < 0 {
		rest = 0
	}
	rotateIn := int64(validity/time.Second) - rest
	rotateIn /= 3
	if rotateIn < 0 {
		rotateIn = 0
	}
	return now + rotateIn
}

// WriteRotateTo writes "rotate to" file to given filename.
func (sh *SignedHead) WriteRotateTo(
	filename string,
	secKeyRotate *[64]byte,
	sigRotate *[64]byte,
	commentRotate []byte,
	validity time.Duration,
) error {
	rotateTime := sh.calculateRotateTime(validity)
	f, err := os.Create(filename)
	if err != nil {
		return err
	}
	defer f.Close()
	_, err = fmt.Fprintf(f, "%s %s", base64.Encode(secKeyRotate[32:]),
		base64.Encode(sigRotate[:]))
	if err != nil {
		return err
	}
	if commentRotate != nil {
		_, err := fmt.Fprintf(f, " %s", commentRotate)
		if err != nil {
			return err
		}
	}
	_, err = fmt.Fprintf(f, "\n%s\n", utime.Format(rotateTime))
	if err != nil {
		return err
	}
	return nil
}

// ReadRotateTo reads "rotate to" file from given filename and returns the
// public key to rotate to and a bool indicating if the rotation time has been
// reached.
func ReadRotateTo(filename string) (string, bool, error) {
	c, err := ioutil.ReadFile(filename)
	if err != nil {
		return "", false, err
	}
	lines := bytes.SplitN(c, []byte("\n"), 2)
	line0 := strings.SplitN(string(lines[0]), " ", 3)
	line1 := string(bytes.TrimSpace(lines[1]))
	if _, err := base64.Decode(line0[0], 32); err != nil {
		return "", false, err
	}
	rotateTo := line0[0]
	rotateTime, err := utime.Parse(line1)
	if err != nil {
		return "", false, err
	}
	var reached bool
	if rotateTime <= utime.Now() {
		reached = true
	}
	return rotateTo, reached, nil
}

- f 3b0d6d48ff61988f4ebc7048290c225ba184d464b27056602f83053e6c494e1b ssot/signhead.go
+ f e6fd521ceb57cd11956367254895a69de27d03a7adf5d4aa3a33bdba747170ca ssot/signhead.go
dmppatch 24
@@ -107,84 +107,149 @@
 ad.%0A
-func SignHead(head %5B32%5Dbyte, counter uint64, secKey %5B64%5Dbyte) *SignedHead %7B%0A
+func SignHead(%0A%09head %5B32%5Dbyte,%0A%09counter uint64,%0A%09secKey %5B64%5Dbyte,%0A%09pubKeyRotate *%5B32%5Dbyte,%0A%09validity time.Duration,%0A) (*SignedHead, error) %7B%0A
 %09var
@@ -300,44 +300,81 @@
 :%5D)%0A
-%09// TODO: allow to set pubKeyRotate%0A
+%09if pubKeyRotate != nil %7B%0A%09%09copy(sh.pubKeyRotate%5B:%5D, pubKeyRotate%5B:%5D)%0A%09%7D%0A
 %09now
@@ -405,53 +405,8 @@
 x()%0A
-%09// TODO: allow to set validFrom and validTo%0A
 %09sh.
@@ -425,44 +425,195 @@
 now%0A
-%09sh.validTo = now + MaximumValidity%0A
+%09if validity %3E MaximumValidity %7B%0A%09%09return nil, ErrValidityTooLong%0A%09%7D%0A%09if validity %3C MinimumValidity %7B%0A%09%09return nil, ErrValidityTooShort%0A%09%7D%0A%09sh.validTo = now + int64(validity/time.Second)%0A
 %09sh.
@@ -750,18 +750,23 @@
 ig)%0A
-%09return &sh%0A
+%09return &sh, nil%0A
 %7D%0A
- f 646f91222a721bf10f5bc0024d6b0bfcf7e42fd075fda8909d677fff55b8b220 ssot/ssot.go
+ f 2f8aa0dd4c00de76db2760133f904e139c26b0eed0da9a59f087e8e2b492bda2 ssot/ssot.go
dmppatch 38
@@ -16,16 +16,25 @@
 mport (%0A
+%09%22bytes%22%0A
 %09%22encodi
@@ -98,17 +98,51 @@
 %22%0A%09%22os%22%0A
+%09%22time%22%0A
 %0A
+%09%22github.com/fatih/color%22%0A
 %09%22github
@@ -276,16 +276,60 @@
 il/hex%22%0A
+%09%22github.com/frankbraun/codechain/util/log%22%0A
 %09%22golang
@@ -479,57 +479,140 @@
 ds.%0A
-const MaximumValidity = 30 * 24 * 60 * 60 // 30d%0A
+const MaximumValidity = 30 * 24 * time.Hour // 30d%0A%0A// MinimumValidity of signed heads.%0Aconst MinimumValidity = 1 * time.Hour // 1h%0A
 %0A// 
@@ -1923,16 +1923,858 @@
 %5B:%5D)%0A%7D%0A%0A
+// MarshalText marshals signed head as text (for status output).%0Afunc (sh *SignedHead) MarshalText() string %7B%0A%09var (%0A%09%09b       bytes.Buffer%0A%09%09expired string%0A%09)%0A%09validFrom := time.Unix(sh.validFrom, 0)%0A%09validTo := time.Unix(sh.validTo, 0)%0A%09if err := sh.Valid(); err == ErrSignedHeadExpired %7B%0A%09%09expired = color.RedString(%22 EXPIRED!%22)%0A%09%7D%0A%09fmt.Fprintf(&b, %22PUBKEY:        %25s%5Cn%22, base64.Encode(sh.pubKey%5B:%5D))%0A%09fmt.Fprintf(&b, %22PUBKEY_ROTATE: %25s%5Cn%22, base64.Encode(sh.pubKeyRotate%5B:%5D))%0A%09fmt.Fprintf(&b, %22VALID_FROM:    %25s%5Cn%22, validFrom.Format(time.RFC3339))%0A%09fmt.Fprintf(&b, %22VALID_TO:      %25s%25s%5Cn%22, validTo.Format(time.RFC3339), expired)%0A%09fmt.Fprintf(&b, %22COUNTER:       %25d%5Cn%22, sh.counter)%0A%09fmt.Fprintf(&b, %22HEAD:          %25s%5Cn%22, hex.Encode(sh.head%5B:%5D))%0A%09fmt.Fprintf(&b, %22SIGNATURE:     %25s%5Cn%22, base64.Encode(sh.signature%5B:%5D))%0A%09return b.String()%0A%7D%0A%0A
 func unm
@@ -4143,65 +4143,71 @@
 l %7B%0A
-%09%09%09fmt.Fprintf(os.Stderr, %22cannot unmarshal: %25s%5Cn%22, txt)%0A
+%09%09%09fmt.Fprintf(os.Stderr, %22ssot: cannot unmarshal: %25s%5Cn%22, txt)%0A
 %09%09%09s
@@ -4281,59 +4281,65 @@
 %09%09%7D%0A
-%09%09fmt.Printf(%22signed head found: %25s%5Cn%22, sh.Head())%0A
+%09%09log.Printf(%22ssot: signed head found: %25s%5Cn%22, sh.Head())%0A
 %09%09if
@@ -4375,46 +4375,52 @@
 l %7B%0A
-%09%09%09fmt.Printf(%22not valid: %25v%5Cn%22, err)%0A
+%09%09%09fmt.Printf(%22ssot: not valid: %25v%5Cn%22, err)%0A
 %09%09%09s
- f d6abd4065e8124f26684e7ca81f7a21a4568432708034f83926102dfb70436d0 ssot/ssot_test.go
+ f c17bed61a1635446ca92363cbee39b81518ca4cae432e8c813fd019ea5286030 ssot/ssot_test.go
dmppatch 9
@@ -42,16 +42,24 @@
 esting%22%0A
+%09%22time%22%0A
 %0A%09%22githu
@@ -548,37 +548,598 @@
 ec)%0A
-%09sh := SignHead(head, 0, sk)%0A
+%0A%09// error cases%0A%09_, err = SignHead(head, 0, sk, nil, MinimumValidity-time.Second)%0A%09if err != ErrValidityTooShort %7B%0A%09%09t.Error(%22SignHead() should fail with ErrValidityTooShort%22)%0A%09%7D%0A%09_, err = SignHead(head, 0, sk, nil, MaximumValidity+time.Second)%0A%09if err != ErrValidityTooLong %7B%0A%09%09t.Error(%22SignHead() should fail with ErrValidityTooLong%22)%0A%09%7D%0A%0A%09// happy cases%0A%09_, err = SignHead(head, 0, sk, nil, MinimumValidity)%0A%09if err != nil %7B%0A%09%09t.Fatalf(%22SignHead() failed: %25v%22, err)%0A%09%7D%0A%09sh, err := SignHead(head, 0, sk, nil, MaximumValidity)%0A%09if err != nil %7B%0A%09%09t.Fatalf(%22SignHead() failed: %25v%22, err)%0A%09%7D%0A
 %09txt
- f e95ae34de66f0bf59906bedac5aea9778a913562295f45b0a5282be7505706e1 tree/tree.go
+ f 3ffaf919ade3c8acf0540a3d3181eee32e82ced0df5dda2caa2218520b167f92 tree/tree.go
dmppatch 15
@@ -4093,126 +4093,286 @@
 %0A%7D%0A%0A
-// printList prints a list of entries in the canonical tree list format.%0Afunc printList(entries %5B%5DListEntry) %5B%5Dbyte %7B%0A
+// PrintList prints a list of (sorted) entries in the canonical tree list%0A// format.%0A//%0A// This is a convience function to bring a list of entries returned by the%0A// List functions into the format returned by the ListBytes function.%0Afunc PrintList(entries %5B%5DListEntry) %5B%5Dbyte %7B%0A
 %09var
@@ -4859,40 +4859,40 @@
 %0A%09%7D%0A
-%09return printList(entries), nil%0A
+%09return PrintList(entries), nil%0A
 %7D%0A%0A/
@@ -5136,50 +5136,50 @@
 e %7B%0A
-%09return sha256.Sum256(printList(entries))%0A
+%09return sha256.Sum256(PrintList(entries))%0A
 %7D%0A%0A/
- f 8e75f529c51882f12aff2cfb6fafbcd8512bc69e323ae51a7eafe49d569874d0 util/file/file.go
+ f 33b7a6dd0a1d4a30114def6511b892bce9aed8144ac3f17cabaf8bf532f0b200 util/file/file.go
dmppatch 3
@@ -5018,28 +5018,461 @@
 return err%0A%09%7D%0A%09return nil%0A%7D%0A
+%0A// List all entries in dir return them as string array.%0Afunc List(dir string) (%5B%5Dstring, error) %7B%0A%09exists, err := Exists(dir)%0A%09if err != nil %7B%0A%09%09return nil, err%0A%09%7D%0A%09if !exists %7B%0A%09%09return nil, fmt.Errorf(%22directory '%25s' does not exist%22, dir)%0A%09%7D%0A%09files, err := ioutil.ReadDir(dir)%0A%09if err != nil %7B%0A%09%09return nil, err%0A%09%7D%0A%09var entries %5B%5Dstring%0A%09for _, fi := range files %7B%0A%09%09entries = append(entries, fi.Name())%0A%09%7D%0A%09return entries, nil%0A%7D%0A
- f 9d0b067f43ca3f0428c7ec521ce4b05b08244453b68a8d770c19d40fb9c3e877 vendor/golang.org/x/crypto/ed25519/ed25519.go
+ f e3302b1ed23a56c8ea05f9a247339e481f3f248733ae7e8800588738a8b7ce16 vendor/golang.org/x/crypto/ed25519/ed25519.go
dmppatch 4
@@ -153,16 +153,196 @@
  file.%0A%0A
+// In Go 1.13, the ed25519 package was promoted to the standard library as%0A// crypto/ed25519, and this package became a wrapper for the standard library one.%0A//%0A// +build !go1.13%0A%0A
 // Packa
+ f 9c11d0911e5657fec3c817f5cb164cc3ce77cdaebf15878f3c727ca0a8f67395 vendor/golang.org/x/crypto/ed25519/ed25519_go113.go
utf8file 74
// Copyright 2019 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.13

// Package ed25519 implements the Ed25519 signature algorithm. See
// https://ed25519.cr.yp.to/.
//
// These functions are also compatible with the “Ed25519” function defined in
// RFC 8032. However, unlike RFC 8032's formulation, this package's private key
// representation includes a public key suffix to make multiple signing
// operations with the same key more efficient. This package refers to the RFC
// 8032 private key as the “seed”.
//
// Beginning with Go 1.13, the functionality of this package was moved to the
// standard library as crypto/ed25519. This package only acts as a compatibility
// wrapper.
package ed25519

import (
	"crypto/ed25519"
	"io"
)

const (
	// PublicKeySize is the size, in bytes, of public keys as used in this package.
	PublicKeySize = 32
	// PrivateKeySize is the size, in bytes, of private keys as used in this package.
	PrivateKeySize = 64
	// SignatureSize is the size, in bytes, of signatures generated and verified by this package.
	SignatureSize = 64
	// SeedSize is the size, in bytes, of private key seeds. These are the private key representations used by RFC 8032.
	SeedSize = 32
)

// PublicKey is the type of Ed25519 public keys.
//
// This type is an alias for crypto/ed25519's PublicKey type.
// See the crypto/ed25519 package for the methods on this type.
type PublicKey = ed25519.PublicKey

// PrivateKey is the type of Ed25519 private keys. It implements crypto.Signer.
//
// This type is an alias for crypto/ed25519's PrivateKey type.
// See the crypto/ed25519 package for the methods on this type.
type PrivateKey = ed25519.PrivateKey

// GenerateKey generates a public/private key pair using entropy from rand.
// If rand is nil, crypto/rand.Reader will be used.
func GenerateKey(rand io.Reader) (PublicKey, PrivateKey, error) {
	return ed25519.GenerateKey(rand)
}

// NewKeyFromSeed calculates a private key from a seed. It will panic if
// len(seed) is not SeedSize. This function is provided for interoperability
// with RFC 8032. RFC 8032's private keys correspond to seeds in this
// package.
func NewKeyFromSeed(seed []byte) PrivateKey {
	return ed25519.NewKeyFromSeed(seed)
}

// Sign signs the message with privateKey and returns a signature. It will
// panic if len(privateKey) is not PrivateKeySize.
func Sign(privateKey PrivateKey, message []byte) []byte {
	return ed25519.Sign(privateKey, message)
}

// Verify reports whether sig is a valid signature of message by publicKey. It
// will panic if len(publicKey) is not PublicKeySize.
func Verify(publicKey PublicKey, message, sig []byte) bool {
	return ed25519.Verify(publicKey, message, sig)
}

- f a42b93491e55348b0ee7ad3ae1a86947b64bff63d69004ed2e83236a4fe5ff37 vendor/golang.org/x/crypto/poly1305/mac_noasm.go
+ f 48b77d89600bee71e59e6ab9a3734a1afe783f5b224b847d7303b2bd2fbb4f11 vendor/golang.org/x/crypto/poly1305/mac_noasm.go
dmppatch 5
@@ -157,41 +157,50 @@
 e.%0A%0A
-// +build !amd64 gccgo appengine%0A
+// +build !amd64,!ppc64le gccgo appengine%0A
 %0Apac
- f b982016ff7d2da9630db5efcaadd328edf47d12e42066b95092d1ed235d3caae vendor/golang.org/x/crypto/poly1305/sum_noasm.go
+ f 52e50f9161372c853958b3954ac2cd8e295dda34c9fb0c1e4e073c15d6b1c7f5 vendor/golang.org/x/crypto/poly1305/sum_noasm.go
dmppatch 5
@@ -157,72 +157,81 @@
 e.%0A%0A
-// +build s390x,!go1.11 !arm,!amd64,!s390x gccgo appengine nacl%0A
+// +build s390x,!go1.11 !arm,!amd64,!s390x,!ppc64le gccgo appengine nacl%0A
 %0Apac
+ f 0dc5b775c927841fe0dcfbdc20eabcc591c106c7c548d4df51ecb16e1a28587a vendor/golang.org/x/crypto/poly1305/sum_ppc64le.go
utf8file 69
// Copyright 2019 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build ppc64le,!gccgo,!appengine

package poly1305

//go:noescape
func initialize(state *[7]uint64, key *[32]byte)

//go:noescape
func update(state *[7]uint64, msg []byte)

//go:noescape
func finalize(tag *[TagSize]byte, state *[7]uint64)

// Sum generates an authenticator for m using a one-time key and puts the
// 16-byte result into out. Authenticating two different messages with the same
// key allows an attacker to forge messages at will.
func Sum(out *[16]byte, m []byte, key *[32]byte) {
	h := newMAC(key)
	h.Write(m)
	h.Sum(out)
}

func newMAC(key *[32]byte) (h mac) {
	initialize(&h.state, key)
	return
}

type mac struct {
	state [7]uint64 // := uint64{ h0, h1, h2, r0, r1, pad0, pad1 }

	buffer [TagSize]byte
	offset int
}

func (h *mac) Write(p []byte) (n int, err error) {
	n = len(p)
	if h.offset > 0 {
		remaining := TagSize - h.offset
		if n < remaining {
			h.offset += copy(h.buffer[h.offset:], p)
			return n, nil
		}
		copy(h.buffer[h.offset:], p[:remaining])
		p = p[remaining:]
		h.offset = 0
		update(&h.state, h.buffer[:])
	}
	if nn := len(p) - (len(p) % TagSize); nn > 0 {
		update(&h.state, p[:nn])
		p = p[nn:]
	}
	if len(p) > 0 {
		h.offset += copy(h.buffer[h.offset:], p)
	}
	return n, nil
}

func (h *mac) Sum(out *[16]byte) {
	state := h.state
	if h.offset > 0 {
		update(&state, h.buffer[:h.offset])
	}
	finalize(out, &state)
}

+ f e954a5d54d9f97fce99ab681bc214e11347a721bf425380251081697f2b3ce3f vendor/golang.org/x/crypto/poly1305/sum_ppc64le.s
utf8file 248
// Copyright 2019 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build ppc64le,!gccgo,!appengine

#include "textflag.h"

// This was ported from the amd64 implementation.

#define POLY1305_ADD(msg, h0, h1, h2, t0, t1, t2) \
	MOVD (msg), t0;  \
	MOVD 8(msg), t1; \
	MOVD $1, t2;     \
	ADDC t0, h0, h0; \
	ADDE t1, h1, h1; \
	ADDE t2, h2;     \
	ADD  $16, msg

#define POLY1305_MUL(h0, h1, h2, r0, r1, t0, t1, t2, t3, t4, t5) \
	MULLD  r0, h0, t0;  \
	MULLD  r0, h1, t4;  \
	MULHDU r0, h0, t1;  \
	MULHDU r0, h1, t5;  \
	ADDC   t4, t1, t1;  \
	MULLD  r0, h2, t2;  \
	ADDZE  t5;          \
	MULHDU r1, h0, t4;  \
	MULLD  r1, h0, h0;  \
	ADD    t5, t2, t2;  \
	ADDC   h0, t1, t1;  \
	MULLD  h2, r1, t3;  \
	ADDZE  t4, h0;      \
	MULHDU r1, h1, t5;  \
	MULLD  r1, h1, t4;  \
	ADDC   t4, t2, t2;  \
	ADDE   t5, t3, t3;  \
	ADDC   h0, t2, t2;  \
	MOVD   $-4, t4;     \
	MOVD   t0, h0;      \
	MOVD   t1, h1;      \
	ADDZE  t3;          \
	ANDCC  $3, t2, h2;  \
	AND    t2, t4, t0;  \
	ADDC   t0, h0, h0;  \
	ADDE   t3, h1, h1;  \
	SLD    $62, t3, t4; \
	SRD    $2, t2;      \
	ADDZE  h2;          \
	OR     t4, t2, t2;  \
	SRD    $2, t3;      \
	ADDC   t2, h0, h0;  \
	ADDE   t3, h1, h1;  \
	ADDZE  h2

DATA ·poly1305Mask<>+0x00(SB)/8, $0x0FFFFFFC0FFFFFFF
DATA ·poly1305Mask<>+0x08(SB)/8, $0x0FFFFFFC0FFFFFFC
GLOBL ·poly1305Mask<>(SB), RODATA, $16

// func update(state *[7]uint64, msg []byte)

TEXT ·update(SB), $0-32
	MOVD state+0(FP), R3
	MOVD msg_base+8(FP), R4
	MOVD msg_len+16(FP), R5

	MOVD 0(R3), R8   // h0
	MOVD 8(R3), R9   // h1
	MOVD 16(R3), R10 // h2
	MOVD 24(R3), R11 // r0
	MOVD 32(R3), R12 // r1

	CMP R5, $16
	BLT bytes_between_0_and_15

loop:
	POLY1305_ADD(R4, R8, R9, R10, R20, R21, R22)

multiply:
	POLY1305_MUL(R8, R9, R10, R11, R12, R16, R17, R18, R14, R20, R21)
	ADD $-16, R5
	CMP R5, $16
	BGE loop

bytes_between_0_and_15:
	CMP  $0, R5
	BEQ  done
	MOVD $0, R16 // h0
	MOVD $0, R17 // h1

flush_buffer:
	CMP R5, $8
	BLE just1

	MOVD $8, R21
	SUB  R21, R5, R21

	// Greater than 8 -- load the rightmost remaining bytes in msg
	// and put into R17 (h1)
	MOVD (R4)(R21), R17
	MOVD $16, R22

	// Find the offset to those bytes
	SUB R5, R22, R22
	SLD $3, R22

	// Shift to get only the bytes in msg
	SRD R22, R17, R17

	// Put 1 at high end
	MOVD $1, R23
	SLD  $3, R21
	SLD  R21, R23, R23
	OR   R23, R17, R17

	// Remainder is 8
	MOVD $8, R5

just1:
	CMP R5, $8
	BLT less8

	// Exactly 8
	MOVD (R4), R16

	CMP $0, R17

	// Check if we've already set R17; if not
	// set 1 to indicate end of msg.
	BNE  carry
	MOVD $1, R17
	BR   carry

less8:
	MOVD  $0, R16   // h0
	MOVD  $0, R22   // shift count
	CMP   R5, $4
	BLT   less4
	MOVWZ (R4), R16
	ADD   $4, R4
	ADD   $-4, R5
	MOVD  $32, R22

less4:
	CMP   R5, $2
	BLT   less2
	MOVHZ (R4), R21
	SLD   R22, R21, R21
	OR    R16, R21, R16
	ADD   $16, R22
	ADD   $-2, R5
	ADD   $2, R4

less2:
	CMP   $0, R5
	BEQ   insert1
	MOVBZ (R4), R21
	SLD   R22, R21, R21
	OR    R16, R21, R16
	ADD   $8, R22

insert1:
	// Insert 1 at end of msg
	MOVD $1, R21
	SLD  R22, R21, R21
	OR   R16, R21, R16

carry:
	// Add new values to h0, h1, h2
	ADDC R16, R8
	ADDE R17, R9
	ADDE $0, R10
	MOVD $16, R5
	ADD  R5, R4
	BR   multiply

done:
	// Save h0, h1, h2 in state
	MOVD R8, 0(R3)
	MOVD R9, 8(R3)
	MOVD R10, 16(R3)
	RET

// func initialize(state *[7]uint64, key *[32]byte)
TEXT ·initialize(SB), $0-16
	MOVD state+0(FP), R3
	MOVD key+8(FP), R4

	// state[0...7] is initialized with zero
	// Load key
	MOVD 0(R4), R5
	MOVD 8(R4), R6
	MOVD 16(R4), R7
	MOVD 24(R4), R8

	// Address of key mask
	MOVD $·poly1305Mask<>(SB), R9

	// Save original key in state
	MOVD R7, 40(R3)
	MOVD R8, 48(R3)

	// Get mask
	MOVD (R9), R7
	MOVD 8(R9), R8

	// And with key
	AND R5, R7, R5
	AND R6, R8, R6

	// Save masked key in state
	MOVD R5, 24(R3)
	MOVD R6, 32(R3)
	RET

// func finalize(tag *[TagSize]byte, state *[7]uint64)
TEXT ·finalize(SB), $0-16
	MOVD tag+0(FP), R3
	MOVD state+8(FP), R4

	// Get h0, h1, h2 from state
	MOVD 0(R4), R5
	MOVD 8(R4), R6
	MOVD 16(R4), R7

	// Save h0, h1
	MOVD  R5, R8
	MOVD  R6, R9
	MOVD  $3, R20
	MOVD  $-1, R21
	SUBC  $-5, R5
	SUBE  R21, R6
	SUBE  R20, R7
	MOVD  $0, R21
	SUBZE R21

	// Check for carry
	CMP  $0, R21
	ISEL $2, R5, R8, R5
	ISEL $2, R6, R9, R6
	MOVD 40(R4), R8
	MOVD 48(R4), R9
	ADDC R8, R5
	ADDE R9, R6
	MOVD R5, 0(R3)
	MOVD R6, 8(R3)
	RET

+ f e08e8aeb1137e1f9a4de4978b094cc92e0f931e1165aa1b837701d2c76761910 vendor/golang.org/x/sys/cpu/asm_aix_ppc64.s
utf8file 18
// Copyright 2018 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build !gccgo

#include "textflag.h"

//
// System calls for ppc64, AIX are implemented in runtime/syscall_aix.go
//

TEXT ·syscall6(SB),NOSPLIT,$0-88
	JMP	syscall·syscall6(SB)

TEXT ·rawSyscall6(SB),NOSPLIT,$0-88
	JMP	syscall·rawSyscall6(SB)

- f 2ff15b500b9db10784f3d3f0b73ed1ce5b2b8488a3637d6260579843436e492d vendor/golang.org/x/sys/cpu/cpu_aix_ppc64.go
+ f b6b51a2c686ad149796aa56b104634db35ee494ef870ea596f504e5677b9f190 vendor/golang.org/x/sys/cpu/cpu_aix_ppc64.go
dmppatch 12
@@ -191,40 +191,8 @@
 pu%0A%0A
-import %22golang.org/x/sys/unix%22%0A%0A
 cons
@@ -336,45 +336,40 @@
 ) %7B%0A
-%09impl := unix.Getsystemcfg(_SC_IMPL)%0A
+%09impl := getsystemcfg(_SC_IMPL)%0A
 %09if 
@@ -499,8 +499,111 @@
  true%0A%7D%0A
+%0Afunc getsystemcfg(label int) (n uint64) %7B%0A%09r0, _ := callgetsystemcfg(label)%0A%09n = uint64(r0)%0A%09return%0A%7D%0A
+ f baf3d699b9d94ac7ed555c4a3a9812960ef0b06e621e56d7a0da9a924cd8fc1e vendor/golang.org/x/sys/cpu/syscall_aix_ppc64_gc.go
utf8file 37
// Copyright 2019 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Minimal copy of x/sys/unix so the cpu package can make a
// system call on AIX without depending on x/sys/unix.
// (See golang.org/issue/32102)

// +build aix,ppc64
// +build !gccgo

package cpu

import (
	"syscall"
	"unsafe"
)

//go:cgo_import_dynamic libc_getsystemcfg getsystemcfg "libc.a/shr_64.o"

//go:linkname libc_getsystemcfg libc_getsystemcfg

type syscallFunc uintptr

var libc_getsystemcfg syscallFunc

type errno = syscall.Errno

// Implemented in runtime/syscall_aix.go.
func rawSyscall6(trap, nargs, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err errno)
func syscall6(trap, nargs, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err errno)

func callgetsystemcfg(label int) (r1 uintptr, e1 errno) {
	r1, _, e1 = syscall6(uintptr(unsafe.Pointer(&libc_getsystemcfg)), 1, uintptr(label), 0, 0, 0, 0, 0)
	return
}

+ f 334250a30969fe3c1b8db14c77a5293d911f1dfaa9e6c5bef8c6f03bed915988 vendor/golang.org/x/sys/unix/asm_linux_riscv64.s
utf8file 55
// Copyright 2019 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build riscv64,!gccgo

#include "textflag.h"

//
// System calls for linux/riscv64.
//
// Where available, just jump to package syscall's implementation of
// these functions.

TEXT ·Syscall(SB),NOSPLIT,$0-56
	JMP	syscall·Syscall(SB)

TEXT ·Syscall6(SB),NOSPLIT,$0-80
	JMP	syscall·Syscall6(SB)

TEXT ·SyscallNoError(SB),NOSPLIT,$0-48
	CALL	runtime·entersyscall(SB)
	MOV	a1+8(FP), A0
	MOV	a2+16(FP), A1
	MOV	a3+24(FP), A2
	MOV	$0, A3
	MOV	$0, A4
	MOV	$0, A5
	MOV	$0, A6
	MOV	trap+0(FP), A7	// syscall entry
	ECALL
	MOV	A0, r1+32(FP)	// r1
	MOV	A1, r2+40(FP)	// r2
	CALL	runtime·exitsyscall(SB)
	RET

TEXT ·RawSyscall(SB),NOSPLIT,$0-56
	JMP	syscall·RawSyscall(SB)

TEXT ·RawSyscall6(SB),NOSPLIT,$0-80
	JMP	syscall·RawSyscall6(SB)

TEXT ·RawSyscallNoError(SB),NOSPLIT,$0-48
	MOV	a1+8(FP), A0
	MOV	a2+16(FP), A1
	MOV	a3+24(FP), A2
	MOV	ZERO, A3
	MOV	ZERO, A4
	MOV	ZERO, A5
	MOV	trap+0(FP), A7	// syscall entry
	ECALL
	MOV	A0, r1+32(FP)
	MOV	A1, r2+40(FP)
	RET

- f e42035994052f717ef4f09fedff3c2e9b3808acb2d356d9612aee8bf50cee84c vendor/golang.org/x/sys/unix/dirent.go
+ f 4727aa7883ca6f17eb99d6502b8fed3c37bfefc2b81c2bbf48698e6aa1dc88f9 vendor/golang.org/x/sys/unix/dirent.go
dmppatch 10
@@ -245,25 +245,1684 @@
 ix%0A%0A
-import %22syscall%22%0A
+import %22unsafe%22%0A%0A// readInt returns the size-bytes unsigned integer in native byte order at offset off.%0Afunc readInt(b %5B%5Dbyte, off, size uintptr) (u uint64, ok bool) %7B%0A%09if len(b) %3C int(off+size) %7B%0A%09%09return 0, false%0A%09%7D%0A%09if isBigEndian %7B%0A%09%09return readIntBE(b%5Boff:%5D, size), true%0A%09%7D%0A%09return readIntLE(b%5Boff:%5D, size), true%0A%7D%0A%0Afunc readIntBE(b %5B%5Dbyte, size uintptr) uint64 %7B%0A%09switch size %7B%0A%09case 1:%0A%09%09return uint64(b%5B0%5D)%0A%09case 2:%0A%09%09_ = b%5B1%5D // bounds check hint to compiler; see golang.org/issue/14808%0A%09%09return uint64(b%5B1%5D) %7C uint64(b%5B0%5D)%3C%3C8%0A%09case 4:%0A%09%09_ = b%5B3%5D // bounds check hint to compiler; see golang.org/issue/14808%0A%09%09return uint64(b%5B3%5D) %7C uint64(b%5B2%5D)%3C%3C8 %7C uint64(b%5B1%5D)%3C%3C16 %7C uint64(b%5B0%5D)%3C%3C24%0A%09case 8:%0A%09%09_ = b%5B7%5D // bounds check hint to compiler; see golang.org/issue/14808%0A%09%09return uint64(b%5B7%5D) %7C uint64(b%5B6%5D)%3C%3C8 %7C uint64(b%5B5%5D)%3C%3C16 %7C uint64(b%5B4%5D)%3C%3C24 %7C%0A%09%09%09uint64(b%5B3%5D)%3C%3C32 %7C uint64(b%5B2%5D)%3C%3C40 %7C uint64(b%5B1%5D)%3C%3C48 %7C uint64(b%5B0%5D)%3C%3C56%0A%09default:%0A%09%09panic(%22syscall: readInt with unsupported size%22)%0A%09%7D%0A%7D%0A%0Afunc readIntLE(b %5B%5Dbyte, size uintptr) uint64 %7B%0A%09switch size %7B%0A%09case 1:%0A%09%09return uint64(b%5B0%5D)%0A%09case 2:%0A%09%09_ = b%5B1%5D // bounds check hint to compiler; see golang.org/issue/14808%0A%09%09return uint64(b%5B0%5D) %7C uint64(b%5B1%5D)%3C%3C8%0A%09case 4:%0A%09%09_ = b%5B3%5D // bounds check hint to compiler; see golang.org/issue/14808%0A%09%09return uint64(b%5B0%5D) %7C uint64(b%5B1%5D)%3C%3C8 %7C uint64(b%5B2%5D)%3C%3C16 %7C uint64(b%5B3%5D)%3C%3C24%0A%09case 8:%0A%09%09_ = b%5B7%5D // bounds check hint to compiler; see golang.org/issue/14808%0A%09%09return uint64(b%5B0%5D) %7C uint64(b%5B1%5D)%3C%3C8 %7C uint64(b%5B2%5D)%3C%3C16 %7C uint64(b%5B3%5D)%3C%3C24 %7C%0A%09%09%09uint64(b%5B4%5D)%3C%3C32 %7C uint64(b%5B5%5D)%3C%3C40 %7C uint64(b%5B6%5D)%3C%3C48 %7C uint64(b%5B7%5D)%3C%3C56%0A%09default:%0A%09%09panic(%22syscall: readInt with unsupported size%22)%0A%09%7D%0A%7D%0A
 %0A// 
@@ -2233,51 +2233,829 @@
 ) %7B%0A
-%09return syscall.ParseDirent(buf, max, names)%0A
+%09origlen := len(buf)%0A%09count = 0%0A%09for max != 0 && len(buf) %3E 0 %7B%0A%09%09reclen, ok := direntReclen(buf)%0A%09%09if !ok %7C%7C reclen %3E uint64(len(buf)) %7B%0A%09%09%09return origlen, count, names%0A%09%09%7D%0A%09%09rec := buf%5B:reclen%5D%0A%09%09buf = buf%5Breclen:%5D%0A%09%09ino, ok := direntIno(rec)%0A%09%09if !ok %7B%0A%09%09%09break%0A%09%09%7D%0A%09%09if ino == 0 %7B // File absent in directory.%0A%09%09%09continue%0A%09%09%7D%0A%09%09const namoff = uint64(unsafe.Offsetof(Dirent%7B%7D.Name))%0A%09%09namlen, ok := direntNamlen(rec)%0A%09%09if !ok %7C%7C namoff+namlen %3E uint64(len(rec)) %7B%0A%09%09%09break%0A%09%09%7D%0A%09%09name := rec%5Bnamoff : namoff+namlen%5D%0A%09%09for i, c := range name %7B%0A%09%09%09if c == 0 %7B%0A%09%09%09%09name = name%5B:i%5D%0A%09%09%09%09break%0A%09%09%09%7D%0A%09%09%7D%0A%09%09// Check for useless names before allocating a string.%0A%09%09if string(name) == %22.%22 %7C%7C string(name) == %22..%22 %7B%0A%09%09%09continue%0A%09%09%7D%0A%09%09max--%0A%09%09count++%0A%09%09names = append(names, string(name))%0A%09%7D%0A%09return origlen - len(buf), count, names%0A
 %7D%0A
- f c93e18b7d2f1810a1c2f39cea8b7446552efaf100558ce0b8a00e1636967dab0 vendor/golang.org/x/sys/unix/mkall.sh
+ f 8d53d7f212488967a66b8a4d1ddb59bce66a74eb53f3b4e59c3abdd7af4a9a75 vendor/golang.org/x/sys/unix/mkall.sh
dmppatch 20
@@ -2956,105 +2956,105 @@
 32%22%0A
-%09mksysnum=%22go run mksysnum.go 'https://svn.freebsd.org/base/stable/10/sys/kern/syscalls.master'%22%0A
+%09mksysnum=%22go run mksysnum.go 'https://svn.freebsd.org/base/stable/11/sys/kern/syscalls.master'%22%0A
 %09mkt
@@ -3145,105 +3145,105 @@
 64%22%0A
-%09mksysnum=%22go run mksysnum.go 'https://svn.freebsd.org/base/stable/10/sys/kern/syscalls.master'%22%0A
+%09mksysnum=%22go run mksysnum.go 'https://svn.freebsd.org/base/stable/11/sys/kern/syscalls.master'%22%0A
 %09mkt
@@ -3370,105 +3370,105 @@
 rm%22%0A
-%09mksysnum=%22go run mksysnum.go 'https://svn.freebsd.org/base/stable/10/sys/kern/syscalls.master'%22%0A
+%09mksysnum=%22go run mksysnum.go 'https://svn.freebsd.org/base/stable/11/sys/kern/syscalls.master'%22%0A
 %09# L
@@ -3676,105 +3676,105 @@
 64%22%0A
-%09mksysnum=%22go run mksysnum.go 'https://svn.freebsd.org/base/stable/10/sys/kern/syscalls.master'%22%0A
+%09mksysnum=%22go run mksysnum.go 'https://svn.freebsd.org/base/stable/11/sys/kern/syscalls.master'%22%0A
 %09mkt
- f 860c3d29032fb0101dd5f94d1d434777bffd896b1de3b49c08560c0e8b0d1a07 vendor/golang.org/x/sys/unix/mkerrors.sh
+ f f65a461b46e0ace7b2a8c05b9628db1d2c9098eb542953e96a47e67ddbe54b10 vendor/golang.org/x/sys/unix/mkerrors.sh
dmppatch 4
@@ -4202,32 +4202,62 @@
 e %3Clinux/bpf.h%3E%0A
+#include %3Clinux/capability.h%3E%0A
 #include %3Clinux/
- f 5091bb2e9f10589ed6b8f72d7400f28ffe4e981ad51c5406f80180cceae14c6e vendor/golang.org/x/sys/unix/mkpost.go
+ f 150a0b45ef368bc94b2f87c33d1d34a8784e07c6544254d50bf0accaaac6aa2b vendor/golang.org/x/sys/unix/mkpost.go
dmppatch 5
@@ -1373,162 +1373,169 @@
 t_t%0A
-%09valRegex := regexp.MustCompile(%60type (Fsid%7CSigset_t) struct %7B(%5Cs+)X__val(%5Cs+%5CS+%5Cs+)%7D%60)%0A%09b = valRegex.ReplaceAll(b, %5B%5Dbyte(%22type $1 struct %7B$%7B2%7DVal$3%7D%22))%0A
+%09valRegex := regexp.MustCompile(%60type (Fsid%7CSigset_t) struct %7B(%5Cs+)X__(bits%7Cval)(%5Cs+%5CS+%5Cs+)%7D%60)%0A%09b = valRegex.ReplaceAll(b, %5B%5Dbyte(%22type $1 struct %7B$%7B2%7DVal$4%7D%22))%0A
 %0A%09//
- f 2f8cdb88a859649aca716dcbe840fdd480cf35f1e0d794bb3149f92734a83b04 vendor/golang.org/x/sys/unix/mksysnum.go
+ f cf8da8566437e73e8b9adb4f17de0e4052b893101ab054a472bc5051b1bd755d vendor/golang.org/x/sys/unix/mksysnum.go
dmppatch 5
@@ -3202,77 +3202,90 @@
 d%22:%0A
-%09%09%09if t.Match(%60%5E(%5B0-9%5D+)%5Cs+%5CS+%5Cs+(?:NO)?STD%5Cs+(%7B %5CS+%5Cs+(%5Cw+).*)$%60) %7B%0A
+%09%09%09if t.Match(%60%5E(%5B0-9%5D+)%5Cs+%5CS+%5Cs+(?:(?:NO)?STD%7CCOMPAT10)%5Cs+(%7B %5CS+%5Cs+(%5Cw+).*)$%60) %7B%0A
 %09%09%09%09
+ f 076c92911fad7fa2ff9442726354b43bd5bf1a749a99e98c9db83ff4c4cfc7f5 vendor/golang.org/x/sys/unix/readdirent_getdents.go
utf8file 13
// Copyright 2019 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build aix dragonfly freebsd linux netbsd openbsd

package unix

// ReadDirent reads directory entries from fd and writes them into buf.
func ReadDirent(fd int, buf []byte) (n int, err error) {
	return Getdents(fd, buf)
}

+ f 974b03c0069a93097e71ccb20cd947db188e833dc4aa2e5d7e51a6c2b6c88207 vendor/golang.org/x/sys/unix/readdirent_getdirentries.go
utf8file 20
// Copyright 2019 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build darwin

package unix

import "unsafe"

// ReadDirent reads directory entries from fd and writes them into buf.
func ReadDirent(fd int, buf []byte) (n int, err error) {
	// Final argument is (basep *uintptr) and the syscall doesn't take nil.
	// 64 bits should be enough. (32 bits isn't even on 386). Since the
	// actual system call is getdirentries64, 64 is a good guess.
	// TODO(rsc): Can we use a single global basep for all calls?
	var base = (*uintptr)(unsafe.Pointer(new(uint64)))
	return Getdirentries(fd, buf, base)
}

- f 7c1c3bd115b9e316f1570e5ceb428c454e25f121458dff9c5df7856517698d27 vendor/golang.org/x/sys/unix/syscall_aix.go
+ f 1947bae6b5935f91c512abb77d27c903acdbacde8d291336bbef6fcdab795b30 vendor/golang.org/x/sys/unix/syscall_aix.go
dmppatch 9
@@ -6285,24 +6285,465 @@
 , ENOSYS%0A%7D%0A%0A
+func direntIno(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Ino), unsafe.Sizeof(Dirent%7B%7D.Ino))%0A%7D%0A%0Afunc direntReclen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Reclen), unsafe.Sizeof(Dirent%7B%7D.Reclen))%0A%7D%0A%0Afunc direntNamlen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09reclen, ok := direntReclen(buf)%0A%09if !ok %7B%0A%09%09return 0, false%0A%09%7D%0A%09return reclen - uint64(unsafe.Offsetof(Dirent%7B%7D.Name)), true%0A%7D%0A%0A
 //sys%09getdir
@@ -6789,65 +6789,63 @@
 or)%0A
-func ReadDirent(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
+func Getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
 %09ret
- f 729fec93503a4c011329712f64e41b3aabe68e00e4aaf2a791ed1ed97809ecaf vendor/golang.org/x/sys/unix/syscall_bsd.go
+ f 9147b5e0afd2bdf5bec77d78bbdad27717ab6743c7af8b2898b18e848a096ef0 vendor/golang.org/x/sys/unix/syscall_bsd.go
dmppatch 12
@@ -1292,425 +1292,8 @@
 %0A%7D%0A%0A
-func ReadDirent(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A%09// Final argument is (basep *uintptr) and the syscall doesn't take nil.%0A%09// 64 bits should be enough. (32 bits isn't even on 386). Since the%0A%09// actual system call is getdirentries64, 64 is a good guess.%0A%09// TODO(rsc): Can we use a single global basep for all calls?%0A%09var base = (*uintptr)(unsafe.Pointer(new(uint64)))%0A%09return Getdirentries(fd, buf, base)%0A%7D%0A%0A
 // W
@@ -1616,16 +1616,29 @@
 ed  = 0%0A
+%09killed  = 9%0A
 %09stopped
@@ -2209,32 +2209,134 @@
 t) != SIGSTOP %7D%0A
+%0Afunc (w WaitStatus) Killed() bool %7B return w&mask == killed && syscall.Signal(w%3E%3Eshift) != SIGKILL %7D%0A
 %0Afunc (w WaitSta
- f e6569b6976d737f35ff8d7f0a81e198842a2dc65bd28028300e9e08e68a86c99 vendor/golang.org/x/sys/unix/syscall_darwin.go
+ f d795f47ebc9245df01423b31e04ca93cd72ffc770e9fd6596f248cff6b2fb733 vendor/golang.org/x/sys/unix/syscall_darwin.go
dmppatch 4
@@ -2282,24 +2282,426 @@
 iz%5D, nil%0A%7D%0A%0A
+func direntIno(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Ino), unsafe.Sizeof(Dirent%7B%7D.Ino))%0A%7D%0A%0Afunc direntReclen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Reclen), unsafe.Sizeof(Dirent%7B%7D.Reclen))%0A%7D%0A%0Afunc direntNamlen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Namlen), unsafe.Sizeof(Dirent%7B%7D.Namlen))%0A%7D%0A%0A
 //sys   ptra
- f 4f64a3bf0bd01e2eb50c8b13249a3e0695ddefcff99ad5ae5ac20533ec17aadc vendor/golang.org/x/sys/unix/syscall_dragonfly.go
+ f a8e0c3c1abceaac54c19ec182c4e61ce42d4b552f20b392092e6a38e7f332f01 vendor/golang.org/x/sys/unix/syscall_dragonfly.go
dmppatch 8
@@ -1762,24 +1762,450 @@
 iz%5D, nil%0A%7D%0A%0A
+func direntIno(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Fileno), unsafe.Sizeof(Dirent%7B%7D.Fileno))%0A%7D%0A%0Afunc direntReclen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09namlen, ok := direntNamlen(buf)%0A%09if !ok %7B%0A%09%09return 0, false%0A%09%7D%0A%09return (16 + namlen + 1 + 7) &%5E 7, true%0A%7D%0A%0Afunc direntNamlen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Namlen), unsafe.Sizeof(Dirent%7B%7D.Namlen))%0A%7D%0A%0A
 //sysnb pipe
@@ -8083,32 +8083,86 @@
 64) (err error)%0A
+//sys%09Getdents(fd int, buf %5B%5Dbyte) (n int, err error)%0A
 //sys%09Getdirentr
- f 61bb9a2b220fdb215a0423c70ce34281cbd50940710df7beb883fab6424b1616 vendor/golang.org/x/sys/unix/syscall_freebsd.go
+ f 7412c9fdeab1396cb6ad39c2b50e064c398d096ee21839f84053bcd13e57e4e0 vendor/golang.org/x/sys/unix/syscall_freebsd.go
dmppatch 18
@@ -2631,24 +2631,432 @@
 iz%5D, nil%0A%7D%0A%0A
+func direntIno(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Fileno), unsafe.Sizeof(Dirent%7B%7D.Fileno))%0A%7D%0A%0Afunc direntReclen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Reclen), unsafe.Sizeof(Dirent%7B%7D.Reclen))%0A%7D%0A%0Afunc direntNamlen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Namlen), unsafe.Sizeof(Dirent%7B%7D.Namlen))%0A%7D%0A%0A
 func Pipe(p 
@@ -9447,57 +9447,573 @@
 ) %7B%0A
-%09%09return getdirentries_freebsd12(fd, buf, basep)%0A
+%09%09if basep == nil %7C%7C unsafe.Sizeof(*basep) == 8 %7B%0A%09%09%09return getdirentries_freebsd12(fd, buf, (*uint64)(unsafe.Pointer(basep)))%0A%09%09%7D%0A%09%09// The freebsd12 syscall needs a 64-bit base. On 32-bit machines%0A%09%09// we can't just use the basep passed in. See #32498.%0A%09%09var base uint64 = uint64(*basep)%0A%09%09n, err = getdirentries_freebsd12(fd, buf, &base)%0A%09%09*basep = uintptr(base)%0A%09%09if base%3E%3E32 != 0 %7B%0A%09%09%09// We can't stuff the base back into a uintptr, so any%0A%09%09%09// future calls would be suspect. Generate an error.%0A%09%09%09// EIO is allowed by getdirentries.%0A%09%09%09err = EIO%0A%09%09%7D%0A%09%09return%0A
 %09%7D%0A%0A
@@ -13691,16 +13691,2139 @@
 unt)%0A%7D%0A%0A
+//sys%09ptrace(request int, pid int, addr uintptr, data int) (err error)%0A%0Afunc PtraceAttach(pid int) (err error) %7B%0A%09return ptrace(PTRACE_ATTACH, pid, 0, 0)%0A%7D%0A%0Afunc PtraceCont(pid int, signal int) (err error) %7B%0A%09return ptrace(PTRACE_CONT, pid, 1, signal)%0A%7D%0A%0Afunc PtraceDetach(pid int) (err error) %7B%0A%09return ptrace(PTRACE_DETACH, pid, 1, 0)%0A%7D%0A%0Afunc PtraceGetFpRegs(pid int, fpregsout *FpReg) (err error) %7B%0A%09return ptrace(PTRACE_GETFPREGS, pid, uintptr(unsafe.Pointer(fpregsout)), 0)%0A%7D%0A%0Afunc PtraceGetFsBase(pid int, fsbase *int64) (err error) %7B%0A%09return ptrace(PTRACE_GETFSBASE, pid, uintptr(unsafe.Pointer(fsbase)), 0)%0A%7D%0A%0Afunc PtraceGetRegs(pid int, regsout *Reg) (err error) %7B%0A%09return ptrace(PTRACE_GETREGS, pid, uintptr(unsafe.Pointer(regsout)), 0)%0A%7D%0A%0Afunc PtraceIO(req int, pid int, addr uintptr, out %5B%5Dbyte, countin int) (count int, err error) %7B%0A%09ioDesc := PtraceIoDesc%7BOp: int32(req), Offs: (*byte)(unsafe.Pointer(addr)), Addr: (*byte)(unsafe.Pointer(&out%5B0%5D)), Len: uint(countin)%7D%0A%09err = ptrace(PTRACE_IO, pid, uintptr(unsafe.Pointer(&ioDesc)), 0)%0A%09return int(ioDesc.Len), err%0A%7D%0A%0Afunc PtraceLwpEvents(pid int, enable int) (err error) %7B%0A%09return ptrace(PTRACE_LWPEVENTS, pid, 0, enable)%0A%7D%0A%0Afunc PtraceLwpInfo(pid int, info uintptr) (err error) %7B%0A%09return ptrace(PTRACE_LWPINFO, pid, info, int(unsafe.Sizeof(PtraceLwpInfoStruct%7B%7D)))%0A%7D%0A%0Afunc PtracePeekData(pid int, addr uintptr, out %5B%5Dbyte) (count int, err error) %7B%0A%09return PtraceIO(PIOD_READ_D, pid, addr, out, SizeofLong)%0A%7D%0A%0Afunc PtracePeekText(pid int, addr uintptr, out %5B%5Dbyte) (count int, err error) %7B%0A%09return PtraceIO(PIOD_READ_I, pid, addr, out, SizeofLong)%0A%7D%0A%0Afunc PtracePokeData(pid int, addr uintptr, data %5B%5Dbyte) (count int, err error) %7B%0A%09return PtraceIO(PIOD_WRITE_D, pid, addr, data, SizeofLong)%0A%7D%0A%0Afunc PtracePokeText(pid int, addr uintptr, data %5B%5Dbyte) (count int, err error) %7B%0A%09return PtraceIO(PIOD_WRITE_I, pid, addr, data, SizeofLong)%0A%7D%0A%0Afunc PtraceSetRegs(pid int, regs *Reg) (err error) %7B%0A%09return ptrace(PTRACE_SETREGS, pid, uintptr(unsafe.Pointer(regs)), 0)%0A%7D%0A%0Afunc PtraceSingleStep(pid int) (err error) %7B%0A%09return ptrace(PTRACE_SINGLESTEP, pid, 1, 0)%0A%7D%0A%0A
 /*%0A * Ex
@@ -18887,93 +18887,92 @@
 or)%0A
-//sys%09getdirentries_freebsd12(fd int, buf %5B%5Dbyte, basep *uintptr) (n int, err error)%0A
+//sys%09getdirentries_freebsd12(fd int, buf %5B%5Dbyte, basep *uint64) (n int, err error)%0A
 //sy
- f 386fb8d71b85f563822b8f4d7337cb7f79146e05c15a2e21acc4c184751e0999 vendor/golang.org/x/sys/unix/syscall_linux.go
+ f 2f2f7ee5752c0df1521733dc421d97db08c164c98d86a1a0100b852ffb271306 vendor/golang.org/x/sys/unix/syscall_linux.go
dmppatch 36
@@ -473,15 +473,8 @@
 ry%22%0A
-%09%22net%22%0A
 %09%22ru
@@ -21934,33 +21934,23 @@
 t16%0A
-%09Remote net.HardwareAddr%0A
+%09Remote %5B%5Dbyte%0A
 %09Dev
@@ -26060,47 +26060,29 @@
 %5D),%0A
-%09%09%09Remote: net.HardwareAddr(pp%5B8:14%5D),%0A
+%09%09%09Remote: pp%5B8:14%5D,%0A
 %09%09%7D%0A
@@ -41277,91 +41277,446 @@
 %0A%7D%0A%0A
-func ReadDirent(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A%09return Getdents(fd, buf)%0A
+func direntIno(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Ino), unsafe.Sizeof(Dirent%7B%7D.Ino))%0A%7D%0A%0Afunc direntReclen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Reclen), unsafe.Sizeof(Dirent%7B%7D.Reclen))%0A%7D%0A%0Afunc direntNamlen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09reclen, ok := direntReclen(buf)%0A%09if !ok %7B%0A%09%09return 0, false%0A%09%7D%0A%09return reclen - uint64(unsafe.Offsetof(Dirent%7B%7D.Name)), true%0A
 %7D%0A%0A/
@@ -42661,32 +42661,160 @@
 int, err error)%0A
+//sys%09Capget(hdr *CapUserHeader, data *CapUserData) (err error)%0A//sys%09Capset(hdr *CapUserHeader, data *CapUserData) (err error)%0A
 //sys%09Chdir(path
@@ -47291,24 +47291,153 @@
 PNOTSUPP%0A%7D%0A%0A
+func Signalfd(fd int, sigmask *Sigset_t, flags int) (newfd int, err error) %7B%0A%09return signalfd(fd, sigmask, _C__NSIG/8, flags)%0A%7D%0A%0A
 //sys%09Setpri
@@ -47565,74 +47565,118 @@
 or)%0A
-//sys%09Signalfd(fd int, mask *Sigset_t, flags int) = SYS_SIGNALFD4%0A
+//sys%09signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) = SYS_SIGNALFD4%0A
 //sy
@@ -53668,28 +53668,8 @@
 Brk%0A
-// Capget%0A// Capset%0A
 // C
- f d31b8c96a2af714321657966a50e248ef14be7c9cbcca4466e41da3adb87142c vendor/golang.org/x/sys/unix/syscall_netbsd.go
+ f dff7614551e8ccb7d88f6633b312c8f175edda78374a7e550ebc17b28944ce6c vendor/golang.org/x/sys/unix/syscall_netbsd.go
dmppatch 14
@@ -2318,24 +2318,432 @@
 mib, nil%0A%7D%0A%0A
+func direntIno(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Fileno), unsafe.Sizeof(Dirent%7B%7D.Fileno))%0A%7D%0A%0Afunc direntReclen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Reclen), unsafe.Sizeof(Dirent%7B%7D.Reclen))%0A%7D%0A%0Afunc direntNamlen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Namlen), unsafe.Sizeof(Dirent%7B%7D.Namlen))%0A%7D%0A%0A
 func SysctlC
@@ -3227,62 +3227,62 @@
 %0A%7D%0A%0A
-//sys getdents(fd int, buf %5B%5Dbyte) (n int, err error)%0A
+//sys Getdents(fd int, buf %5B%5Dbyte) (n int, err error)%0A
 func
@@ -3357,34 +3357,453 @@
 ) %7B%0A
-%09return getdents(fd, buf)%0A
+%09n, err = Getdents(fd, buf)%0A%09if err != nil %7C%7C basep == nil %7B%0A%09%09return%0A%09%7D%0A%0A%09var off int64%0A%09off, err = Seek(fd, 0, 1 /* SEEK_CUR */)%0A%09if err != nil %7B%0A%09%09*basep = %5Euintptr(0)%0A%09%09return%0A%09%7D%0A%09*basep = uintptr(off)%0A%09if unsafe.Sizeof(*basep) == 8 %7B%0A%09%09return%0A%09%7D%0A%09if off%3E%3E32 != 0 %7B%0A%09%09// We can't stuff the offset back into a uintptr, so any%0A%09%09// future calls would be suspect. Generate an error.%0A%09%09// EIO is allowed by getdirentries.%0A%09%09err = EIO%0A%09%7D%0A%09return%0A
 %7D%0A%0Ac
- f 3645363e1bafac989a1a5b4cccff0ef53819ffa4417f7b93a87254c4daf5373c vendor/golang.org/x/sys/unix/syscall_openbsd.go
+ f 66b1d068bf305c66e6a32446eaa42774e5c2008d0c8a677f8bf13d917084cbb5 vendor/golang.org/x/sys/unix/syscall_openbsd.go
dmppatch 14
@@ -1168,24 +1168,432 @@
 , EINVAL%0A%7D%0A%0A
+func direntIno(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Fileno), unsafe.Sizeof(Dirent%7B%7D.Fileno))%0A%7D%0A%0Afunc direntReclen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Reclen), unsafe.Sizeof(Dirent%7B%7D.Reclen))%0A%7D%0A%0Afunc direntNamlen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Namlen), unsafe.Sizeof(Dirent%7B%7D.Namlen))%0A%7D%0A%0A
 func SysctlC
@@ -2441,62 +2441,62 @@
 %0A%7D%0A%0A
-//sys getdents(fd int, buf %5B%5Dbyte) (n int, err error)%0A
+//sys Getdents(fd int, buf %5B%5Dbyte) (n int, err error)%0A
 func
@@ -2571,34 +2571,454 @@
 ) %7B%0A
-%09return getdents(fd, buf)%0A
+%09n, err = Getdents(fd, buf)%0A%09if err != nil %7C%7C basep == nil %7B%0A%09%09return%0A%09%7D%0A%0A%09var off int64%0A%09off, err = Seek(fd, 0, 1 /* SEEK_CUR */)%0A%09if err != nil %7B%0A%09%09*basep = %5Euintptr(0)%0A%09%09return%0A%09%7D%0A%09*basep = uintptr(off)%0A%09if unsafe.Sizeof(*basep) == 8 %7B%0A%09%09return%0A%09%7D%0A%09if off%3E%3E32 != 0 %7B%0A%09%09// We can't stuff the offset back into a uintptr, so any%0A%09%09// future calls would be suspect. Generate an error.%0A%09%09// EIO was allowed by getdirentries.%0A%09%09err = EIO%0A%09%7D%0A%09return%0A
 %7D%0A%0Ac
- f 90cfc061ae261ccf695f6e7eb2820d044056d48047e0e5e94a670917114fa6f7 vendor/golang.org/x/sys/unix/syscall_solaris.go
+ f 39a92273c8727cf725f7fd74a12762ee3c6c3ddbdf9dac42ab6fa66031955c18 vendor/golang.org/x/sys/unix/syscall_solaris.go
dmppatch 8
@@ -1048,24 +1048,465 @@
 Datalink%0A%7D%0A%0A
+func direntIno(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Ino), unsafe.Sizeof(Dirent%7B%7D.Ino))%0A%7D%0A%0Afunc direntReclen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09return readInt(buf, unsafe.Offsetof(Dirent%7B%7D.Reclen), unsafe.Sizeof(Dirent%7B%7D.Reclen))%0A%7D%0A%0Afunc direntNamlen(buf %5B%5Dbyte) (uint64, bool) %7B%0A%09reclen, ok := direntReclen(buf)%0A%09if !ok %7B%0A%09%09return 0, false%0A%09%7D%0A%09return reclen - uint64(unsafe.Offsetof(Dirent%7B%7D.Name)), true%0A%7D%0A%0A
 //sysnb%09pipe
@@ -4921,24 +4921,96 @@
 , &a%5B0%5D)%0A%7D%0A%0A
+// ReadDirent reads directory entries from fd and writes them into buf.%0A
 func ReadDir
- f 6352276b1e3749e6390f2ee4cbd50ea314084540bf1ad6001e284159cfc301bc vendor/golang.org/x/sys/unix/types_freebsd.go
+ f defc73dd5ae6fff0ea9982e0c25136a1fde9bb6cee2274c6fb468f5794f71253 vendor/golang.org/x/sys/unix/types_freebsd.go
dmppatch 7
@@ -5167,102 +5167,1106 @@
 t (%0A
-%09PTRACE_TRACEME = C.PT_TRACE_ME%0A%09PTRACE_CONT    = C.PT_CONTINUE%0A%09PTRACE_KILL    = C.PT_KILL%0A
+%09PTRACE_ATTACH     = C.PT_ATTACH%0A%09PTRACE_CONT       = C.PT_CONTINUE%0A%09PTRACE_DETACH     = C.PT_DETACH%0A%09PTRACE_GETFPREGS  = C.PT_GETFPREGS%0A%09PTRACE_GETFSBASE  = C.PT_GETFSBASE%0A%09PTRACE_GETLWPLIST = C.PT_GETLWPLIST%0A%09PTRACE_GETNUMLWPS = C.PT_GETNUMLWPS%0A%09PTRACE_GETREGS    = C.PT_GETREGS%0A%09PTRACE_GETXSTATE  = C.PT_GETXSTATE%0A%09PTRACE_IO         = C.PT_IO%0A%09PTRACE_KILL       = C.PT_KILL%0A%09PTRACE_LWPEVENTS  = C.PT_LWP_EVENTS%0A%09PTRACE_LWPINFO    = C.PT_LWPINFO%0A%09PTRACE_SETFPREGS  = C.PT_SETFPREGS%0A%09PTRACE_SETREGS    = C.PT_SETREGS%0A%09PTRACE_SINGLESTEP = C.PT_STEP%0A%09PTRACE_TRACEME    = C.PT_TRACE_ME%0A
 )%0A
+%0Aconst (%0A%09PIOD_READ_D  = C.PIOD_READ_D%0A%09PIOD_WRITE_D = C.PIOD_WRITE_D%0A%09PIOD_READ_I  = C.PIOD_READ_I%0A%09PIOD_WRITE_I = C.PIOD_WRITE_I%0A)%0A%0Aconst (%0A%09PL_FLAG_BORN   = C.PL_FLAG_BORN%0A%09PL_FLAG_EXITED = C.PL_FLAG_EXITED%0A%09PL_FLAG_SI     = C.PL_FLAG_SI%0A)%0A%0Aconst (%0A%09TRAP_BRKPT = C.TRAP_BRKPT%0A%09TRAP_TRACE = C.TRAP_TRACE%0A)%0A%0Atype PtraceLwpInfoStruct C.struct_ptrace_lwpinfo%0A%0Atype __Siginfo C.struct___siginfo%0A%0Atype Sigset_t C.sigset_t%0A%0Atype Reg C.struct_reg%0A%0Atype FpReg C.struct_fpreg%0A%0Atype PtraceIoDesc C.struct_ptrace_io_desc%0A
 %0A// 
- f 3643d1df87d4c76b895e63cc6c2194a7fbc74310110109d3721c4f6f1fc8305a vendor/golang.org/x/sys/unix/types_netbsd.go
+ f 39386439060569e56af4598063ac76ce36f32db10e09e13fbe1686bc6e73300b vendor/golang.org/x/sys/unix/types_netbsd.go
dmppatch 4
@@ -5154,16 +5154,59 @@
 T_FDCWD%0A
+%09AT_SYMLINK_FOLLOW   = C.AT_SYMLINK_FOLLOW%0A
 %09AT_SYML
- f cb7e246b5d2feadcaf530d28b4f3a87b36b46c1b2bf99a0e7c2abd6e601b62d7 vendor/golang.org/x/sys/unix/types_openbsd.go
+ f c281a3df0de92f2d061960f8dd0a394a893f81b1b515a9d1d7c231359917916c vendor/golang.org/x/sys/unix/types_openbsd.go
dmppatch 4
@@ -4849,16 +4849,59 @@
 T_FDCWD%0A
+%09AT_SYMLINK_FOLLOW   = C.AT_SYMLINK_FOLLOW%0A
 %09AT_SYML
- f 249225335711d052b4c79e36bf873c951910625fb5ef2b246ea01dbee09e9606 vendor/golang.org/x/sys/unix/zerrors_linux_386.go
+ f 31c9a8925b1b3e7db8406f6cae0ca58aea701a9a7cb59bda0831ab279af1dd21 vendor/golang.org/x/sys/unix/zerrors_linux_386.go
dmppatch 4
@@ -14998,16 +14998,1755 @@
   = 0x4%0A
+%09CAP_AUDIT_CONTROL                    = 0x1e%0A%09CAP_AUDIT_READ                       = 0x25%0A%09CAP_AUDIT_WRITE                      = 0x1d%0A%09CAP_BLOCK_SUSPEND                    = 0x24%0A%09CAP_CHOWN                            = 0x0%0A%09CAP_DAC_OVERRIDE                     = 0x1%0A%09CAP_DAC_READ_SEARCH                  = 0x2%0A%09CAP_FOWNER                           = 0x3%0A%09CAP_FSETID                           = 0x4%0A%09CAP_IPC_LOCK                         = 0xe%0A%09CAP_IPC_OWNER                        = 0xf%0A%09CAP_KILL                             = 0x5%0A%09CAP_LAST_CAP                         = 0x25%0A%09CAP_LEASE                            = 0x1c%0A%09CAP_LINUX_IMMUTABLE                  = 0x9%0A%09CAP_MAC_ADMIN                        = 0x21%0A%09CAP_MAC_OVERRIDE                     = 0x20%0A%09CAP_MKNOD                            = 0x1b%0A%09CAP_NET_ADMIN                        = 0xc%0A%09CAP_NET_BIND_SERVICE                 = 0xa%0A%09CAP_NET_BROADCAST                    = 0xb%0A%09CAP_NET_RAW                          = 0xd%0A%09CAP_SETFCAP                          = 0x1f%0A%09CAP_SETGID                           = 0x6%0A%09CAP_SETPCAP                          = 0x8%0A%09CAP_SETUID                           = 0x7%0A%09CAP_SYSLOG                           = 0x22%0A%09CAP_SYS_ADMIN                        = 0x15%0A%09CAP_SYS_BOOT                         = 0x16%0A%09CAP_SYS_CHROOT                       = 0x12%0A%09CAP_SYS_MODULE                       = 0x10%0A%09CAP_SYS_NICE                         = 0x17%0A%09CAP_SYS_PACCT                        = 0x14%0A%09CAP_SYS_PTRACE                       = 0x13%0A%09CAP_SYS_RAWIO                        = 0x11%0A%09CAP_SYS_RESOURCE                     = 0x18%0A%09CAP_SYS_TIME                         = 0x19%0A%09CAP_SYS_TTY_CONFIG                   = 0x1a%0A%09CAP_WAKE_ALARM                       = 0x23%0A
 %09CBAUD  
- f 23704edb4e0edc7e79af707d9c7456285bb6f26296d64db1d4d3ec2276d14a32 vendor/golang.org/x/sys/unix/zerrors_linux_amd64.go
+ f 3341e17bf2cf5c2e7dc7ffde6b1705ebb9072101b1e9bab3d0d87b5b790bcba3 vendor/golang.org/x/sys/unix/zerrors_linux_amd64.go
dmppatch 4
@@ -15000,16 +15000,1755 @@
   = 0x4%0A
+%09CAP_AUDIT_CONTROL                    = 0x1e%0A%09CAP_AUDIT_READ                       = 0x25%0A%09CAP_AUDIT_WRITE                      = 0x1d%0A%09CAP_BLOCK_SUSPEND                    = 0x24%0A%09CAP_CHOWN                            = 0x0%0A%09CAP_DAC_OVERRIDE                     = 0x1%0A%09CAP_DAC_READ_SEARCH                  = 0x2%0A%09CAP_FOWNER                           = 0x3%0A%09CAP_FSETID                           = 0x4%0A%09CAP_IPC_LOCK                         = 0xe%0A%09CAP_IPC_OWNER                        = 0xf%0A%09CAP_KILL                             = 0x5%0A%09CAP_LAST_CAP                         = 0x25%0A%09CAP_LEASE                            = 0x1c%0A%09CAP_LINUX_IMMUTABLE                  = 0x9%0A%09CAP_MAC_ADMIN                        = 0x21%0A%09CAP_MAC_OVERRIDE                     = 0x20%0A%09CAP_MKNOD                            = 0x1b%0A%09CAP_NET_ADMIN                        = 0xc%0A%09CAP_NET_BIND_SERVICE                 = 0xa%0A%09CAP_NET_BROADCAST                    = 0xb%0A%09CAP_NET_RAW                          = 0xd%0A%09CAP_SETFCAP                          = 0x1f%0A%09CAP_SETGID                           = 0x6%0A%09CAP_SETPCAP                          = 0x8%0A%09CAP_SETUID                           = 0x7%0A%09CAP_SYSLOG                           = 0x22%0A%09CAP_SYS_ADMIN                        = 0x15%0A%09CAP_SYS_BOOT                         = 0x16%0A%09CAP_SYS_CHROOT                       = 0x12%0A%09CAP_SYS_MODULE                       = 0x10%0A%09CAP_SYS_NICE                         = 0x17%0A%09CAP_SYS_PACCT                        = 0x14%0A%09CAP_SYS_PTRACE                       = 0x13%0A%09CAP_SYS_RAWIO                        = 0x11%0A%09CAP_SYS_RESOURCE                     = 0x18%0A%09CAP_SYS_TIME                         = 0x19%0A%09CAP_SYS_TTY_CONFIG                   = 0x1a%0A%09CAP_WAKE_ALARM                       = 0x23%0A
 %09CBAUD  
- f 461ed32938bcbc6057fd637e19f82fcee283a2a9c6af4a700b387060838b4240 vendor/golang.org/x/sys/unix/zerrors_linux_arm.go
+ f a5f50c653e0dbdfddc63cf786cc875f2bbbc00da3ef42be96b515249ba72c2ff vendor/golang.org/x/sys/unix/zerrors_linux_arm.go
dmppatch 4
@@ -14988,16 +14988,1755 @@
   = 0x4%0A
+%09CAP_AUDIT_CONTROL                    = 0x1e%0A%09CAP_AUDIT_READ                       = 0x25%0A%09CAP_AUDIT_WRITE                      = 0x1d%0A%09CAP_BLOCK_SUSPEND                    = 0x24%0A%09CAP_CHOWN                            = 0x0%0A%09CAP_DAC_OVERRIDE                     = 0x1%0A%09CAP_DAC_READ_SEARCH                  = 0x2%0A%09CAP_FOWNER                           = 0x3%0A%09CAP_FSETID                           = 0x4%0A%09CAP_IPC_LOCK                         = 0xe%0A%09CAP_IPC_OWNER                        = 0xf%0A%09CAP_KILL                             = 0x5%0A%09CAP_LAST_CAP                         = 0x25%0A%09CAP_LEASE                            = 0x1c%0A%09CAP_LINUX_IMMUTABLE                  = 0x9%0A%09CAP_MAC_ADMIN                        = 0x21%0A%09CAP_MAC_OVERRIDE                     = 0x20%0A%09CAP_MKNOD                            = 0x1b%0A%09CAP_NET_ADMIN                        = 0xc%0A%09CAP_NET_BIND_SERVICE                 = 0xa%0A%09CAP_NET_BROADCAST                    = 0xb%0A%09CAP_NET_RAW                          = 0xd%0A%09CAP_SETFCAP                          = 0x1f%0A%09CAP_SETGID                           = 0x6%0A%09CAP_SETPCAP                          = 0x8%0A%09CAP_SETUID                           = 0x7%0A%09CAP_SYSLOG                           = 0x22%0A%09CAP_SYS_ADMIN                        = 0x15%0A%09CAP_SYS_BOOT                         = 0x16%0A%09CAP_SYS_CHROOT                       = 0x12%0A%09CAP_SYS_MODULE                       = 0x10%0A%09CAP_SYS_NICE                         = 0x17%0A%09CAP_SYS_PACCT                        = 0x14%0A%09CAP_SYS_PTRACE                       = 0x13%0A%09CAP_SYS_RAWIO                        = 0x11%0A%09CAP_SYS_RESOURCE                     = 0x18%0A%09CAP_SYS_TIME                         = 0x19%0A%09CAP_SYS_TTY_CONFIG                   = 0x1a%0A%09CAP_WAKE_ALARM                       = 0x23%0A
 %09CBAUD  
- f d60d994046128733e8ba39be26dbf20ed761f011693c6130a2cacb650e251d21 vendor/golang.org/x/sys/unix/zerrors_linux_arm64.go
+ f 32d785d04d198faf3bb6b77930de16933e9bf55ddbc8f5a2c526bb1215ad33dc vendor/golang.org/x/sys/unix/zerrors_linux_arm64.go
dmppatch 4
@@ -15018,16 +15018,1755 @@
   = 0x4%0A
+%09CAP_AUDIT_CONTROL                    = 0x1e%0A%09CAP_AUDIT_READ                       = 0x25%0A%09CAP_AUDIT_WRITE                      = 0x1d%0A%09CAP_BLOCK_SUSPEND                    = 0x24%0A%09CAP_CHOWN                            = 0x0%0A%09CAP_DAC_OVERRIDE                     = 0x1%0A%09CAP_DAC_READ_SEARCH                  = 0x2%0A%09CAP_FOWNER                           = 0x3%0A%09CAP_FSETID                           = 0x4%0A%09CAP_IPC_LOCK                         = 0xe%0A%09CAP_IPC_OWNER                        = 0xf%0A%09CAP_KILL                             = 0x5%0A%09CAP_LAST_CAP                         = 0x25%0A%09CAP_LEASE                            = 0x1c%0A%09CAP_LINUX_IMMUTABLE                  = 0x9%0A%09CAP_MAC_ADMIN                        = 0x21%0A%09CAP_MAC_OVERRIDE                     = 0x20%0A%09CAP_MKNOD                            = 0x1b%0A%09CAP_NET_ADMIN                        = 0xc%0A%09CAP_NET_BIND_SERVICE                 = 0xa%0A%09CAP_NET_BROADCAST                    = 0xb%0A%09CAP_NET_RAW                          = 0xd%0A%09CAP_SETFCAP                          = 0x1f%0A%09CAP_SETGID                           = 0x6%0A%09CAP_SETPCAP                          = 0x8%0A%09CAP_SETUID                           = 0x7%0A%09CAP_SYSLOG                           = 0x22%0A%09CAP_SYS_ADMIN                        = 0x15%0A%09CAP_SYS_BOOT                         = 0x16%0A%09CAP_SYS_CHROOT                       = 0x12%0A%09CAP_SYS_MODULE                       = 0x10%0A%09CAP_SYS_NICE                         = 0x17%0A%09CAP_SYS_PACCT                        = 0x14%0A%09CAP_SYS_PTRACE                       = 0x13%0A%09CAP_SYS_RAWIO                        = 0x11%0A%09CAP_SYS_RESOURCE                     = 0x18%0A%09CAP_SYS_TIME                         = 0x19%0A%09CAP_SYS_TTY_CONFIG                   = 0x1a%0A%09CAP_WAKE_ALARM                       = 0x23%0A
 %09CBAUD  
- f ec059d83b245888a202a94b45b692d95d05bf98676ffc563e9067d5d985dc8db vendor/golang.org/x/sys/unix/zerrors_linux_mips.go
+ f b0c57e0e549c5302e07bbd3da2e159203b0c57204c8ea91ff407ce27294f0063 vendor/golang.org/x/sys/unix/zerrors_linux_mips.go
dmppatch 4
@@ -15041,16 +15041,1755 @@
   = 0x4%0A
+%09CAP_AUDIT_CONTROL                    = 0x1e%0A%09CAP_AUDIT_READ                       = 0x25%0A%09CAP_AUDIT_WRITE                      = 0x1d%0A%09CAP_BLOCK_SUSPEND                    = 0x24%0A%09CAP_CHOWN                            = 0x0%0A%09CAP_DAC_OVERRIDE                     = 0x1%0A%09CAP_DAC_READ_SEARCH                  = 0x2%0A%09CAP_FOWNER                           = 0x3%0A%09CAP_FSETID                           = 0x4%0A%09CAP_IPC_LOCK                         = 0xe%0A%09CAP_IPC_OWNER                        = 0xf%0A%09CAP_KILL                             = 0x5%0A%09CAP_LAST_CAP                         = 0x25%0A%09CAP_LEASE                            = 0x1c%0A%09CAP_LINUX_IMMUTABLE                  = 0x9%0A%09CAP_MAC_ADMIN                        = 0x21%0A%09CAP_MAC_OVERRIDE                     = 0x20%0A%09CAP_MKNOD                            = 0x1b%0A%09CAP_NET_ADMIN                        = 0xc%0A%09CAP_NET_BIND_SERVICE                 = 0xa%0A%09CAP_NET_BROADCAST                    = 0xb%0A%09CAP_NET_RAW                          = 0xd%0A%09CAP_SETFCAP                          = 0x1f%0A%09CAP_SETGID                           = 0x6%0A%09CAP_SETPCAP                          = 0x8%0A%09CAP_SETUID                           = 0x7%0A%09CAP_SYSLOG                           = 0x22%0A%09CAP_SYS_ADMIN                        = 0x15%0A%09CAP_SYS_BOOT                         = 0x16%0A%09CAP_SYS_CHROOT                       = 0x12%0A%09CAP_SYS_MODULE                       = 0x10%0A%09CAP_SYS_NICE                         = 0x17%0A%09CAP_SYS_PACCT                        = 0x14%0A%09CAP_SYS_PTRACE                       = 0x13%0A%09CAP_SYS_RAWIO                        = 0x11%0A%09CAP_SYS_RESOURCE                     = 0x18%0A%09CAP_SYS_TIME                         = 0x19%0A%09CAP_SYS_TTY_CONFIG                   = 0x1a%0A%09CAP_WAKE_ALARM                       = 0x23%0A
 %09CBAUD  
- f 67358e44bd5e334ff2f173d76749a9493cef65ef3b86bb50d00ea4a390dd9416 vendor/golang.org/x/sys/unix/zerrors_linux_mips64.go
+ f 98cc150a92bd624a0f9a658fbb8b1c4ad9d269575070318c485300e3ddfca795 vendor/golang.org/x/sys/unix/zerrors_linux_mips64.go
dmppatch 4
@@ -15043,16 +15043,1755 @@
   = 0x4%0A
+%09CAP_AUDIT_CONTROL                    = 0x1e%0A%09CAP_AUDIT_READ                       = 0x25%0A%09CAP_AUDIT_WRITE                      = 0x1d%0A%09CAP_BLOCK_SUSPEND                    = 0x24%0A%09CAP_CHOWN                            = 0x0%0A%09CAP_DAC_OVERRIDE                     = 0x1%0A%09CAP_DAC_READ_SEARCH                  = 0x2%0A%09CAP_FOWNER                           = 0x3%0A%09CAP_FSETID                           = 0x4%0A%09CAP_IPC_LOCK                         = 0xe%0A%09CAP_IPC_OWNER                        = 0xf%0A%09CAP_KILL                             = 0x5%0A%09CAP_LAST_CAP                         = 0x25%0A%09CAP_LEASE                            = 0x1c%0A%09CAP_LINUX_IMMUTABLE                  = 0x9%0A%09CAP_MAC_ADMIN                        = 0x21%0A%09CAP_MAC_OVERRIDE                     = 0x20%0A%09CAP_MKNOD                            = 0x1b%0A%09CAP_NET_ADMIN                        = 0xc%0A%09CAP_NET_BIND_SERVICE                 = 0xa%0A%09CAP_NET_BROADCAST                    = 0xb%0A%09CAP_NET_RAW                          = 0xd%0A%09CAP_SETFCAP                          = 0x1f%0A%09CAP_SETGID                           = 0x6%0A%09CAP_SETPCAP                          = 0x8%0A%09CAP_SETUID                           = 0x7%0A%09CAP_SYSLOG                           = 0x22%0A%09CAP_SYS_ADMIN                        = 0x15%0A%09CAP_SYS_BOOT                         = 0x16%0A%09CAP_SYS_CHROOT                       = 0x12%0A%09CAP_SYS_MODULE                       = 0x10%0A%09CAP_SYS_NICE                         = 0x17%0A%09CAP_SYS_PACCT                        = 0x14%0A%09CAP_SYS_PTRACE                       = 0x13%0A%09CAP_SYS_RAWIO                        = 0x11%0A%09CAP_SYS_RESOURCE                     = 0x18%0A%09CAP_SYS_TIME                         = 0x19%0A%09CAP_SYS_TTY_CONFIG                   = 0x1a%0A%09CAP_WAKE_ALARM                       = 0x23%0A
 %09CBAUD  
- f 0ba587681c303340d7556c487c4922fb3be529f4456f8bcb0691b92a84d39d9e vendor/golang.org/x/sys/unix/zerrors_linux_mips64le.go
+ f c9098ff4a11d447dbe1e04cf04281e646acf5f4d754ec46a316da9120f02fd9a vendor/golang.org/x/sys/unix/zerrors_linux_mips64le.go
dmppatch 4
@@ -15045,16 +15045,1755 @@
   = 0x4%0A
+%09CAP_AUDIT_CONTROL                    = 0x1e%0A%09CAP_AUDIT_READ                       = 0x25%0A%09CAP_AUDIT_WRITE                      = 0x1d%0A%09CAP_BLOCK_SUSPEND                    = 0x24%0A%09CAP_CHOWN                            = 0x0%0A%09CAP_DAC_OVERRIDE                     = 0x1%0A%09CAP_DAC_READ_SEARCH                  = 0x2%0A%09CAP_FOWNER                           = 0x3%0A%09CAP_FSETID                           = 0x4%0A%09CAP_IPC_LOCK                         = 0xe%0A%09CAP_IPC_OWNER                        = 0xf%0A%09CAP_KILL                             = 0x5%0A%09CAP_LAST_CAP                         = 0x25%0A%09CAP_LEASE                            = 0x1c%0A%09CAP_LINUX_IMMUTABLE                  = 0x9%0A%09CAP_MAC_ADMIN                        = 0x21%0A%09CAP_MAC_OVERRIDE                     = 0x20%0A%09CAP_MKNOD                            = 0x1b%0A%09CAP_NET_ADMIN                        = 0xc%0A%09CAP_NET_BIND_SERVICE                 = 0xa%0A%09CAP_NET_BROADCAST                    = 0xb%0A%09CAP_NET_RAW                          = 0xd%0A%09CAP_SETFCAP                          = 0x1f%0A%09CAP_SETGID                           = 0x6%0A%09CAP_SETPCAP                          = 0x8%0A%09CAP_SETUID                           = 0x7%0A%09CAP_SYSLOG                           = 0x22%0A%09CAP_SYS_ADMIN                        = 0x15%0A%09CAP_SYS_BOOT                         = 0x16%0A%09CAP_SYS_CHROOT                       = 0x12%0A%09CAP_SYS_MODULE                       = 0x10%0A%09CAP_SYS_NICE                         = 0x17%0A%09CAP_SYS_PACCT                        = 0x14%0A%09CAP_SYS_PTRACE                       = 0x13%0A%09CAP_SYS_RAWIO                        = 0x11%0A%09CAP_SYS_RESOURCE                     = 0x18%0A%09CAP_SYS_TIME                         = 0x19%0A%09CAP_SYS_TTY_CONFIG                   = 0x1a%0A%09CAP_WAKE_ALARM                       = 0x23%0A
 %09CBAUD  
- f c1ee405d1978deb139fb686d30502141bd6918359fe0a0f39843f61344b6ca50 vendor/golang.org/x/sys/unix/zerrors_linux_mipsle.go
+ f e565b91c79909c03d2f9edd5b34bcc0b8ea51918cb7f7cfc6f9130eeadffe61d vendor/golang.org/x/sys/unix/zerrors_linux_mipsle.go
dmppatch 4
@@ -15043,16 +15043,1755 @@
   = 0x4%0A
+%09CAP_AUDIT_CONTROL                    = 0x1e%0A%09CAP_AUDIT_READ                       = 0x25%0A%09CAP_AUDIT_WRITE                      = 0x1d%0A%09CAP_BLOCK_SUSPEND                    = 0x24%0A%09CAP_CHOWN                            = 0x0%0A%09CAP_DAC_OVERRIDE                     = 0x1%0A%09CAP_DAC_READ_SEARCH                  = 0x2%0A%09CAP_FOWNER                           = 0x3%0A%09CAP_FSETID                           = 0x4%0A%09CAP_IPC_LOCK                         = 0xe%0A%09CAP_IPC_OWNER                        = 0xf%0A%09CAP_KILL                             = 0x5%0A%09CAP_LAST_CAP                         = 0x25%0A%09CAP_LEASE                            = 0x1c%0A%09CAP_LINUX_IMMUTABLE                  = 0x9%0A%09CAP_MAC_ADMIN                        = 0x21%0A%09CAP_MAC_OVERRIDE                     = 0x20%0A%09CAP_MKNOD                            = 0x1b%0A%09CAP_NET_ADMIN                        = 0xc%0A%09CAP_NET_BIND_SERVICE                 = 0xa%0A%09CAP_NET_BROADCAST                    = 0xb%0A%09CAP_NET_RAW                          = 0xd%0A%09CAP_SETFCAP                          = 0x1f%0A%09CAP_SETGID                           = 0x6%0A%09CAP_SETPCAP                          = 0x8%0A%09CAP_SETUID                           = 0x7%0A%09CAP_SYSLOG                           = 0x22%0A%09CAP_SYS_ADMIN                        = 0x15%0A%09CAP_SYS_BOOT                         = 0x16%0A%09CAP_SYS_CHROOT                       = 0x12%0A%09CAP_SYS_MODULE                       = 0x10%0A%09CAP_SYS_NICE                         = 0x17%0A%09CAP_SYS_PACCT                        = 0x14%0A%09CAP_SYS_PTRACE                       = 0x13%0A%09CAP_SYS_RAWIO                        = 0x11%0A%09CAP_SYS_RESOURCE                     = 0x18%0A%09CAP_SYS_TIME                         = 0x19%0A%09CAP_SYS_TTY_CONFIG                   = 0x1a%0A%09CAP_WAKE_ALARM                       = 0x23%0A
 %09CBAUD  
- f f37f398ec9dd2fdfde4963dadead8abfbc686940b42062d2a4108a58345d117d vendor/golang.org/x/sys/unix/zerrors_linux_ppc64.go
+ f 1ff867b6f4ed40a3f3b13748117ebd402f075e9dc355f77efb44025818d42d6d vendor/golang.org/x/sys/unix/zerrors_linux_ppc64.go
dmppatch 4
@@ -15010,16 +15010,1755 @@
   = 0x4%0A
+%09CAP_AUDIT_CONTROL                    = 0x1e%0A%09CAP_AUDIT_READ                       = 0x25%0A%09CAP_AUDIT_WRITE                      = 0x1d%0A%09CAP_BLOCK_SUSPEND                    = 0x24%0A%09CAP_CHOWN                            = 0x0%0A%09CAP_DAC_OVERRIDE                     = 0x1%0A%09CAP_DAC_READ_SEARCH                  = 0x2%0A%09CAP_FOWNER                           = 0x3%0A%09CAP_FSETID                           = 0x4%0A%09CAP_IPC_LOCK                         = 0xe%0A%09CAP_IPC_OWNER                        = 0xf%0A%09CAP_KILL                             = 0x5%0A%09CAP_LAST_CAP                         = 0x25%0A%09CAP_LEASE                            = 0x1c%0A%09CAP_LINUX_IMMUTABLE                  = 0x9%0A%09CAP_MAC_ADMIN                        = 0x21%0A%09CAP_MAC_OVERRIDE                     = 0x20%0A%09CAP_MKNOD                            = 0x1b%0A%09CAP_NET_ADMIN                        = 0xc%0A%09CAP_NET_BIND_SERVICE                 = 0xa%0A%09CAP_NET_BROADCAST                    = 0xb%0A%09CAP_NET_RAW                          = 0xd%0A%09CAP_SETFCAP                          = 0x1f%0A%09CAP_SETGID                           = 0x6%0A%09CAP_SETPCAP                          = 0x8%0A%09CAP_SETUID                           = 0x7%0A%09CAP_SYSLOG                           = 0x22%0A%09CAP_SYS_ADMIN                        = 0x15%0A%09CAP_SYS_BOOT                         = 0x16%0A%09CAP_SYS_CHROOT                       = 0x12%0A%09CAP_SYS_MODULE                       = 0x10%0A%09CAP_SYS_NICE                         = 0x17%0A%09CAP_SYS_PACCT                        = 0x14%0A%09CAP_SYS_PTRACE                       = 0x13%0A%09CAP_SYS_RAWIO                        = 0x11%0A%09CAP_SYS_RESOURCE                     = 0x18%0A%09CAP_SYS_TIME                         = 0x19%0A%09CAP_SYS_TTY_CONFIG                   = 0x1a%0A%09CAP_WAKE_ALARM                       = 0x23%0A
 %09CBAUD  
- f 7413d5880b3628b3922e3974948d749e3f87eb41beadfa83c0eab88aa3e510b9 vendor/golang.org/x/sys/unix/zerrors_linux_ppc64le.go
+ f 2ac724cd8b67ae35995550145ee13b06ea23a2f0390d6db9c2167c880f6dff9a vendor/golang.org/x/sys/unix/zerrors_linux_ppc64le.go
dmppatch 4
@@ -15012,16 +15012,1755 @@
   = 0x4%0A
+%09CAP_AUDIT_CONTROL                    = 0x1e%0A%09CAP_AUDIT_READ                       = 0x25%0A%09CAP_AUDIT_WRITE                      = 0x1d%0A%09CAP_BLOCK_SUSPEND                    = 0x24%0A%09CAP_CHOWN                            = 0x0%0A%09CAP_DAC_OVERRIDE                     = 0x1%0A%09CAP_DAC_READ_SEARCH                  = 0x2%0A%09CAP_FOWNER                           = 0x3%0A%09CAP_FSETID                           = 0x4%0A%09CAP_IPC_LOCK                         = 0xe%0A%09CAP_IPC_OWNER                        = 0xf%0A%09CAP_KILL                             = 0x5%0A%09CAP_LAST_CAP                         = 0x25%0A%09CAP_LEASE                            = 0x1c%0A%09CAP_LINUX_IMMUTABLE                  = 0x9%0A%09CAP_MAC_ADMIN                        = 0x21%0A%09CAP_MAC_OVERRIDE                     = 0x20%0A%09CAP_MKNOD                            = 0x1b%0A%09CAP_NET_ADMIN                        = 0xc%0A%09CAP_NET_BIND_SERVICE                 = 0xa%0A%09CAP_NET_BROADCAST                    = 0xb%0A%09CAP_NET_RAW                          = 0xd%0A%09CAP_SETFCAP                          = 0x1f%0A%09CAP_SETGID                           = 0x6%0A%09CAP_SETPCAP                          = 0x8%0A%09CAP_SETUID                           = 0x7%0A%09CAP_SYSLOG                           = 0x22%0A%09CAP_SYS_ADMIN                        = 0x15%0A%09CAP_SYS_BOOT                         = 0x16%0A%09CAP_SYS_CHROOT                       = 0x12%0A%09CAP_SYS_MODULE                       = 0x10%0A%09CAP_SYS_NICE                         = 0x17%0A%09CAP_SYS_PACCT                        = 0x14%0A%09CAP_SYS_PTRACE                       = 0x13%0A%09CAP_SYS_RAWIO                        = 0x11%0A%09CAP_SYS_RESOURCE                     = 0x18%0A%09CAP_SYS_TIME                         = 0x19%0A%09CAP_SYS_TTY_CONFIG                   = 0x1a%0A%09CAP_WAKE_ALARM                       = 0x23%0A
 %09CBAUD  
- f 95957ded1172af05b31572a40fb7268c75aa9dde7a01af01fb0ad6294b91fdfb vendor/golang.org/x/sys/unix/zerrors_linux_riscv64.go
+ f 6c8075faf7e87fb168ad131002354ba7d9d96ed04838a1833f0f43d300b1d640 vendor/golang.org/x/sys/unix/zerrors_linux_riscv64.go
dmppatch 4
@@ -14992,16 +14992,1755 @@
   = 0x4%0A
+%09CAP_AUDIT_CONTROL                    = 0x1e%0A%09CAP_AUDIT_READ                       = 0x25%0A%09CAP_AUDIT_WRITE                      = 0x1d%0A%09CAP_BLOCK_SUSPEND                    = 0x24%0A%09CAP_CHOWN                            = 0x0%0A%09CAP_DAC_OVERRIDE                     = 0x1%0A%09CAP_DAC_READ_SEARCH                  = 0x2%0A%09CAP_FOWNER                           = 0x3%0A%09CAP_FSETID                           = 0x4%0A%09CAP_IPC_LOCK                         = 0xe%0A%09CAP_IPC_OWNER                        = 0xf%0A%09CAP_KILL                             = 0x5%0A%09CAP_LAST_CAP                         = 0x25%0A%09CAP_LEASE                            = 0x1c%0A%09CAP_LINUX_IMMUTABLE                  = 0x9%0A%09CAP_MAC_ADMIN                        = 0x21%0A%09CAP_MAC_OVERRIDE                     = 0x20%0A%09CAP_MKNOD                            = 0x1b%0A%09CAP_NET_ADMIN                        = 0xc%0A%09CAP_NET_BIND_SERVICE                 = 0xa%0A%09CAP_NET_BROADCAST                    = 0xb%0A%09CAP_NET_RAW                          = 0xd%0A%09CAP_SETFCAP                          = 0x1f%0A%09CAP_SETGID                           = 0x6%0A%09CAP_SETPCAP                          = 0x8%0A%09CAP_SETUID                           = 0x7%0A%09CAP_SYSLOG                           = 0x22%0A%09CAP_SYS_ADMIN                        = 0x15%0A%09CAP_SYS_BOOT                         = 0x16%0A%09CAP_SYS_CHROOT                       = 0x12%0A%09CAP_SYS_MODULE                       = 0x10%0A%09CAP_SYS_NICE                         = 0x17%0A%09CAP_SYS_PACCT                        = 0x14%0A%09CAP_SYS_PTRACE                       = 0x13%0A%09CAP_SYS_RAWIO                        = 0x11%0A%09CAP_SYS_RESOURCE                     = 0x18%0A%09CAP_SYS_TIME                         = 0x19%0A%09CAP_SYS_TTY_CONFIG                   = 0x1a%0A%09CAP_WAKE_ALARM                       = 0x23%0A
 %09CBAUD  
- f 3efc307a79eee827e67fc22a783150796a4961b62e8a8da11ddc7e98b9dab02d vendor/golang.org/x/sys/unix/zerrors_linux_s390x.go
+ f a00766b024fac1841fa04f206da93fb2bb1b6e4afc1192ca54e8b2a8b0ccf584 vendor/golang.org/x/sys/unix/zerrors_linux_s390x.go
dmppatch 4
@@ -15018,16 +15018,1755 @@
   = 0x4%0A
+%09CAP_AUDIT_CONTROL                    = 0x1e%0A%09CAP_AUDIT_READ                       = 0x25%0A%09CAP_AUDIT_WRITE                      = 0x1d%0A%09CAP_BLOCK_SUSPEND                    = 0x24%0A%09CAP_CHOWN                            = 0x0%0A%09CAP_DAC_OVERRIDE                     = 0x1%0A%09CAP_DAC_READ_SEARCH                  = 0x2%0A%09CAP_FOWNER                           = 0x3%0A%09CAP_FSETID                           = 0x4%0A%09CAP_IPC_LOCK                         = 0xe%0A%09CAP_IPC_OWNER                        = 0xf%0A%09CAP_KILL                             = 0x5%0A%09CAP_LAST_CAP                         = 0x25%0A%09CAP_LEASE                            = 0x1c%0A%09CAP_LINUX_IMMUTABLE                  = 0x9%0A%09CAP_MAC_ADMIN                        = 0x21%0A%09CAP_MAC_OVERRIDE                     = 0x20%0A%09CAP_MKNOD                            = 0x1b%0A%09CAP_NET_ADMIN                        = 0xc%0A%09CAP_NET_BIND_SERVICE                 = 0xa%0A%09CAP_NET_BROADCAST                    = 0xb%0A%09CAP_NET_RAW                          = 0xd%0A%09CAP_SETFCAP                          = 0x1f%0A%09CAP_SETGID                           = 0x6%0A%09CAP_SETPCAP                          = 0x8%0A%09CAP_SETUID                           = 0x7%0A%09CAP_SYSLOG                           = 0x22%0A%09CAP_SYS_ADMIN                        = 0x15%0A%09CAP_SYS_BOOT                         = 0x16%0A%09CAP_SYS_CHROOT                       = 0x12%0A%09CAP_SYS_MODULE                       = 0x10%0A%09CAP_SYS_NICE                         = 0x17%0A%09CAP_SYS_PACCT                        = 0x14%0A%09CAP_SYS_PTRACE                       = 0x13%0A%09CAP_SYS_RAWIO                        = 0x11%0A%09CAP_SYS_RESOURCE                     = 0x18%0A%09CAP_SYS_TIME                         = 0x19%0A%09CAP_SYS_TTY_CONFIG                   = 0x1a%0A%09CAP_WAKE_ALARM                       = 0x23%0A
 %09CBAUD  
- f d22f7419cb4bc48c3d7727362a1fe948c63e09463cd27faf64b1355949141d26 vendor/golang.org/x/sys/unix/zerrors_linux_sparc64.go
+ f 048d2e8766696f7e77acbc9d7d0cbcdabce1eca39c98d31c934a365b20bdbe14 vendor/golang.org/x/sys/unix/zerrors_linux_sparc64.go
dmppatch 4
@@ -15179,16 +15179,1755 @@
   = 0x4%0A
+%09CAP_AUDIT_CONTROL                    = 0x1e%0A%09CAP_AUDIT_READ                       = 0x25%0A%09CAP_AUDIT_WRITE                      = 0x1d%0A%09CAP_BLOCK_SUSPEND                    = 0x24%0A%09CAP_CHOWN                            = 0x0%0A%09CAP_DAC_OVERRIDE                     = 0x1%0A%09CAP_DAC_READ_SEARCH                  = 0x2%0A%09CAP_FOWNER                           = 0x3%0A%09CAP_FSETID                           = 0x4%0A%09CAP_IPC_LOCK                         = 0xe%0A%09CAP_IPC_OWNER                        = 0xf%0A%09CAP_KILL                             = 0x5%0A%09CAP_LAST_CAP                         = 0x25%0A%09CAP_LEASE                            = 0x1c%0A%09CAP_LINUX_IMMUTABLE                  = 0x9%0A%09CAP_MAC_ADMIN                        = 0x21%0A%09CAP_MAC_OVERRIDE                     = 0x20%0A%09CAP_MKNOD                            = 0x1b%0A%09CAP_NET_ADMIN                        = 0xc%0A%09CAP_NET_BIND_SERVICE                 = 0xa%0A%09CAP_NET_BROADCAST                    = 0xb%0A%09CAP_NET_RAW                          = 0xd%0A%09CAP_SETFCAP                          = 0x1f%0A%09CAP_SETGID                           = 0x6%0A%09CAP_SETPCAP                          = 0x8%0A%09CAP_SETUID                           = 0x7%0A%09CAP_SYSLOG                           = 0x22%0A%09CAP_SYS_ADMIN                        = 0x15%0A%09CAP_SYS_BOOT                         = 0x16%0A%09CAP_SYS_CHROOT                       = 0x12%0A%09CAP_SYS_MODULE                       = 0x10%0A%09CAP_SYS_NICE                         = 0x17%0A%09CAP_SYS_PACCT                        = 0x14%0A%09CAP_SYS_PTRACE                       = 0x13%0A%09CAP_SYS_RAWIO                        = 0x11%0A%09CAP_SYS_RESOURCE                     = 0x18%0A%09CAP_SYS_TIME                         = 0x19%0A%09CAP_SYS_TTY_CONFIG                   = 0x1a%0A%09CAP_WAKE_ALARM                       = 0x23%0A
 %09CBAUD  
- f 1bc8c50830a7210e22d5d757390a54afb2ddfd9cc0889d4075020cb9fe737028 vendor/golang.org/x/sys/unix/zsyscall_dragonfly_amd64.go
+ f 4a1e50965acb763996886059a92997ddb5e6a439fa231a5750b93f9f1274e884 vendor/golang.org/x/sys/unix/zsyscall_dragonfly_amd64.go
dmppatch 4
@@ -18511,32 +18511,416 @@
 P; DO NOT EDIT%0A%0A
+func Getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A%09var _p0 unsafe.Pointer%0A%09if len(buf) %3E 0 %7B%0A%09%09_p0 = unsafe.Pointer(&buf%5B0%5D)%0A%09%7D else %7B%0A%09%09_p0 = unsafe.Pointer(&_zero)%0A%09%7D%0A%09r0, _, e1 := Syscall(SYS_GETDENTS, uintptr(fd), uintptr(_p0), uintptr(len(buf)))%0A%09n = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Getdirentri
- f 81cf91cdaad67f5b6078b59e305ff6a45a948cf8e3c1ca8690f7705e9fe0bcf1 vendor/golang.org/x/sys/unix/zsyscall_freebsd_386.go
+ f 1dde6586ee021e34f13fe5abc33fe9f8168f194f5502085512e29ba37e49d072 vendor/golang.org/x/sys/unix/zsyscall_freebsd_386.go
dmppatch 9
@@ -10162,32 +10162,321 @@
 P; DO NOT EDIT%0A%0A
+func ptrace(request int, pid int, addr uintptr, data int) (err error) %7B%0A%09_, _, e1 := Syscall6(SYS_PTRACE, uintptr(request), uintptr(pid), uintptr(addr), uintptr(data), 0, 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Getcwd(buf 
@@ -26339,94 +26339,93 @@
 IT%0A%0A
-func getdirentries_freebsd12(fd int, buf %5B%5Dbyte, basep *uintptr) (n int, err error) %7B%0A
+func getdirentries_freebsd12(fd int, buf %5B%5Dbyte, basep *uint64) (n int, err error) %7B%0A
 %09var
- f 70a5bea264a12fdf61af42766aa5de4fac3e6b9e4bb030214685dccec3e532d0 vendor/golang.org/x/sys/unix/zsyscall_freebsd_amd64.go
+ f f3866b301e678a156a76aaf14d3b2a5f4fdcdf8925ed86a7420336fc9a0ea7d9 vendor/golang.org/x/sys/unix/zsyscall_freebsd_amd64.go
dmppatch 9
@@ -10163,32 +10163,321 @@
 P; DO NOT EDIT%0A%0A
+func ptrace(request int, pid int, addr uintptr, data int) (err error) %7B%0A%09_, _, e1 := Syscall6(SYS_PTRACE, uintptr(request), uintptr(pid), uintptr(addr), uintptr(data), 0, 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Getcwd(buf 
@@ -26286,94 +26286,93 @@
 IT%0A%0A
-func getdirentries_freebsd12(fd int, buf %5B%5Dbyte, basep *uintptr) (n int, err error) %7B%0A
+func getdirentries_freebsd12(fd int, buf %5B%5Dbyte, basep *uint64) (n int, err error) %7B%0A
 %09var
- f 855cb4dcebdbf3dd03ae8d945c7b8969a995fc59834f21e21c2b1719fa7cdf2f vendor/golang.org/x/sys/unix/zsyscall_freebsd_arm.go
+ f 6d443afd28a02fe39e653414237f9b301a9fb039cb4d62a29bc56f97041cfa76 vendor/golang.org/x/sys/unix/zsyscall_freebsd_arm.go
dmppatch 9
@@ -10167,32 +10167,321 @@
 P; DO NOT EDIT%0A%0A
+func ptrace(request int, pid int, addr uintptr, data int) (err error) %7B%0A%09_, _, e1 := Syscall6(SYS_PTRACE, uintptr(request), uintptr(pid), uintptr(addr), uintptr(data), 0, 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Getcwd(buf 
@@ -26363,94 +26363,93 @@
 IT%0A%0A
-func getdirentries_freebsd12(fd int, buf %5B%5Dbyte, basep *uintptr) (n int, err error) %7B%0A
+func getdirentries_freebsd12(fd int, buf %5B%5Dbyte, basep *uint64) (n int, err error) %7B%0A
 %09var
- f 32c5a2c66df4929fca4e0cec09ed140f23adb284fde11f83c822124c11bf0a4c vendor/golang.org/x/sys/unix/zsyscall_freebsd_arm64.go
+ f 49b63b1c8d0b2a8fc4651f051342e30bb832feac46d80c94a7d5ecab28f58bdf vendor/golang.org/x/sys/unix/zsyscall_freebsd_arm64.go
dmppatch 9
@@ -10534,24 +10534,313 @@
 O NOT EDIT%0A%0A
+func ptrace(request int, pid int, addr uintptr, data int) (err error) %7B%0A%09_, _, e1 := Syscall6(SYS_PTRACE, uintptr(request), uintptr(pid), uintptr(addr), uintptr(data), 0, 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func ioctl(f
@@ -26289,94 +26289,93 @@
 IT%0A%0A
-func getdirentries_freebsd12(fd int, buf %5B%5Dbyte, basep *uintptr) (n int, err error) %7B%0A
+func getdirentries_freebsd12(fd int, buf %5B%5Dbyte, basep *uint64) (n int, err error) %7B%0A
 %09var
- f 27e4bee4e3eecde56fdbf506d83e1a5926487b4a7b117793252a8b3568436017 vendor/golang.org/x/sys/unix/zsyscall_linux_386.go
+ f 25af7f8d9881803781c8905d820968e1881c574397746dd1516e09732da47299 vendor/golang.org/x/sys/unix/zsyscall_linux_386.go
dmppatch 9
@@ -10420,24 +10420,578 @@
 O NOT EDIT%0A%0A
+func Capget(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0Afunc Capset(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPSET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Chdir(p
@@ -34425,150 +34425,284 @@
 IT%0A%0A
-func Signalfd(fd int, mask *Sigset_t, flags int) %7B%0A%09SyscallNoError(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(mask)), uintptr(flags))%0A
+func signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) %7B%0A%09r0, _, e1 := Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0, 0)%0A%09newfd = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A
 %09ret
- f 42eeefd09e51fd4abcad6773566cf15e8bc01c3f13f9f30b3a88c5ae5c518698 vendor/golang.org/x/sys/unix/zsyscall_linux_amd64.go
+ f 2f30c21b1ff1680246627f3f6dcd34438690c2e96371f467cfa63497273d267a vendor/golang.org/x/sys/unix/zsyscall_linux_amd64.go
dmppatch 9
@@ -10405,24 +10405,578 @@
 O NOT EDIT%0A%0A
+func Capget(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0Afunc Capset(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPSET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Chdir(p
@@ -34380,150 +34380,284 @@
 IT%0A%0A
-func Signalfd(fd int, mask *Sigset_t, flags int) %7B%0A%09SyscallNoError(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(mask)), uintptr(flags))%0A
+func signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) %7B%0A%09r0, _, e1 := Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0, 0)%0A%09newfd = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A
 %09ret
- f 02cfea06baa16568f83b52925ff4113522a6072055b65a2ce7d172204df3bf3f vendor/golang.org/x/sys/unix/zsyscall_linux_arm.go
+ f 5f57c3515861705069b4cda224a6a1ad877a179ae5da36e202273ac0b3c44ba1 vendor/golang.org/x/sys/unix/zsyscall_linux_arm.go
dmppatch 9
@@ -10425,24 +10425,578 @@
 O NOT EDIT%0A%0A
+func Capget(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0Afunc Capset(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPSET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Chdir(p
@@ -34430,150 +34430,284 @@
 IT%0A%0A
-func Signalfd(fd int, mask *Sigset_t, flags int) %7B%0A%09SyscallNoError(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(mask)), uintptr(flags))%0A
+func signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) %7B%0A%09r0, _, e1 := Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0, 0)%0A%09newfd = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A
 %09ret
- f d1a497a1570138e7e39389c5b47107275dd2965a1b7c061e0d37daca2224dc6f vendor/golang.org/x/sys/unix/zsyscall_linux_arm64.go
+ f a08cefbcdf5396be9f435ebf017be100aee89e9c850cabb3c136808fe1ed867f vendor/golang.org/x/sys/unix/zsyscall_linux_arm64.go
dmppatch 9
@@ -10405,24 +10405,578 @@
 O NOT EDIT%0A%0A
+func Capget(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0Afunc Capset(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPSET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Chdir(p
@@ -34380,150 +34380,284 @@
 IT%0A%0A
-func Signalfd(fd int, mask *Sigset_t, flags int) %7B%0A%09SyscallNoError(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(mask)), uintptr(flags))%0A
+func signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) %7B%0A%09r0, _, e1 := Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0, 0)%0A%09newfd = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A
 %09ret
- f 3b17d4d4b0efba9332aa93a79fa8938c49ec9928d2c253a454ae4102c50f7f55 vendor/golang.org/x/sys/unix/zsyscall_linux_mips.go
+ f 0724a08fc96513f5a4d5b1d24939e89d60990f28f518f74a37bc5c9d1cd7279e vendor/golang.org/x/sys/unix/zsyscall_linux_mips.go
dmppatch 9
@@ -10429,24 +10429,578 @@
 O NOT EDIT%0A%0A
+func Capget(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0Afunc Capset(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPSET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Chdir(p
@@ -34434,150 +34434,284 @@
 IT%0A%0A
-func Signalfd(fd int, mask *Sigset_t, flags int) %7B%0A%09SyscallNoError(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(mask)), uintptr(flags))%0A
+func signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) %7B%0A%09r0, _, e1 := Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0, 0)%0A%09newfd = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A
 %09ret
- f a9910feee28b2f89123bcd4d0b8fc75d7a914bc4516fecefdeccf602e18aef82 vendor/golang.org/x/sys/unix/zsyscall_linux_mips64.go
+ f 8275d2cf511dc7b74278e0c63e25be1759262df49496e57ce0d9457f6c741b8b vendor/golang.org/x/sys/unix/zsyscall_linux_mips64.go
dmppatch 9
@@ -10409,24 +10409,578 @@
 O NOT EDIT%0A%0A
+func Capget(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0Afunc Capset(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPSET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Chdir(p
@@ -34384,150 +34384,284 @@
 IT%0A%0A
-func Signalfd(fd int, mask *Sigset_t, flags int) %7B%0A%09SyscallNoError(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(mask)), uintptr(flags))%0A
+func signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) %7B%0A%09r0, _, e1 := Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0, 0)%0A%09newfd = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A
 %09ret
- f 59bf67d680b6f58dd81dd8eb02a825d7f3f2a7844268bfd166cc608f8447512b vendor/golang.org/x/sys/unix/zsyscall_linux_mips64le.go
+ f 2064a076dd95e03c4024f507ca9300ec136c4ba8e64067088076f974e5eb2594 vendor/golang.org/x/sys/unix/zsyscall_linux_mips64le.go
dmppatch 9
@@ -10413,24 +10413,578 @@
 O NOT EDIT%0A%0A
+func Capget(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0Afunc Capset(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPSET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Chdir(p
@@ -34388,150 +34388,284 @@
 IT%0A%0A
-func Signalfd(fd int, mask *Sigset_t, flags int) %7B%0A%09SyscallNoError(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(mask)), uintptr(flags))%0A
+func signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) %7B%0A%09r0, _, e1 := Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0, 0)%0A%09newfd = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A
 %09ret
- f 9296ea6f8c5dbbbb3f4b35825af2280a6a5b9f394e2f54721ad8ed25dc8311dc vendor/golang.org/x/sys/unix/zsyscall_linux_mipsle.go
+ f da370d8f76fd4996e9d3512405607d2ec22b8d6edcef3ccba148d4a80e725ba7 vendor/golang.org/x/sys/unix/zsyscall_linux_mipsle.go
dmppatch 9
@@ -10433,24 +10433,578 @@
 O NOT EDIT%0A%0A
+func Capget(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0Afunc Capset(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPSET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Chdir(p
@@ -34438,150 +34438,284 @@
 IT%0A%0A
-func Signalfd(fd int, mask *Sigset_t, flags int) %7B%0A%09SyscallNoError(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(mask)), uintptr(flags))%0A
+func signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) %7B%0A%09r0, _, e1 := Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0, 0)%0A%09newfd = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A
 %09ret
- f 1cbfa2851b361af85b731b54941d39ca24a9fd515b563043bbd36fa1d207d504 vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64.go
+ f 60247241d013e0ee52b80e946d5b37b3a7ec5d3c8ecff0612c3b27a23db4be89 vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64.go
dmppatch 9
@@ -10406,24 +10406,578 @@
 O NOT EDIT%0A%0A
+func Capget(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0Afunc Capset(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPSET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Chdir(p
@@ -34381,150 +34381,284 @@
 IT%0A%0A
-func Signalfd(fd int, mask *Sigset_t, flags int) %7B%0A%09SyscallNoError(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(mask)), uintptr(flags))%0A
+func signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) %7B%0A%09r0, _, e1 := Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0, 0)%0A%09newfd = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A
 %09ret
- f 140ad4d9625aca9a3d13d0724bdf13af947b4f77aa8bb23656a664ac73b16387 vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64le.go
+ f 165d4e98715a1ddafb4d04d5b054c5d5b21c055d3c0ff76e2c9aafef78c54ddb vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64le.go
dmppatch 9
@@ -10410,24 +10410,578 @@
 O NOT EDIT%0A%0A
+func Capget(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0Afunc Capset(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPSET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Chdir(p
@@ -34385,150 +34385,284 @@
 IT%0A%0A
-func Signalfd(fd int, mask *Sigset_t, flags int) %7B%0A%09SyscallNoError(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(mask)), uintptr(flags))%0A
+func signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) %7B%0A%09r0, _, e1 := Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0, 0)%0A%09newfd = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A
 %09ret
- f a9f598bcee0f0726d02e60dffb7aa782dfb599fc0ff2698ce334b269ac481e9a vendor/golang.org/x/sys/unix/zsyscall_linux_riscv64.go
+ f ace47d4ac2410f9dabe5fb3194add326e2a2a95f37ca97a58ff652fdd7aa15ae vendor/golang.org/x/sys/unix/zsyscall_linux_riscv64.go
dmppatch 9
@@ -10411,24 +10411,578 @@
 O NOT EDIT%0A%0A
+func Capget(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0Afunc Capset(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPSET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Chdir(p
@@ -34386,150 +34386,284 @@
 IT%0A%0A
-func Signalfd(fd int, mask *Sigset_t, flags int) %7B%0A%09SyscallNoError(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(mask)), uintptr(flags))%0A
+func signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) %7B%0A%09r0, _, e1 := Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0, 0)%0A%09newfd = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A
 %09ret
- f ff5f2040b9a3fed31befb79a4c4bc31d2dc3aa88386fd62154c16f97c5c3a98e vendor/golang.org/x/sys/unix/zsyscall_linux_s390x.go
+ f caa2691cacffc402bcc9b2d5038ba8043992fbd9f6ef7469bf65fe04a4f28c6c vendor/golang.org/x/sys/unix/zsyscall_linux_s390x.go
dmppatch 9
@@ -10405,24 +10405,578 @@
 O NOT EDIT%0A%0A
+func Capget(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0Afunc Capset(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPSET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Chdir(p
@@ -34380,150 +34380,284 @@
 IT%0A%0A
-func Signalfd(fd int, mask *Sigset_t, flags int) %7B%0A%09SyscallNoError(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(mask)), uintptr(flags))%0A
+func signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) %7B%0A%09r0, _, e1 := Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0, 0)%0A%09newfd = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A
 %09ret
- f 39969b30cf695c2def4b94f84c8767ef7ff4233ffe6955cfd28f8f743d4301e4 vendor/golang.org/x/sys/unix/zsyscall_linux_sparc64.go
+ f 5a3abba1dcdfa36c0e82344c776770a5f33e19923bfd6a03ab0d7f6998ceb376 vendor/golang.org/x/sys/unix/zsyscall_linux_sparc64.go
dmppatch 9
@@ -10411,24 +10411,578 @@
 O NOT EDIT%0A%0A
+func Capget(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPGET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0Afunc Capset(hdr *CapUserHeader, data *CapUserData) (err error) %7B%0A%09_, _, e1 := Syscall(SYS_CAPSET, uintptr(unsafe.Pointer(hdr)), uintptr(unsafe.Pointer(data)), 0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A%09return%0A%7D%0A%0A// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT%0A%0A
 func Chdir(p
@@ -34386,150 +34386,284 @@
 IT%0A%0A
-func Signalfd(fd int, mask *Sigset_t, flags int) %7B%0A%09SyscallNoError(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(mask)), uintptr(flags))%0A
+func signalfd(fd int, sigmask *Sigset_t, maskSize uintptr, flags int) (newfd int, err error) %7B%0A%09r0, _, e1 := Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0, 0)%0A%09newfd = int(r0)%0A%09if e1 != 0 %7B%0A%09%09err = errnoErr(e1)%0A%09%7D%0A
 %09ret
- f b2edcb09b8864a80273dd1ae4e365649406f2a92637116863c63b0d5c9c6c1a8 vendor/golang.org/x/sys/unix/zsyscall_netbsd_386.go
+ f 068cb36e29b594c08328126432f139c22083b8536f486264c8d3a66ea1e51ef2 vendor/golang.org/x/sys/unix/zsyscall_netbsd_386.go
dmppatch 5
@@ -10165,63 +10165,63 @@
 IT%0A%0A
-func getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
+func Getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
 %09var
- f 4bd928095c354b013bae53e9189195746bf57f17d0da10435be81a12e97e6b85 vendor/golang.org/x/sys/unix/zsyscall_netbsd_amd64.go
+ f 37c7241d1b65744cc47bafd5fe99eba3d02e0bcb390b6584e786d77af4c8d6bb vendor/golang.org/x/sys/unix/zsyscall_netbsd_amd64.go
dmppatch 5
@@ -10166,63 +10166,63 @@
 IT%0A%0A
-func getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
+func Getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
 %09var
- f 7d80d298e9f094022caee3dfa19c54b8e9e74900d2da76c4b2f29cebd00cd53e vendor/golang.org/x/sys/unix/zsyscall_netbsd_arm.go
+ f abb4c7a78b43c8e9bd19785f54a635d62fbdd25815cef6e9d45d77786f8bc337 vendor/golang.org/x/sys/unix/zsyscall_netbsd_arm.go
dmppatch 5
@@ -10170,63 +10170,63 @@
 IT%0A%0A
-func getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
+func Getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
 %09var
- f a8b4b556d44a6a1f8405b50d445edf2be4567fa53671a850b0f095e31c77245e vendor/golang.org/x/sys/unix/zsyscall_netbsd_arm64.go
+ f 75dab0cfde1933e528c48a7f4644f237eb9e1b46763fe169b858123df7bba197 vendor/golang.org/x/sys/unix/zsyscall_netbsd_arm64.go
dmppatch 5
@@ -10166,63 +10166,63 @@
 IT%0A%0A
-func getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
+func Getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
 %09var
- f 556d03f65ae6c166c80d31b6881884d2ff68d0ebe725314e771053bd32444062 vendor/golang.org/x/sys/unix/zsyscall_openbsd_386.go
+ f e94efe9f76e510388359dcd615eb4fb1bcec14de4b3800d3a81832cc2a87462c vendor/golang.org/x/sys/unix/zsyscall_openbsd_386.go
dmppatch 5
@@ -10157,63 +10157,63 @@
 IT%0A%0A
-func getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
+func Getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
 %09var
- f 3f94263738bed7e80c8d0d69210a4b0c802a405cbc3fb2e491b139f409d9b9c4 vendor/golang.org/x/sys/unix/zsyscall_openbsd_amd64.go
+ f 8ee133b4a229f6877f2ce07e85ec1f2f2b59348616ec691dc72436b9f68f5d67 vendor/golang.org/x/sys/unix/zsyscall_openbsd_amd64.go
dmppatch 5
@@ -10158,63 +10158,63 @@
 IT%0A%0A
-func getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
+func Getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
 %09var
- f 80d2d0692589a981b623181aa28a35013f20750f2a7a04b599d245f693290716 vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm.go
+ f 61211695eec973b84942f54f747945c78b45b32b158a8070fe9e50dd831837de vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm.go
dmppatch 5
@@ -10162,63 +10162,63 @@
 IT%0A%0A
-func getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
+func Getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
 %09var
- f ae673ecbb8c1c72cd8a7777054ff4de99304cbd2dec5d1e77a609a07a51d49c2 vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm64.go
+ f 87fb83bfa26ec76f241481fd28a8859183af32f899c1a0596ae2dee9a4ec46c8 vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm64.go
dmppatch 5
@@ -10158,63 +10158,63 @@
 IT%0A%0A
-func getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
+func Getdents(fd int, buf %5B%5Dbyte) (n int, err error) %7B%0A
 %09var
- f ca1a8dee33588632744e4a96485c138dd0ecf9e9f5011edf4681ca1b6ad0a3f5 vendor/golang.org/x/sys/unix/zsysnum_freebsd_386.go
+ f 6eebff45d6862e3b93ba35ee2de3865e9ee790c493798935abe7f62d2979a4a7 vendor/golang.org/x/sys/unix/zsysnum_freebsd_386.go
dmppatch 43
@@ -1,90 +1,90 @@
-// go run mksysnum.go https://svn.freebsd.org/base/stable/10/sys/kern/syscalls.master%0A
+// go run mksysnum.go https://svn.freebsd.org/base/stable/11/sys/kern/syscalls.master%0A
 // C
@@ -9778,261 +9778,8 @@
 ; %7D%0A
-%09SYS_FREEBSD6_PREAD           = 173 // %7B ssize_t freebsd6_pread(int fd, void *buf, size_t nbyte, int pad, off_t offset); %7D%0A%09SYS_FREEBSD6_PWRITE          = 174 // %7B ssize_t freebsd6_pwrite(int fd, const void *buf, size_t nbyte, int pad, off_t offset); %7D%0A
 %09SYS
@@ -10875,456 +10875,8 @@
 ; %7D%0A
-%09SYS_FREEBSD6_MMAP            = 197 // %7B caddr_t freebsd6_mmap(caddr_t addr, size_t len, int prot, int flags, int fd, int pad, off_t pos); %7D%0A%09SYS_FREEBSD6_LSEEK           = 199 // %7B off_t freebsd6_lseek(int fd, int pad, off_t offset, int whence); %7D%0A%09SYS_FREEBSD6_TRUNCATE        = 200 // %7B int freebsd6_truncate(char *path, int pad, off_t length); %7D%0A%09SYS_FREEBSD6_FTRUNCATE       = 201 // %7B int freebsd6_ftruncate(int fd, int pad, off_t length); %7D%0A
 %09SYS
@@ -13509,24 +13509,171 @@
 e *cest); %7D%0A
+%09SYS_CLOCK_NANOSLEEP          = 244 // %7B int clock_nanosleep(clockid_t clock_id, int flags, const struct timespec *rqtp, struct timespec *rmtp); %7D%0A
 %09SYS_CLOCK_G
@@ -16511,89 +16511,93 @@
 ; %7D%0A
-%09SYS_AIO_RETURN               = 314 // %7B int aio_return(struct aiocb *aiocbp); %7D%0A
+%09SYS_AIO_RETURN               = 314 // %7B ssize_t aio_return(struct aiocb *aiocbp); %7D%0A
 %09SYS
@@ -16899,307 +16899,8 @@
 ; %7D%0A
-%09SYS_OAIO_READ                = 318 // %7B int oaio_read(struct oaiocb *aiocbp); %7D%0A%09SYS_OAIO_WRITE               = 319 // %7B int oaio_write(struct oaiocb *aiocbp); %7D%0A%09SYS_OLIO_LISTIO              = 320 // %7B int olio_listio(int mode, struct oaiocb * const *acb_list, int nent, struct osigevent *sig); %7D%0A
 %09SYS
@@ -20135,123 +20135,127 @@
 ; %7D%0A
-%09SYS_AIO_WAITCOMPLETE         = 359 // %7B int aio_waitcomplete( struct aiocb **aiocbp, struct timespec *timeout); %7D%0A
+%09SYS_AIO_WAITCOMPLETE         = 359 // %7B ssize_t aio_waitcomplete( struct aiocb **aiocbp, struct timespec *timeout); %7D%0A
 %09SYS
@@ -22412,111 +22412,110 @@
 ; %7D%0A
-%09SYS_GETFSSTAT                = 395 // %7B int getfsstat(struct statfs *buf, long bufsize, int flags); %7D%0A
+%09SYS_GETFSSTAT                = 395 // %7B int getfsstat(struct statfs *buf, long bufsize, int mode); %7D%0A
 %09SYS
@@ -25818,166 +25818,8 @@
 ; %7D%0A
-%09SYS__UMTX_LOCK               = 434 // %7B int _umtx_lock(struct umtx *umtx); %7D%0A%09SYS__UMTX_UNLOCK             = 435 // %7B int _umtx_unlock(struct umtx *umtx); %7D%0A
 %09SYS
@@ -36684,10 +36684,344 @@
 lag); %7D%0A
+%09SYS_NUMA_GETAFFINITY         = 548 // %7B int numa_getaffinity(cpuwhich_t which, id_t id, struct vm_domain_policy_entry *policy); %7D%0A%09SYS_NUMA_SETAFFINITY         = 549 // %7B int numa_setaffinity(cpuwhich_t which, id_t id, const struct vm_domain_policy_entry *policy); %7D%0A%09SYS_FDATASYNC                = 550 // %7B int fdatasync(int fd); %7D%0A
 )%0A
- f 1d399bff988d9e35eac6a34f704684725b694efda48ea0720290d05eb697bc65 vendor/golang.org/x/sys/unix/zsysnum_freebsd_amd64.go
+ f 98816fec33552ec235329da5117040c4b73ed00a1b69346b22377fb944457395 vendor/golang.org/x/sys/unix/zsysnum_freebsd_amd64.go
dmppatch 43
@@ -1,90 +1,90 @@
-// go run mksysnum.go https://svn.freebsd.org/base/stable/10/sys/kern/syscalls.master%0A
+// go run mksysnum.go https://svn.freebsd.org/base/stable/11/sys/kern/syscalls.master%0A
 // C
@@ -9780,261 +9780,8 @@
 ; %7D%0A
-%09SYS_FREEBSD6_PREAD           = 173 // %7B ssize_t freebsd6_pread(int fd, void *buf, size_t nbyte, int pad, off_t offset); %7D%0A%09SYS_FREEBSD6_PWRITE          = 174 // %7B ssize_t freebsd6_pwrite(int fd, const void *buf, size_t nbyte, int pad, off_t offset); %7D%0A
 %09SYS
@@ -10877,456 +10877,8 @@
 ; %7D%0A
-%09SYS_FREEBSD6_MMAP            = 197 // %7B caddr_t freebsd6_mmap(caddr_t addr, size_t len, int prot, int flags, int fd, int pad, off_t pos); %7D%0A%09SYS_FREEBSD6_LSEEK           = 199 // %7B off_t freebsd6_lseek(int fd, int pad, off_t offset, int whence); %7D%0A%09SYS_FREEBSD6_TRUNCATE        = 200 // %7B int freebsd6_truncate(char *path, int pad, off_t length); %7D%0A%09SYS_FREEBSD6_FTRUNCATE       = 201 // %7B int freebsd6_ftruncate(int fd, int pad, off_t length); %7D%0A
 %09SYS
@@ -13511,24 +13511,171 @@
 e *cest); %7D%0A
+%09SYS_CLOCK_NANOSLEEP          = 244 // %7B int clock_nanosleep(clockid_t clock_id, int flags, const struct timespec *rqtp, struct timespec *rmtp); %7D%0A
 %09SYS_CLOCK_G
@@ -16513,89 +16513,93 @@
 ; %7D%0A
-%09SYS_AIO_RETURN               = 314 // %7B int aio_return(struct aiocb *aiocbp); %7D%0A
+%09SYS_AIO_RETURN               = 314 // %7B ssize_t aio_return(struct aiocb *aiocbp); %7D%0A
 %09SYS
@@ -16901,307 +16901,8 @@
 ; %7D%0A
-%09SYS_OAIO_READ                = 318 // %7B int oaio_read(struct oaiocb *aiocbp); %7D%0A%09SYS_OAIO_WRITE               = 319 // %7B int oaio_write(struct oaiocb *aiocbp); %7D%0A%09SYS_OLIO_LISTIO              = 320 // %7B int olio_listio(int mode, struct oaiocb * const *acb_list, int nent, struct osigevent *sig); %7D%0A
 %09SYS
@@ -20137,123 +20137,127 @@
 ; %7D%0A
-%09SYS_AIO_WAITCOMPLETE         = 359 // %7B int aio_waitcomplete( struct aiocb **aiocbp, struct timespec *timeout); %7D%0A
+%09SYS_AIO_WAITCOMPLETE         = 359 // %7B ssize_t aio_waitcomplete( struct aiocb **aiocbp, struct timespec *timeout); %7D%0A
 %09SYS
@@ -22414,111 +22414,110 @@
 ; %7D%0A
-%09SYS_GETFSSTAT                = 395 // %7B int getfsstat(struct statfs *buf, long bufsize, int flags); %7D%0A
+%09SYS_GETFSSTAT                = 395 // %7B int getfsstat(struct statfs *buf, long bufsize, int mode); %7D%0A
 %09SYS
@@ -25820,166 +25820,8 @@
 ; %7D%0A
-%09SYS__UMTX_LOCK               = 434 // %7B int _umtx_lock(struct umtx *umtx); %7D%0A%09SYS__UMTX_UNLOCK             = 435 // %7B int _umtx_unlock(struct umtx *umtx); %7D%0A
 %09SYS
@@ -36686,10 +36686,344 @@
 lag); %7D%0A
+%09SYS_NUMA_GETAFFINITY         = 548 // %7B int numa_getaffinity(cpuwhich_t which, id_t id, struct vm_domain_policy_entry *policy); %7D%0A%09SYS_NUMA_SETAFFINITY         = 549 // %7B int numa_setaffinity(cpuwhich_t which, id_t id, const struct vm_domain_policy_entry *policy); %7D%0A%09SYS_FDATASYNC                = 550 // %7B int fdatasync(int fd); %7D%0A
 )%0A
- f 5e992fda11c3c6eea8e2d7d8379b3a3a23e7701aaeae15dd459e2cd6d39cd3be vendor/golang.org/x/sys/unix/zsysnum_freebsd_arm.go
+ f db85858547cc8b87fe22b8351398487902bc83d532ed3fe1bc2fc193596809c0 vendor/golang.org/x/sys/unix/zsysnum_freebsd_arm.go
dmppatch 43
@@ -1,90 +1,90 @@
-// go run mksysnum.go https://svn.freebsd.org/base/stable/10/sys/kern/syscalls.master%0A
+// go run mksysnum.go https://svn.freebsd.org/base/stable/11/sys/kern/syscalls.master%0A
 // C
@@ -9778,261 +9778,8 @@
 ; %7D%0A
-%09SYS_FREEBSD6_PREAD           = 173 // %7B ssize_t freebsd6_pread(int fd, void *buf, size_t nbyte, int pad, off_t offset); %7D%0A%09SYS_FREEBSD6_PWRITE          = 174 // %7B ssize_t freebsd6_pwrite(int fd, const void *buf, size_t nbyte, int pad, off_t offset); %7D%0A
 %09SYS
@@ -10875,456 +10875,8 @@
 ; %7D%0A
-%09SYS_FREEBSD6_MMAP            = 197 // %7B caddr_t freebsd6_mmap(caddr_t addr, size_t len, int prot, int flags, int fd, int pad, off_t pos); %7D%0A%09SYS_FREEBSD6_LSEEK           = 199 // %7B off_t freebsd6_lseek(int fd, int pad, off_t offset, int whence); %7D%0A%09SYS_FREEBSD6_TRUNCATE        = 200 // %7B int freebsd6_truncate(char *path, int pad, off_t length); %7D%0A%09SYS_FREEBSD6_FTRUNCATE       = 201 // %7B int freebsd6_ftruncate(int fd, int pad, off_t length); %7D%0A
 %09SYS
@@ -13509,24 +13509,171 @@
 e *cest); %7D%0A
+%09SYS_CLOCK_NANOSLEEP          = 244 // %7B int clock_nanosleep(clockid_t clock_id, int flags, const struct timespec *rqtp, struct timespec *rmtp); %7D%0A
 %09SYS_CLOCK_G
@@ -16511,89 +16511,93 @@
 ; %7D%0A
-%09SYS_AIO_RETURN               = 314 // %7B int aio_return(struct aiocb *aiocbp); %7D%0A
+%09SYS_AIO_RETURN               = 314 // %7B ssize_t aio_return(struct aiocb *aiocbp); %7D%0A
 %09SYS
@@ -16899,307 +16899,8 @@
 ; %7D%0A
-%09SYS_OAIO_READ                = 318 // %7B int oaio_read(struct oaiocb *aiocbp); %7D%0A%09SYS_OAIO_WRITE               = 319 // %7B int oaio_write(struct oaiocb *aiocbp); %7D%0A%09SYS_OLIO_LISTIO              = 320 // %7B int olio_listio(int mode, struct oaiocb * const *acb_list, int nent, struct osigevent *sig); %7D%0A
 %09SYS
@@ -20135,123 +20135,127 @@
 ; %7D%0A
-%09SYS_AIO_WAITCOMPLETE         = 359 // %7B int aio_waitcomplete( struct aiocb **aiocbp, struct timespec *timeout); %7D%0A
+%09SYS_AIO_WAITCOMPLETE         = 359 // %7B ssize_t aio_waitcomplete( struct aiocb **aiocbp, struct timespec *timeout); %7D%0A
 %09SYS
@@ -22412,111 +22412,110 @@
 ; %7D%0A
-%09SYS_GETFSSTAT                = 395 // %7B int getfsstat(struct statfs *buf, long bufsize, int flags); %7D%0A
+%09SYS_GETFSSTAT                = 395 // %7B int getfsstat(struct statfs *buf, long bufsize, int mode); %7D%0A
 %09SYS
@@ -25818,166 +25818,8 @@
 ; %7D%0A
-%09SYS__UMTX_LOCK               = 434 // %7B int _umtx_lock(struct umtx *umtx); %7D%0A%09SYS__UMTX_UNLOCK             = 435 // %7B int _umtx_unlock(struct umtx *umtx); %7D%0A
 %09SYS
@@ -36684,10 +36684,344 @@
 lag); %7D%0A
+%09SYS_NUMA_GETAFFINITY         = 548 // %7B int numa_getaffinity(cpuwhich_t which, id_t id, struct vm_domain_policy_entry *policy); %7D%0A%09SYS_NUMA_SETAFFINITY         = 549 // %7B int numa_setaffinity(cpuwhich_t which, id_t id, const struct vm_domain_policy_entry *policy); %7D%0A%09SYS_FDATASYNC                = 550 // %7B int fdatasync(int fd); %7D%0A
 )%0A
- f 8cd430fb58fd7d57c7e3e5600eb07f391614f6be30a72aec767eae9e4727ead8 vendor/golang.org/x/sys/unix/zsysnum_freebsd_arm64.go
+ f 3f2ad505826c380f3f55570670c8e397f8fc5ea4102e40b617ce74c43fbdf153 vendor/golang.org/x/sys/unix/zsysnum_freebsd_arm64.go
dmppatch 358
@@ -1,90 +1,90 @@
-// go run mksysnum.go https://svn.freebsd.org/base/stable/10/sys/kern/syscalls.master%0A
+// go run mksysnum.go https://svn.freebsd.org/base/stable/11/sys/kern/syscalls.master%0A
 // C
@@ -266,83 +266,100 @@
 int%0A
-%09SYS_EXIT                     = 1   // %7B void sys_exit(int rval); %7D exit %5C%0A
+%09SYS_EXIT                     = 1   // %7B void sys_exit(int rval); %7D exit sys_exit_args void%0A
 %09SYS
@@ -417,165 +417,195 @@
 ; %7D%0A
-%09SYS_READ                     = 3   // %7B ssize_t read(int fd, void *buf, %5C%0A%09SYS_WRITE                    = 4   // %7B ssize_t write(int fd, const void *buf, %5C%0A
+%09SYS_READ                     = 3   // %7B ssize_t read(int fd, void *buf, size_t nbyte); %7D%0A%09SYS_WRITE                    = 4   // %7B ssize_t write(int fd, const void *buf, size_t nbyte); %7D%0A
 %09SYS
@@ -752,83 +752,120 @@
 ; %7D%0A
-%09SYS_WAIT4                    = 7   // %7B int wait4(int pid, int *status, %5C%0A
+%09SYS_WAIT4                    = 7   // %7B int wait4(int pid, int *status, int options, struct rusage *rusage); %7D%0A
 %09SYS
@@ -1382,84 +1382,98 @@
 ; %7D%0A
-%09SYS_OBREAK                   = 17  // %7B int obreak(char *nsize); %7D break %5C%0A
+%09SYS_OBREAK                   = 17  // %7B int obreak(char *nsize); %7D break obreak_args int%0A
 %09SYS
@@ -1535,85 +1535,111 @@
 ; %7D%0A
-%09SYS_MOUNT                    = 21  // %7B int mount(char *type, char *path, %5C%0A
+%09SYS_MOUNT                    = 21  // %7B int mount(char *type, char *path, int flags, caddr_t data); %7D%0A
 %09SYS
@@ -1910,521 +1910,870 @@
 ; %7D%0A
-%09SYS_PTRACE                   = 26  // %7B int ptrace(int req, pid_t pid, %5C%0A%09SYS_RECVMSG                  = 27  // %7B int recvmsg(int s, struct msghdr *msg, %5C%0A%09SYS_SENDMSG                  = 28  // %7B int sendmsg(int s, struct msghdr *msg, %5C%0A%09SYS_RECVFROM                 = 29  // %7B int recvfrom(int s, caddr_t buf, %5C%0A%09SYS_ACCEPT                   = 30  // %7B int accept(int s, %5C%0A%09SYS_GETPEERNAME              = 31  // %7B int getpeername(int fdes, %5C%0A%09SYS_GETSOCKNAME              = 32  // %7B int getsockname(int fdes, %5C%0A
+%09SYS_PTRACE                   = 26  // %7B int ptrace(int req, pid_t pid, caddr_t addr, int data); %7D%0A%09SYS_RECVMSG                  = 27  // %7B int recvmsg(int s, struct msghdr *msg, int flags); %7D%0A%09SYS_SENDMSG                  = 28  // %7B int sendmsg(int s, struct msghdr *msg, int flags); %7D%0A%09SYS_RECVFROM                 = 29  // %7B int recvfrom(int s, caddr_t buf, size_t len, int flags, struct sockaddr * __restrict from, __socklen_t * __restrict fromlenaddr); %7D%0A%09SYS_ACCEPT                   = 30  // %7B int accept(int s, struct sockaddr * __restrict name, __socklen_t * __restrict anamelen); %7D%0A%09SYS_GETPEERNAME              = 31  // %7B int getpeername(int fdes, struct sockaddr * __restrict asa, __socklen_t * __restrict alen); %7D%0A%09SYS_GETSOCKNAME              = 32  // %7B int getsockname(int fdes, struct sockaddr * __restrict asa, __socklen_t * __restrict alen); %7D%0A
 %09SYS
@@ -3268,24 +3268,83 @@
 _int fd); %7D%0A
+%09SYS_PIPE                     = 42  // %7B int pipe(void); %7D%0A
 %09SYS_GETEGID
@@ -3399,174 +3399,223 @@
 ; %7D%0A
-%09SYS_PROFIL                   = 44  // %7B int profil(caddr_t samples, size_t size, %5C%0A%09SYS_KTRACE                   = 45  // %7B int ktrace(const char *fname, int ops, %5C%0A
+%09SYS_PROFIL                   = 44  // %7B int profil(caddr_t samples, size_t size, size_t offset, u_int scale); %7D%0A%09SYS_KTRACE                   = 45  // %7B int ktrace(const char *fname, int ops, int facs, int pid); %7D%0A
 %09SYS
@@ -3677,85 +3677,95 @@
 ; %7D%0A
-%09SYS_GETLOGIN                 = 49  // %7B int getlogin(char *namebuf, u_int %5C%0A
+%09SYS_GETLOGIN                 = 49  // %7B int getlogin(char *namebuf, u_int namelen); %7D%0A
 %09SYS
@@ -3901,153 +3901,183 @@
 ; %7D%0A
-%09SYS_SIGALTSTACK              = 53  // %7B int sigaltstack(stack_t *ss, %5C%0A%09SYS_IOCTL                    = 54  // %7B int ioctl(int fd, u_long com, %5C%0A
+%09SYS_SIGALTSTACK              = 53  // %7B int sigaltstack(stack_t *ss, stack_t *oss); %7D%0A%09SYS_IOCTL                    = 54  // %7B int ioctl(int fd, u_long com, caddr_t data); %7D%0A
 %09SYS
@@ -4287,257 +4287,288 @@
 ; %7D%0A
-%09SYS_READLINK                 = 58  // %7B ssize_t readlink(char *path, char *buf, %5C%0A%09SYS_EXECVE                   = 59  // %7B int execve(char *fname, char **argv, %5C%0A%09SYS_UMASK                    = 60  // %7B int umask(int newmask); %7D umask umask_args %5C%0A
+%09SYS_READLINK                 = 58  // %7B ssize_t readlink(char *path, char *buf, size_t count); %7D%0A%09SYS_EXECVE                   = 59  // %7B int execve(char *fname, char **argv, char **envv); %7D%0A%09SYS_UMASK                    = 60  // %7B int umask(int newmask); %7D umask umask_args int%0A
 %09SYS
@@ -4634,85 +4634,97 @@
 ; %7D%0A
-%09SYS_MSYNC                    = 65  // %7B int msync(void *addr, size_t len, %5C%0A
+%09SYS_MSYNC                    = 65  // %7B int msync(void *addr, size_t len, int flags); %7D%0A
 %09SYS
@@ -4909,85 +4909,101 @@
 ; %7D%0A
-%09SYS_OVADVISE                 = 72  // %7B int ovadvise(int anom); %7D vadvise %5C%0A
+%09SYS_OVADVISE                 = 72  // %7B int ovadvise(int anom); %7D vadvise ovadvise_args int%0A
 %09SYS
@@ -5081,408 +5081,475 @@
 ; %7D%0A
-%09SYS_MPROTECT                 = 74  // %7B int mprotect(const void *addr, size_t len, %5C%0A%09SYS_MADVISE                  = 75  // %7B int madvise(void *addr, size_t len, %5C%0A%09SYS_MINCORE                  = 78  // %7B int mincore(const void *addr, size_t len, %5C%0A%09SYS_GETGROUPS                = 79  // %7B int getgroups(u_int gidsetsize, %5C%0A%09SYS_SETGROUPS                = 80  // %7B int setgroups(u_int gidsetsize, %5C%0A
+%09SYS_MPROTECT                 = 74  // %7B int mprotect(const void *addr, size_t len, int prot); %7D%0A%09SYS_MADVISE                  = 75  // %7B int madvise(void *addr, size_t len, int behav); %7D%0A%09SYS_MINCORE                  = 78  // %7B int mincore(const void *addr, size_t len, char *vec); %7D%0A%09SYS_GETGROUPS                = 79  // %7B int getgroups(u_int gidsetsize, gid_t *gidset); %7D%0A%09SYS_SETGROUPS                = 80  // %7B int setgroups(u_int gidsetsize, gid_t *gidset); %7D%0A
 %09SYS
@@ -5685,85 +5685,126 @@
 ; %7D%0A
-%09SYS_SETITIMER                = 83  // %7B int setitimer(u_int which, struct %5C%0A
+%09SYS_SETITIMER                = 83  // %7B int setitimer(u_int which, struct itimerval *itv, struct itimerval *oitv); %7D%0A
 %09SYS
@@ -5870,78 +5870,102 @@
 ; %7D%0A
-%09SYS_GETITIMER                = 86  // %7B int getitimer(u_int which, %5C%0A
+%09SYS_GETITIMER                = 86  // %7B int getitimer(u_int which, struct itimerval *itv); %7D%0A
 %09SYS
@@ -6188,94 +6188,127 @@
 ; %7D%0A
-%09SYS_SELECT                   = 93  // %7B int select(int nd, fd_set *in, fd_set *ou, %5C%0A
+%09SYS_SELECT                   = 93  // %7B int select(int nd, fd_set *in, fd_set *ou, fd_set *ex, struct timeval *tv); %7D%0A
 %09SYS
@@ -6369,239 +6369,279 @@
 ; %7D%0A
-%09SYS_SETPRIORITY              = 96  // %7B int setpriority(int which, int who, %5C%0A%09SYS_SOCKET                   = 97  // %7B int socket(int domain, int type, %5C%0A%09SYS_CONNECT                  = 98  // %7B int connect(int s, caddr_t name, %5C%0A
+%09SYS_SETPRIORITY              = 96  // %7B int setpriority(int which, int who, int prio); %7D%0A%09SYS_SOCKET                   = 97  // %7B int socket(int domain, int type, int protocol); %7D%0A%09SYS_CONNECT                  = 98  // %7B int connect(int s, caddr_t name, int namelen); %7D%0A
 %09SYS
@@ -6720,167 +6720,208 @@
 ; %7D%0A
-%09SYS_BIND                     = 104 // %7B int bind(int s, caddr_t name, %5C%0A%09SYS_SETSOCKOPT               = 105 // %7B int setsockopt(int s, int level, int name, %5C%0A
+%09SYS_BIND                     = 104 // %7B int bind(int s, caddr_t name, int namelen); %7D%0A%09SYS_SETSOCKOPT               = 105 // %7B int setsockopt(int s, int level, int name, caddr_t val, int valsize); %7D%0A
 %09SYS
@@ -6995,483 +6995,612 @@
 ; %7D%0A
-%09SYS_GETTIMEOFDAY             = 116 // %7B int gettimeofday(struct timeval *tp, %5C%0A%09SYS_GETRUSAGE                = 117 // %7B int getrusage(int who, %5C%0A%09SYS_GETSOCKOPT               = 118 // %7B int getsockopt(int s, int level, int name, %5C%0A%09SYS_READV                    = 120 // %7B int readv(int fd, struct iovec *iovp, %5C%0A%09SYS_WRITEV                   = 121 // %7B int writev(int fd, struct iovec *iovp, %5C%0A%09SYS_SETTIMEOFDAY             = 122 // %7B int settimeofday(struct timeval *tv, %5C%0A
+%09SYS_GETTIMEOFDAY             = 116 // %7B int gettimeofday(struct timeval *tp, struct timezone *tzp); %7D%0A%09SYS_GETRUSAGE                = 117 // %7B int getrusage(int who, struct rusage *rusage); %7D%0A%09SYS_GETSOCKOPT               = 118 // %7B int getsockopt(int s, int level, int name, caddr_t val, int *avalsize); %7D%0A%09SYS_READV                    = 120 // %7B int readv(int fd, struct iovec *iovp, u_int iovcnt); %7D%0A%09SYS_WRITEV                   = 121 // %7B int writev(int fd, struct iovec *iovp, u_int iovcnt); %7D%0A%09SYS_SETTIMEOFDAY             = 122 // %7B int settimeofday(struct timeval *tv, struct timezone *tzp); %7D%0A
 %09SYS
@@ -8132,94 +8132,129 @@
 ; %7D%0A
-%09SYS_SENDTO                   = 133 // %7B int sendto(int s, caddr_t buf, size_t len, %5C%0A
+%09SYS_SENDTO                   = 133 // %7B int sendto(int s, caddr_t buf, size_t len, int flags, caddr_t to, int tolen); %7D%0A
 %09SYS
@@ -8326,88 +8326,113 @@
 ; %7D%0A
-%09SYS_SOCKETPAIR               = 135 // %7B int socketpair(int domain, int type, %5C%0A
+%09SYS_SOCKETPAIR               = 135 // %7B int socketpair(int domain, int type, int protocol, int *rsv); %7D%0A
 %09SYS
@@ -8573,152 +8573,202 @@
 ; %7D%0A
-%09SYS_UTIMES                   = 138 // %7B int utimes(char *path, %5C%0A%09SYS_ADJTIME                  = 140 // %7B int adjtime(struct timeval *delta, %5C%0A
+%09SYS_UTIMES                   = 138 // %7B int utimes(char *path, struct timeval *tptr); %7D%0A%09SYS_ADJTIME                  = 140 // %7B int adjtime(struct timeval *delta, struct timeval *olddelta); %7D%0A
 %09SYS
@@ -8828,94 +8828,108 @@
 ; %7D%0A
-%09SYS_QUOTACTL                 = 148 // %7B int quotactl(char *path, int cmd, int uid, %5C%0A
+%09SYS_QUOTACTL                 = 148 // %7B int quotactl(char *path, int cmd, int uid, caddr_t arg); %7D%0A
 %09SYS
@@ -9132,141 +9132,185 @@
 ; %7D%0A
-%09SYS_LGETFH                   = 160 // %7B int lgetfh(char *fname, %5C%0A%09SYS_GETFH                    = 161 // %7B int getfh(char *fname, %5C%0A
+%09SYS_LGETFH                   = 160 // %7B int lgetfh(char *fname, struct fhandle *fhp); %7D%0A%09SYS_GETFH                    = 161 // %7B int getfh(char *fname, struct fhandle *fhp); %7D%0A
 %09SYS
@@ -9386,330 +9386,402 @@
 ; %7D%0A
-%09SYS_RTPRIO                   = 166 // %7B int rtprio(int function, pid_t pid, %5C%0A%09SYS_SEMSYS                   = 169 // %7B int semsys(int which, int a2, int a3, %5C%0A%09SYS_MSGSYS                   = 170 // %7B int msgsys(int which, int a2, int a3, %5C%0A%09SYS_SHMSYS                   = 171 // %7B int shmsys(int which, int a2, int a3, %5C%0A
+%09SYS_RTPRIO                   = 166 // %7B int rtprio(int function, pid_t pid, struct rtprio *rtp); %7D%0A%09SYS_SEMSYS                   = 169 // %7B int semsys(int which, int a2, int a3, int a4, int a5); %7D%0A%09SYS_MSGSYS                   = 170 // %7B int msgsys(int which, int a2, int a3, int a4, int a5, int a6); %7D%0A%09SYS_SHMSYS                   = 171 // %7B int shmsys(int which, int a2, int a3, int a4); %7D%0A
 %09SYS
@@ -10526,310 +10526,521 @@
 ; %7D%0A
-%09SYS_GETRLIMIT                = 194 // %7B int getrlimit(u_int which, %5C%0A%09SYS_SETRLIMIT                = 195 // %7B int setrlimit(u_int which, %5C%0A%09SYS_GETDIRENTRIES            = 196 // %7B int getdirentries(int fd, char *buf, %5C%0A%09SYS___SYSCTL                 = 202 // %7B int __sysctl(int *name, u_int namelen, %5C%0A
+%09SYS_GETRLIMIT                = 194 // %7B int getrlimit(u_int which, struct rlimit *rlp); %7D getrlimit __getrlimit_args int%0A%09SYS_SETRLIMIT                = 195 // %7B int setrlimit(u_int which, struct rlimit *rlp); %7D setrlimit __setrlimit_args int%0A%09SYS_GETDIRENTRIES            = 196 // %7B int getdirentries(int fd, char *buf, u_int count, long *basep); %7D%0A%09SYS___SYSCTL                 = 202 // %7B int __sysctl(int *name, u_int namelen, void *old, size_t *oldlenp, void *new, size_t newlen); %7D __sysctl sysctl_args int%0A
 %09SYS
@@ -11431,253 +11431,295 @@
 ; %7D%0A
-%09SYS_POLL                     = 209 // %7B int poll(struct pollfd *fds, u_int nfds, %5C%0A%09SYS_SEMGET                   = 221 // %7B int semget(key_t key, int nsems, %5C%0A%09SYS_SEMOP                    = 222 // %7B int semop(int semid, struct sembuf *sops, %5C%0A
+%09SYS_POLL                     = 209 // %7B int poll(struct pollfd *fds, u_int nfds, int timeout); %7D%0A%09SYS_SEMGET                   = 221 // %7B int semget(key_t key, int nsems, int semflg); %7D%0A%09SYS_SEMOP                    = 222 // %7B int semop(int semid, struct sembuf *sops, size_t nsops); %7D%0A
 %09SYS
@@ -11796,253 +11796,333 @@
 ; %7D%0A
-%09SYS_MSGSND                   = 226 // %7B int msgsnd(int msqid, const void *msgp, %5C%0A%09SYS_MSGRCV                   = 227 // %7B int msgrcv(int msqid, void *msgp, %5C%0A%09SYS_SHMAT                    = 228 // %7B int shmat(int shmid, const void *shmaddr, %5C%0A
+%09SYS_MSGSND                   = 226 // %7B int msgsnd(int msqid, const void *msgp, size_t msgsz, int msgflg); %7D%0A%09SYS_MSGRCV                   = 227 // %7B int msgrcv(int msqid, void *msgp, size_t msgsz, long msgtyp, int msgflg); %7D%0A%09SYS_SHMAT                    = 228 // %7B int shmat(int shmid, const void *shmaddr, int shmflg); %7D%0A
 %09SYS
@@ -12196,390 +12196,532 @@
 ; %7D%0A
-%09SYS_SHMGET                   = 231 // %7B int shmget(key_t key, size_t size, %5C%0A%09SYS_CLOCK_GETTIME            = 232 // %7B int clock_gettime(clockid_t clock_id, %5C%0A%09SYS_CLOCK_SETTIME            = 233 // %7B int clock_settime( %5C%0A%09SYS_CLOCK_GETRES             = 234 // %7B int clock_getres(clockid_t clock_id, %5C%0A%09SYS_KTIMER_CREATE            = 235 // %7B int ktimer_create(clockid_t clock_id, %5C%0A
+%09SYS_SHMGET                   = 231 // %7B int shmget(key_t key, size_t size, int shmflg); %7D%0A%09SYS_CLOCK_GETTIME            = 232 // %7B int clock_gettime(clockid_t clock_id, struct timespec *tp); %7D%0A%09SYS_CLOCK_SETTIME            = 233 // %7B int clock_settime( clockid_t clock_id, const struct timespec *tp); %7D%0A%09SYS_CLOCK_GETRES             = 234 // %7B int clock_getres(clockid_t clock_id, struct timespec *tp); %7D%0A%09SYS_KTIMER_CREATE            = 235 // %7B int ktimer_create(clockid_t clock_id, struct sigevent *evp, int *timerid); %7D%0A
 %09SYS
@@ -12795,176 +12795,256 @@
 ; %7D%0A
-%09SYS_KTIMER_SETTIME           = 237 // %7B int ktimer_settime(int timerid, int flags, %5C%0A%09SYS_KTIMER_GETTIME           = 238 // %7B int ktimer_gettime(int timerid, struct %5C%0A
+%09SYS_KTIMER_SETTIME           = 237 // %7B int ktimer_settime(int timerid, int flags, const struct itimerspec *value, struct itimerspec *ovalue); %7D%0A%09SYS_KTIMER_GETTIME           = 238 // %7B int ktimer_gettime(int timerid, struct itimerspec *value); %7D%0A
 %09SYS
@@ -13122,94 +13122,118 @@
 ; %7D%0A
-%09SYS_NANOSLEEP                = 240 // %7B int nanosleep(const struct timespec *rqtp, %5C%0A
+%09SYS_NANOSLEEP                = 240 // %7B int nanosleep(const struct timespec *rqtp, struct timespec *rmtp); %7D%0A
 %09SYS
@@ -13319,303 +13319,464 @@
 ; %7D%0A
-%09SYS_FFCLOCK_SETESTIMATE      = 242 // %7B int ffclock_setestimate( %5C%0A%09SYS_FFCLOCK_GETESTIMATE      = 243 // %7B int ffclock_getestimate( %5C%0A%09SYS_CLOCK_NANOSLEEP          = 244 // %7B int clock_nanosleep(clockid_t clock_id, %5C%0A%09SYS_CLOCK_GETCPUCLOCKID2     = 247 // %7B int clock_getcpuclockid2(id_t id,%5C%0A
+%09SYS_FFCLOCK_SETESTIMATE      = 242 // %7B int ffclock_setestimate( struct ffclock_estimate *cest); %7D%0A%09SYS_FFCLOCK_GETESTIMATE      = 243 // %7B int ffclock_getestimate( struct ffclock_estimate *cest); %7D%0A%09SYS_CLOCK_NANOSLEEP          = 244 // %7B int clock_nanosleep(clockid_t clock_id, int flags, const struct timespec *rqtp, struct timespec *rmtp); %7D%0A%09SYS_CLOCK_GETCPUCLOCKID2     = 247 // %7B int clock_getcpuclockid2(id_t id,int which, clockid_t *clock_id); %7D%0A
 %09SYS
@@ -13860,88 +13860,102 @@
 ; %7D%0A
-%09SYS_MINHERIT                 = 250 // %7B int minherit(void *addr, size_t len, %5C%0A
+%09SYS_MINHERIT                 = 250 // %7B int minherit(void *addr, size_t len, int inherit); %7D%0A
 %09SYS
@@ -14019,88 +14019,114 @@
 ; %7D%0A
-%09SYS_OPENBSD_POLL             = 252 // %7B int openbsd_poll(struct pollfd *fds, %5C%0A
+%09SYS_OPENBSD_POLL             = 252 // %7B int openbsd_poll(struct pollfd *fds, u_int nfds, int timeout); %7D%0A
 %09SYS
@@ -14433,151 +14433,231 @@
 ; %7D%0A
-%09SYS_LIO_LISTIO               = 257 // %7B int lio_listio(int mode, %5C%0A%09SYS_GETDENTS                 = 272 // %7B int getdents(int fd, char *buf, %5C%0A
+%09SYS_LIO_LISTIO               = 257 // %7B int lio_listio(int mode, struct aiocb * const *acb_list, int nent, struct sigevent *sig); %7D%0A%09SYS_GETDENTS                 = 272 // %7B int getdents(int fd, char *buf, size_t count); %7D%0A
 %09SYS
@@ -14736,75 +14736,98 @@
 ; %7D%0A
-%09SYS_LUTIMES                  = 276 // %7B int lutimes(char *path, %5C%0A
+%09SYS_LUTIMES                  = 276 // %7B int lutimes(char *path, struct timeval *tptr); %7D%0A
 %09SYS
@@ -15076,347 +15076,435 @@
 ; %7D%0A
-%09SYS_PREADV                   = 289 // %7B ssize_t preadv(int fd, struct iovec *iovp, %5C%0A%09SYS_PWRITEV                  = 290 // %7B ssize_t pwritev(int fd, struct iovec *iovp, %5C%0A%09SYS_FHOPEN                   = 298 // %7B int fhopen(const struct fhandle *u_fhp, %5C%0A%09SYS_FHSTAT                   = 299 // %7B int fhstat(const struct fhandle *u_fhp, %5C%0A
+%09SYS_PREADV                   = 289 // %7B ssize_t preadv(int fd, struct iovec *iovp, u_int iovcnt, off_t offset); %7D%0A%09SYS_PWRITEV                  = 290 // %7B ssize_t pwritev(int fd, struct iovec *iovp, u_int iovcnt, off_t offset); %7D%0A%09SYS_FHOPEN                   = 298 // %7B int fhopen(const struct fhandle *u_fhp, int flags); %7D%0A%09SYS_FHSTAT                   = 299 // %7B int fhstat(const struct fhandle *u_fhp, struct stat *sb); %7D%0A
 %09SYS
@@ -15570,74 +15570,101 @@
 ; %7D%0A
-%09SYS_MODSTAT                  = 301 // %7B int modstat(int modid, %5C%0A
+%09SYS_MODSTAT                  = 301 // %7B int modstat(int modid, struct module_stat *stat); %7D%0A
 %09SYS
@@ -16091,82 +16091,104 @@
 ; %7D%0A
-%09SYS_KLDSTAT                  = 308 // %7B int kldstat(int fileid, struct %5C%0A
+%09SYS_KLDSTAT                  = 308 // %7B int kldstat(int fileid, struct kld_file_stat* stat); %7D%0A
 %09SYS
@@ -16325,170 +16325,196 @@
 ; %7D%0A
-%09SYS_SETRESUID                = 311 // %7B int setresuid(uid_t ruid, uid_t euid, %5C%0A%09SYS_SETRESGID                = 312 // %7B int setresgid(gid_t rgid, gid_t egid, %5C%0A
+%09SYS_SETRESUID                = 311 // %7B int setresuid(uid_t ruid, uid_t euid, uid_t suid); %7D%0A%09SYS_SETRESGID                = 312 // %7B int setresgid(gid_t rgid, gid_t egid, gid_t sgid); %7D%0A
 %09SYS
@@ -16598,134 +16598,231 @@
 ; %7D%0A
-%09SYS_AIO_SUSPEND              = 315 // %7B int aio_suspend( %5C%0A%09SYS_AIO_CANCEL               = 316 // %7B int aio_cancel(int fd, %5C%0A
+%09SYS_AIO_SUSPEND              = 315 // %7B int aio_suspend( struct aiocb * const * aiocbp, int nent, const struct timespec *timeout); %7D%0A%09SYS_AIO_CANCEL               = 316 // %7B int aio_cancel(int fd, struct aiocb *aiocbp); %7D%0A
 %09SYS
@@ -17174,245 +17174,342 @@
 ; %7D%0A
-%09SYS_SCHED_SETPARAM           = 327 // %7B int sched_setparam (pid_t pid, %5C%0A%09SYS_SCHED_GETPARAM           = 328 // %7B int sched_getparam (pid_t pid, struct %5C%0A%09SYS_SCHED_SETSCHEDULER       = 329 // %7B int sched_setscheduler (pid_t pid, int %5C%0A
+%09SYS_SCHED_SETPARAM           = 327 // %7B int sched_setparam (pid_t pid, const struct sched_param *param); %7D%0A%09SYS_SCHED_GETPARAM           = 328 // %7B int sched_getparam (pid_t pid, struct sched_param *param); %7D%0A%09SYS_SCHED_SETSCHEDULER       = 329 // %7B int sched_setscheduler (pid_t pid, int policy, const struct sched_param *param); %7D%0A
 %09SYS
@@ -17822,89 +17822,117 @@
 ; %7D%0A
-%09SYS_SCHED_RR_GET_INTERVAL    = 334 // %7B int sched_rr_get_interval (pid_t pid, %5C%0A
+%09SYS_SCHED_RR_GET_INTERVAL    = 334 // %7B int sched_rr_get_interval (pid_t pid, struct timespec *interval); %7D%0A
 %09SYS
@@ -18016,83 +18016,96 @@
 ; %7D%0A
-%09SYS_KLDSYM                   = 337 // %7B int kldsym(int fileid, int cmd, %5C%0A
+%09SYS_KLDSYM                   = 337 // %7B int kldsym(int fileid, int cmd, void *data); %7D%0A
 %09SYS
@@ -18176,76 +18176,114 @@
 ; %7D%0A
-%09SYS_SIGPROCMASK              = 340 // %7B int sigprocmask(int how, %5C%0A
+%09SYS_SIGPROCMASK              = 340 // %7B int sigprocmask(int how, const sigset_t *set, sigset_t *oset); %7D%0A
 %09SYS
@@ -18440,1340 +18440,2018 @@
 ; %7D%0A
-%09SYS_SIGTIMEDWAIT             = 345 // %7B int sigtimedwait(const sigset_t *set, %5C%0A%09SYS_SIGWAITINFO              = 346 // %7B int sigwaitinfo(const sigset_t *set, %5C%0A%09SYS___ACL_GET_FILE           = 347 // %7B int __acl_get_file(const char *path, %5C%0A%09SYS___ACL_SET_FILE           = 348 // %7B int __acl_set_file(const char *path, %5C%0A%09SYS___ACL_GET_FD             = 349 // %7B int __acl_get_fd(int filedes, %5C%0A%09SYS___ACL_SET_FD             = 350 // %7B int __acl_set_fd(int filedes, %5C%0A%09SYS___ACL_DELETE_FILE        = 351 // %7B int __acl_delete_file(const char *path, %5C%0A%09SYS___ACL_DELETE_FD          = 352 // %7B int __acl_delete_fd(int filedes, %5C%0A%09SYS___ACL_ACLCHECK_FILE      = 353 // %7B int __acl_aclcheck_file(const char *path, %5C%0A%09SYS___ACL_ACLCHECK_FD        = 354 // %7B int __acl_aclcheck_fd(int filedes, %5C%0A%09SYS_EXTATTRCTL               = 355 // %7B int extattrctl(const char *path, int cmd, %5C%0A%09SYS_EXTATTR_SET_FILE         = 356 // %7B ssize_t extattr_set_file( %5C%0A%09SYS_EXTATTR_GET_FILE         = 357 // %7B ssize_t extattr_get_file( %5C%0A%09SYS_EXTATTR_DELETE_FILE      = 358 // %7B int extattr_delete_file(const char *path, %5C%0A%09SYS_AIO_WAITCOMPLETE         = 359 // %7B ssize_t aio_waitcomplete( %5C%0A%09SYS_GETRESUID                = 360 // %7B int getresuid(uid_t *ruid, uid_t *euid, %5C%0A%09SYS_GETRESGID                = 361 // %7B int getresgid(gid_t *rgid, gid_t *egid, %5C%0A
+%09SYS_SIGTIMEDWAIT             = 345 // %7B int sigtimedwait(const sigset_t *set, siginfo_t *info, const struct timespec *timeout); %7D%0A%09SYS_SIGWAITINFO              = 346 // %7B int sigwaitinfo(const sigset_t *set, siginfo_t *info); %7D%0A%09SYS___ACL_GET_FILE           = 347 // %7B int __acl_get_file(const char *path, acl_type_t type, struct acl *aclp); %7D%0A%09SYS___ACL_SET_FILE           = 348 // %7B int __acl_set_file(const char *path, acl_type_t type, struct acl *aclp); %7D%0A%09SYS___ACL_GET_FD             = 349 // %7B int __acl_get_fd(int filedes, acl_type_t type, struct acl *aclp); %7D%0A%09SYS___ACL_SET_FD             = 350 // %7B int __acl_set_fd(int filedes, acl_type_t type, struct acl *aclp); %7D%0A%09SYS___ACL_DELETE_FILE        = 351 // %7B int __acl_delete_file(const char *path, acl_type_t type); %7D%0A%09SYS___ACL_DELETE_FD          = 352 // %7B int __acl_delete_fd(int filedes, acl_type_t type); %7D%0A%09SYS___ACL_ACLCHECK_FILE      = 353 // %7B int __acl_aclcheck_file(const char *path, acl_type_t type, struct acl *aclp); %7D%0A%09SYS___ACL_ACLCHECK_FD        = 354 // %7B int __acl_aclcheck_fd(int filedes, acl_type_t type, struct acl *aclp); %7D%0A%09SYS_EXTATTRCTL               = 355 // %7B int extattrctl(const char *path, int cmd, const char *filename, int attrnamespace, const char *attrname); %7D%0A%09SYS_EXTATTR_SET_FILE         = 356 // %7B ssize_t extattr_set_file( const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes); %7D%0A%09SYS_EXTATTR_GET_FILE         = 357 // %7B ssize_t extattr_get_file( const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes); %7D%0A%09SYS_EXTATTR_DELETE_FILE      = 358 // %7B int extattr_delete_file(const char *path, int attrnamespace, const char *attrname); %7D%0A%09SYS_AIO_WAITCOMPLETE         = 359 // %7B ssize_t aio_waitcomplete( struct aiocb **aiocbp, struct timespec *timeout); %7D%0A%09SYS_GETRESUID                = 360 // %7B int getresuid(uid_t *ruid, uid_t *euid, uid_t *suid); %7D%0A%09SYS_GETRESGID                = 361 // %7B int getresgid(gid_t *rgid, gid_t *egid, gid_t *sgid); %7D%0A
 %09SYS
@@ -20511,291 +20511,584 @@
 ; %7D%0A
-%09SYS_KEVENT                   = 363 // %7B int kevent(int fd, %5C%0A%09SYS_EXTATTR_SET_FD           = 371 // %7B ssize_t extattr_set_fd(int fd, %5C%0A%09SYS_EXTATTR_GET_FD           = 372 // %7B ssize_t extattr_get_fd(int fd, %5C%0A%09SYS_EXTATTR_DELETE_FD        = 373 // %7B int extattr_delete_fd(int fd, %5C%0A
+%09SYS_KEVENT                   = 363 // %7B int kevent(int fd, struct kevent *changelist, int nchanges, struct kevent *eventlist, int nevents, const struct timespec *timeout); %7D%0A%09SYS_EXTATTR_SET_FD           = 371 // %7B ssize_t extattr_set_fd(int fd, int attrnamespace, const char *attrname, void *data, size_t nbytes); %7D%0A%09SYS_EXTATTR_GET_FD           = 372 // %7B ssize_t extattr_get_fd(int fd, int attrnamespace, const char *attrname, void *data, size_t nbytes); %7D%0A%09SYS_EXTATTR_DELETE_FD        = 373 // %7B int extattr_delete_fd(int fd, int attrnamespace, const char *attrname); %7D%0A
 %09SYS
@@ -21234,82 +21234,115 @@
 ; %7D%0A
-%09SYS_NMOUNT                   = 378 // %7B int nmount(struct iovec *iovp, %5C%0A
+%09SYS_NMOUNT                   = 378 // %7B int nmount(struct iovec *iovp, unsigned int iovcnt, int flags); %7D%0A
 %09SYS
@@ -21505,844 +21505,1106 @@
 ; %7D%0A
-%09SYS___MAC_GET_FD             = 386 // %7B int __mac_get_fd(int fd, %5C%0A%09SYS___MAC_GET_FILE           = 387 // %7B int __mac_get_file(const char *path_p, %5C%0A%09SYS___MAC_SET_FD             = 388 // %7B int __mac_set_fd(int fd, %5C%0A%09SYS___MAC_SET_FILE           = 389 // %7B int __mac_set_file(const char *path_p, %5C%0A%09SYS_KENV                     = 390 // %7B int kenv(int what, const char *name, %5C%0A%09SYS_LCHFLAGS                 = 391 // %7B int lchflags(const char *path, %5C%0A%09SYS_UUIDGEN                  = 392 // %7B int uuidgen(struct uuid *store, %5C%0A%09SYS_SENDFILE                 = 393 // %7B int sendfile(int fd, int s, off_t offset, %5C%0A%09SYS_MAC_SYSCALL              = 394 // %7B int mac_syscall(const char *policy, %5C%0A%09SYS_GETFSSTAT                = 395 // %7B int getfsstat(struct statfs *buf, %5C%0A%09SYS_STATFS                   = 396 // %7B int statfs(char *path, %5C%0A
+%09SYS___MAC_GET_FD             = 386 // %7B int __mac_get_fd(int fd, struct mac *mac_p); %7D%0A%09SYS___MAC_GET_FILE           = 387 // %7B int __mac_get_file(const char *path_p, struct mac *mac_p); %7D%0A%09SYS___MAC_SET_FD             = 388 // %7B int __mac_set_fd(int fd, struct mac *mac_p); %7D%0A%09SYS___MAC_SET_FILE           = 389 // %7B int __mac_set_file(const char *path_p, struct mac *mac_p); %7D%0A%09SYS_KENV                     = 390 // %7B int kenv(int what, const char *name, char *value, int len); %7D%0A%09SYS_LCHFLAGS                 = 391 // %7B int lchflags(const char *path, u_long flags); %7D%0A%09SYS_UUIDGEN                  = 392 // %7B int uuidgen(struct uuid *store, int count); %7D%0A%09SYS_SENDFILE                 = 393 // %7B int sendfile(int fd, int s, off_t offset, size_t nbytes, struct sf_hdtr *hdtr, off_t *sbytes, int flags); %7D%0A%09SYS_MAC_SYSCALL              = 394 // %7B int mac_syscall(const char *policy, int call, void *arg); %7D%0A%09SYS_GETFSSTAT                = 395 // %7B int getfsstat(struct statfs *buf, long bufsize, int mode); %7D%0A%09SYS_STATFS                   = 396 // %7B int statfs(char *path, struct statfs *buf); %7D%0A
 %09SYS
@@ -22687,93 +22687,114 @@
 ; %7D%0A
-%09SYS_FHSTATFS                 = 398 // %7B int fhstatfs(const struct fhandle *u_fhp, %5C%0A
+%09SYS_FHSTATFS                 = 398 // %7B int fhstatfs(const struct fhandle *u_fhp, struct statfs *buf); %7D%0A
 %09SYS
@@ -23077,150 +23077,234 @@
 ; %7D%0A
-%09SYS_KSEM_INIT                = 404 // %7B int ksem_init(semid_t *idp, %5C%0A%09SYS_KSEM_OPEN                = 405 // %7B int ksem_open(semid_t *idp, %5C%0A
+%09SYS_KSEM_INIT                = 404 // %7B int ksem_init(semid_t *idp, unsigned int value); %7D%0A%09SYS_KSEM_OPEN                = 405 // %7B int ksem_open(semid_t *idp, const char *name, int oflag, mode_t mode, unsigned int value); %7D%0A
 %09SYS
@@ -23538,660 +23538,1077 @@
 ; %7D%0A
-%09SYS___MAC_GET_PID            = 409 // %7B int __mac_get_pid(pid_t pid, %5C%0A%09SYS___MAC_GET_LINK           = 410 // %7B int __mac_get_link(const char *path_p, %5C%0A%09SYS___MAC_SET_LINK           = 411 // %7B int __mac_set_link(const char *path_p, %5C%0A%09SYS_EXTATTR_SET_LINK         = 412 // %7B ssize_t extattr_set_link( %5C%0A%09SYS_EXTATTR_GET_LINK         = 413 // %7B ssize_t extattr_get_link( %5C%0A%09SYS_EXTATTR_DELETE_LINK      = 414 // %7B int extattr_delete_link( %5C%0A%09SYS___MAC_EXECVE             = 415 // %7B int __mac_execve(char *fname, char **argv, %5C%0A%09SYS_SIGACTION                = 416 // %7B int sigaction(int sig, %5C%0A%09SYS_SIGRETURN                = 417 // %7B int sigreturn( %5C%0A
+%09SYS___MAC_GET_PID            = 409 // %7B int __mac_get_pid(pid_t pid, struct mac *mac_p); %7D%0A%09SYS___MAC_GET_LINK           = 410 // %7B int __mac_get_link(const char *path_p, struct mac *mac_p); %7D%0A%09SYS___MAC_SET_LINK           = 411 // %7B int __mac_set_link(const char *path_p, struct mac *mac_p); %7D%0A%09SYS_EXTATTR_SET_LINK         = 412 // %7B ssize_t extattr_set_link( const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes); %7D%0A%09SYS_EXTATTR_GET_LINK         = 413 // %7B ssize_t extattr_get_link( const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes); %7D%0A%09SYS_EXTATTR_DELETE_LINK      = 414 // %7B int extattr_delete_link( const char *path, int attrnamespace, const char *attrname); %7D%0A%09SYS___MAC_EXECVE             = 415 // %7B int __mac_execve(char *fname, char **argv, char **envv, struct mac *mac_p); %7D%0A%09SYS_SIGACTION                = 416 // %7B int sigaction(int sig, const struct sigaction *act, struct sigaction *oact); %7D%0A%09SYS_SIGRETURN                = 417 // %7B int sigreturn( const struct __ucontext *sigcntxp); %7D%0A
 %09SYS
@@ -24690,151 +24690,213 @@
 ; %7D%0A
-%09SYS_SETCONTEXT               = 422 // %7B int setcontext( %5C%0A%09SYS_SWAPCONTEXT              = 423 // %7B int swapcontext(struct __ucontext *oucp, %5C%0A
+%09SYS_SETCONTEXT               = 422 // %7B int setcontext( const struct __ucontext *ucp); %7D%0A%09SYS_SWAPCONTEXT              = 423 // %7B int swapcontext(struct __ucontext *oucp, const struct __ucontext *ucp); %7D%0A
 %09SYS
@@ -24969,497 +24969,646 @@
 ; %7D%0A
-%09SYS___ACL_GET_LINK           = 425 // %7B int __acl_get_link(const char *path, %5C%0A%09SYS___ACL_SET_LINK           = 426 // %7B int __acl_set_link(const char *path, %5C%0A%09SYS___ACL_DELETE_LINK        = 427 // %7B int __acl_delete_link(const char *path, %5C%0A%09SYS___ACL_ACLCHECK_LINK      = 428 // %7B int __acl_aclcheck_link(const char *path, %5C%0A%09SYS_SIGWAIT                  = 429 // %7B int sigwait(const sigset_t *set, %5C%0A%09SYS_THR_CREATE               = 430 // %7B int thr_create(ucontext_t *ctx, long *id, %5C%0A
+%09SYS___ACL_GET_LINK           = 425 // %7B int __acl_get_link(const char *path, acl_type_t type, struct acl *aclp); %7D%0A%09SYS___ACL_SET_LINK           = 426 // %7B int __acl_set_link(const char *path, acl_type_t type, struct acl *aclp); %7D%0A%09SYS___ACL_DELETE_LINK        = 427 // %7B int __acl_delete_link(const char *path, acl_type_t type); %7D%0A%09SYS___ACL_ACLCHECK_LINK      = 428 // %7B int __acl_aclcheck_link(const char *path, acl_type_t type, struct acl *aclp); %7D%0A%09SYS_SIGWAIT                  = 429 // %7B int sigwait(const sigset_t *set, int *sig); %7D%0A%09SYS_THR_CREATE               = 430 // %7B int thr_create(ucontext_t *ctx, long *id, int flags); %7D%0A
 %09SYS
@@ -25889,357 +25889,600 @@
 ; %7D%0A
-%09SYS_EXTATTR_LIST_FD          = 437 // %7B ssize_t extattr_list_fd(int fd, %5C%0A%09SYS_EXTATTR_LIST_FILE        = 438 // %7B ssize_t extattr_list_file( %5C%0A%09SYS_EXTATTR_LIST_LINK        = 439 // %7B ssize_t extattr_list_link( %5C%0A%09SYS_KSEM_TIMEDWAIT           = 441 // %7B int ksem_timedwait(semid_t id, %5C%0A%09SYS_THR_SUSPEND              = 442 // %7B int thr_suspend( %5C%0A
+%09SYS_EXTATTR_LIST_FD          = 437 // %7B ssize_t extattr_list_fd(int fd, int attrnamespace, void *data, size_t nbytes); %7D%0A%09SYS_EXTATTR_LIST_FILE        = 438 // %7B ssize_t extattr_list_file( const char *path, int attrnamespace, void *data, size_t nbytes); %7D%0A%09SYS_EXTATTR_LIST_LINK        = 439 // %7B ssize_t extattr_list_link( const char *path, int attrnamespace, void *data, size_t nbytes); %7D%0A%09SYS_KSEM_TIMEDWAIT           = 441 // %7B int ksem_timedwait(semid_t id, const struct timespec *abstime); %7D%0A%09SYS_THR_SUSPEND              = 442 // %7B int thr_suspend( const struct timespec *timeout); %7D%0A
 %09SYS
@@ -26629,157 +26629,187 @@
 ; %7D%0A
-%09SYS_AUDIT                    = 445 // %7B int audit(const void *record, %5C%0A%09SYS_AUDITON                  = 446 // %7B int auditon(int cmd, void *data, %5C%0A
+%09SYS_AUDIT                    = 445 // %7B int audit(const void *record, u_int length); %7D%0A%09SYS_AUDITON                  = 446 // %7B int auditon(int cmd, void *data, u_int length); %7D%0A
 %09SYS
@@ -27118,132 +27118,240 @@
 ; %7D%0A
-%09SYS_GETAUDIT_ADDR            = 451 // %7B int getaudit_addr( %5C%0A%09SYS_SETAUDIT_ADDR            = 452 // %7B int setaudit_addr( %5C%0A
+%09SYS_GETAUDIT_ADDR            = 451 // %7B int getaudit_addr( struct auditinfo_addr *auditinfo_addr, u_int length); %7D%0A%09SYS_SETAUDIT_ADDR            = 452 // %7B int setaudit_addr( struct auditinfo_addr *auditinfo_addr, u_int length); %7D%0A
 %09SYS
@@ -27419,163 +27419,221 @@
 ; %7D%0A
-%09SYS__UMTX_OP                 = 454 // %7B int _umtx_op(void *obj, int op, %5C%0A%09SYS_THR_NEW                  = 455 // %7B int thr_new(struct thr_param *param, %5C%0A
+%09SYS__UMTX_OP                 = 454 // %7B int _umtx_op(void *obj, int op, u_long val, void *uaddr1, void *uaddr2); %7D%0A%09SYS_THR_NEW                  = 455 // %7B int thr_new(struct thr_param *param, int param_size); %7D%0A
 %09SYS
@@ -27725,374 +27725,683 @@
 ; %7D%0A
-%09SYS_KMQ_OPEN                 = 457 // %7B int kmq_open(const char *path, int flags, %5C%0A%09SYS_KMQ_SETATTR              = 458 // %7B int kmq_setattr(int mqd,%09%09%5C%0A%09SYS_KMQ_TIMEDRECEIVE         = 459 // %7B int kmq_timedreceive(int mqd,%09%5C%0A%09SYS_KMQ_TIMEDSEND            = 460 // %7B int kmq_timedsend(int mqd,%09%09%5C%0A%09SYS_KMQ_NOTIFY               = 461 // %7B int kmq_notify(int mqd,%09%09%5C%0A
+%09SYS_KMQ_OPEN                 = 457 // %7B int kmq_open(const char *path, int flags, mode_t mode, const struct mq_attr *attr); %7D%0A%09SYS_KMQ_SETATTR              = 458 // %7B int kmq_setattr(int mqd,%09%09const struct mq_attr *attr,%09%09struct mq_attr *oattr); %7D%0A%09SYS_KMQ_TIMEDRECEIVE         = 459 // %7B int kmq_timedreceive(int mqd,%09char *msg_ptr, size_t msg_len,%09unsigned *msg_prio,%09%09%09const struct timespec *abs_timeout); %7D%0A%09SYS_KMQ_TIMEDSEND            = 460 // %7B int kmq_timedsend(int mqd,%09%09const char *msg_ptr, size_t msg_len,unsigned msg_prio,%09%09%09const struct timespec *abs_timeout);%7D%0A%09SYS_KMQ_NOTIFY               = 461 // %7B int kmq_notify(int mqd,%09%09const struct sigevent *sigev); %7D%0A
 %09SYS
@@ -28749,83 +28749,119 @@
 ; %7D%0A
-%09SYS_RTPRIO_THREAD            = 466 // %7B int rtprio_thread(int function, %5C%0A
+%09SYS_RTPRIO_THREAD            = 466 // %7B int rtprio_thread(int function, lwpid_t lwpid, struct rtprio *rtp); %7D%0A
 %09SYS
@@ -28944,643 +28944,1001 @@
 ; %7D%0A
-%09SYS_SCTP_GENERIC_SENDMSG     = 472 // %7B int sctp_generic_sendmsg(int sd, caddr_t msg, int mlen, %5C%0A%09SYS_SCTP_GENERIC_SENDMSG_IOV = 473 // %7B int sctp_generic_sendmsg_iov(int sd, struct iovec *iov, int iovlen, %5C%0A%09SYS_SCTP_GENERIC_RECVMSG     = 474 // %7B int sctp_generic_recvmsg(int sd, struct iovec *iov, int iovlen, %5C%0A%09SYS_PREAD                    = 475 // %7B ssize_t pread(int fd, void *buf, %5C%0A%09SYS_PWRITE                   = 476 // %7B ssize_t pwrite(int fd, const void *buf, %5C%0A%09SYS_MMAP                     = 477 // %7B caddr_t mmap(caddr_t addr, size_t len, %5C%0A%09SYS_LSEEK                    = 478 // %7B off_t lseek(int fd, off_t offset, %5C%0A
+%09SYS_SCTP_GENERIC_SENDMSG     = 472 // %7B int sctp_generic_sendmsg(int sd, caddr_t msg, int mlen, caddr_t to, __socklen_t tolen, struct sctp_sndrcvinfo *sinfo, int flags); %7D%0A%09SYS_SCTP_GENERIC_SENDMSG_IOV = 473 // %7B int sctp_generic_sendmsg_iov(int sd, struct iovec *iov, int iovlen, caddr_t to, __socklen_t tolen, struct sctp_sndrcvinfo *sinfo, int flags); %7D%0A%09SYS_SCTP_GENERIC_RECVMSG     = 474 // %7B int sctp_generic_recvmsg(int sd, struct iovec *iov, int iovlen, struct sockaddr * from, __socklen_t *fromlenaddr, struct sctp_sndrcvinfo *sinfo, int *msg_flags); %7D%0A%09SYS_PREAD                    = 475 // %7B ssize_t pread(int fd, void *buf, size_t nbyte, off_t offset); %7D%0A%09SYS_PWRITE                   = 476 // %7B ssize_t pwrite(int fd, const void *buf, size_t nbyte, off_t offset); %7D%0A%09SYS_MMAP                     = 477 // %7B caddr_t mmap(caddr_t addr, size_t len, int prot, int flags, int fd, off_t pos); %7D%0A%09SYS_LSEEK                    = 478 // %7B off_t lseek(int fd, off_t offset, int whence); %7D%0A
 %09SYS
@@ -30187,93 +30187,107 @@
 ; %7D%0A
-%09SYS_SHM_OPEN                 = 482 // %7B int shm_open(const char *path, int flags, %5C%0A
+%09SYS_SHM_OPEN                 = 482 // %7B int shm_open(const char *path, int flags, mode_t mode); %7D%0A
 %09SYS
@@ -30437,918 +30437,1251 @@
 ; %7D%0A
-%09SYS_CPUSET_SETID             = 485 // %7B int cpuset_setid(cpuwhich_t which, id_t id, %5C%0A%09SYS_CPUSET_GETID             = 486 // %7B int cpuset_getid(cpulevel_t level, %5C%0A%09SYS_CPUSET_GETAFFINITY       = 487 // %7B int cpuset_getaffinity(cpulevel_t level, %5C%0A%09SYS_CPUSET_SETAFFINITY       = 488 // %7B int cpuset_setaffinity(cpulevel_t level, %5C%0A%09SYS_FACCESSAT                = 489 // %7B int faccessat(int fd, char *path, int amode, %5C%0A%09SYS_FCHMODAT                 = 490 // %7B int fchmodat(int fd, char *path, mode_t mode, %5C%0A%09SYS_FCHOWNAT                 = 491 // %7B int fchownat(int fd, char *path, uid_t uid, %5C%0A%09SYS_FEXECVE                  = 492 // %7B int fexecve(int fd, char **argv, %5C%0A%09SYS_FSTATAT                  = 493 // %7B int fstatat(int fd, char *path, %5C%0A%09SYS_FUTIMESAT                = 494 // %7B int futimesat(int fd, char *path, %5C%0A%09SYS_LINKAT                   = 495 // %7B int linkat(int fd1, char *path1, int fd2, %5C%0A
+%09SYS_CPUSET_SETID             = 485 // %7B int cpuset_setid(cpuwhich_t which, id_t id, cpusetid_t setid); %7D%0A%09SYS_CPUSET_GETID             = 486 // %7B int cpuset_getid(cpulevel_t level, cpuwhich_t which, id_t id, cpusetid_t *setid); %7D%0A%09SYS_CPUSET_GETAFFINITY       = 487 // %7B int cpuset_getaffinity(cpulevel_t level, cpuwhich_t which, id_t id, size_t cpusetsize, cpuset_t *mask); %7D%0A%09SYS_CPUSET_SETAFFINITY       = 488 // %7B int cpuset_setaffinity(cpulevel_t level, cpuwhich_t which, id_t id, size_t cpusetsize, const cpuset_t *mask); %7D%0A%09SYS_FACCESSAT                = 489 // %7B int faccessat(int fd, char *path, int amode, int flag); %7D%0A%09SYS_FCHMODAT                 = 490 // %7B int fchmodat(int fd, char *path, mode_t mode, int flag); %7D%0A%09SYS_FCHOWNAT                 = 491 // %7B int fchownat(int fd, char *path, uid_t uid, gid_t gid, int flag); %7D%0A%09SYS_FEXECVE                  = 492 // %7B int fexecve(int fd, char **argv, char **envv); %7D%0A%09SYS_FSTATAT                  = 493 // %7B int fstatat(int fd, char *path, struct stat *buf, int flag); %7D%0A%09SYS_FUTIMESAT                = 494 // %7B int futimesat(int fd, char *path, struct timeval *times); %7D%0A%09SYS_LINKAT                   = 495 // %7B int linkat(int fd1, char *path1, int fd2, char *path2, int flag); %7D%0A
 %09SYS
@@ -31859,436 +31859,505 @@
 ; %7D%0A
-%09SYS_MKNODAT                  = 498 // %7B int mknodat(int fd, char *path, mode_t mode, %5C%0A%09SYS_OPENAT                   = 499 // %7B int openat(int fd, char *path, int flag, %5C%0A%09SYS_READLINKAT               = 500 // %7B int readlinkat(int fd, char *path, char *buf, %5C%0A%09SYS_RENAMEAT                 = 501 // %7B int renameat(int oldfd, char *old, int newfd, %5C%0A%09SYS_SYMLINKAT                = 502 // %7B int symlinkat(char *path1, int fd, %5C%0A
+%09SYS_MKNODAT                  = 498 // %7B int mknodat(int fd, char *path, mode_t mode, dev_t dev); %7D%0A%09SYS_OPENAT                   = 499 // %7B int openat(int fd, char *path, int flag, mode_t mode); %7D%0A%09SYS_READLINKAT               = 500 // %7B int readlinkat(int fd, char *path, char *buf, size_t bufsize); %7D%0A%09SYS_RENAMEAT                 = 501 // %7B int renameat(int oldfd, char *old, int newfd, char *new); %7D%0A%09SYS_SYMLINKAT                = 502 // %7B int symlinkat(char *path1, int fd, char *path2); %7D%0A
 %09SYS
@@ -32588,160 +32588,226 @@
 ; %7D%0A
-%09SYS_JAIL_GET                 = 506 // %7B int jail_get(struct iovec *iovp, %5C%0A%09SYS_JAIL_SET                 = 507 // %7B int jail_set(struct iovec *iovp, %5C%0A
+%09SYS_JAIL_GET                 = 506 // %7B int jail_get(struct iovec *iovp, unsigned int iovcnt, int flags); %7D%0A%09SYS_JAIL_SET                 = 507 // %7B int jail_set(struct iovec *iovp, unsigned int iovcnt, int flags); %7D%0A
 %09SYS
@@ -32944,235 +32944,309 @@
 ; %7D%0A
-%09SYS___SEMCTL                 = 510 // %7B int __semctl(int semid, int semnum, %5C%0A%09SYS_MSGCTL                   = 511 // %7B int msgctl(int msqid, int cmd, %5C%0A%09SYS_SHMCTL                   = 512 // %7B int shmctl(int shmid, int cmd, %5C%0A
+%09SYS___SEMCTL                 = 510 // %7B int __semctl(int semid, int semnum, int cmd, union semun *arg); %7D%0A%09SYS_MSGCTL                   = 511 // %7B int msgctl(int msqid, int cmd, struct msqid_ds *buf); %7D%0A%09SYS_SHMCTL                   = 512 // %7B int shmctl(int shmid, int cmd, struct shmid_ds *buf); %7D%0A
 %09SYS
@@ -33325,85 +33325,117 @@
 ; %7D%0A
-%09SYS___CAP_RIGHTS_GET         = 515 // %7B int __cap_rights_get(int version, %5C%0A
+%09SYS___CAP_RIGHTS_GET         = 515 // %7B int __cap_rights_get(int version, int fd, cap_rights_t *rightsp); %7D%0A
 %09SYS
@@ -33801,159 +33801,248 @@
 ; %7D%0A
-%09SYS_PSELECT                  = 522 // %7B int pselect(int nd, fd_set *in, %5C%0A%09SYS_GETLOGINCLASS            = 523 // %7B int getloginclass(char *namebuf, %5C%0A
+%09SYS_PSELECT                  = 522 // %7B int pselect(int nd, fd_set *in, fd_set *ou, fd_set *ex, const struct timespec *ts, const sigset_t *sm); %7D%0A%09SYS_GETLOGINCLASS            = 523 // %7B int getloginclass(char *namebuf, size_t namelen); %7D%0A
 %09SYS
@@ -34124,1327 +34124,1978 @@
 ; %7D%0A
-%09SYS_RCTL_GET_RACCT           = 525 // %7B int rctl_get_racct(const void *inbufp, %5C%0A%09SYS_RCTL_GET_RULES           = 526 // %7B int rctl_get_rules(const void *inbufp, %5C%0A%09SYS_RCTL_GET_LIMITS          = 527 // %7B int rctl_get_limits(const void *inbufp, %5C%0A%09SYS_RCTL_ADD_RULE            = 528 // %7B int rctl_add_rule(const void *inbufp, %5C%0A%09SYS_RCTL_REMOVE_RULE         = 529 // %7B int rctl_remove_rule(const void *inbufp, %5C%0A%09SYS_POSIX_FALLOCATE          = 530 // %7B int posix_fallocate(int fd, %5C%0A%09SYS_POSIX_FADVISE            = 531 // %7B int posix_fadvise(int fd, off_t offset, %5C%0A%09SYS_WAIT6                    = 532 // %7B int wait6(idtype_t idtype, id_t id, %5C%0A%09SYS_CAP_RIGHTS_LIMIT         = 533 // %7B int cap_rights_limit(int fd, %5C%0A%09SYS_CAP_IOCTLS_LIMIT         = 534 // %7B int cap_ioctls_limit(int fd, %5C%0A%09SYS_CAP_IOCTLS_GET           = 535 // %7B ssize_t cap_ioctls_get(int fd, %5C%0A%09SYS_CAP_FCNTLS_LIMIT         = 536 // %7B int cap_fcntls_limit(int fd, %5C%0A%09SYS_CAP_FCNTLS_GET           = 537 // %7B int cap_fcntls_get(int fd, %5C%0A%09SYS_BINDAT                   = 538 // %7B int bindat(int fd, int s, caddr_t name, %5C%0A%09SYS_CONNECTAT                = 539 // %7B int connectat(int fd, int s, caddr_t name, %5C%0A%09SYS_CHFLAGSAT                = 540 // %7B int chflagsat(int fd, const char *path, %5C%0A%09SYS_ACCEPT4                  = 541 // %7B int accept4(int s, %5C%0A
+%09SYS_RCTL_GET_RACCT           = 525 // %7B int rctl_get_racct(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen); %7D%0A%09SYS_RCTL_GET_RULES           = 526 // %7B int rctl_get_rules(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen); %7D%0A%09SYS_RCTL_GET_LIMITS          = 527 // %7B int rctl_get_limits(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen); %7D%0A%09SYS_RCTL_ADD_RULE            = 528 // %7B int rctl_add_rule(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen); %7D%0A%09SYS_RCTL_REMOVE_RULE         = 529 // %7B int rctl_remove_rule(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen); %7D%0A%09SYS_POSIX_FALLOCATE          = 530 // %7B int posix_fallocate(int fd, off_t offset, off_t len); %7D%0A%09SYS_POSIX_FADVISE            = 531 // %7B int posix_fadvise(int fd, off_t offset, off_t len, int advice); %7D%0A%09SYS_WAIT6                    = 532 // %7B int wait6(idtype_t idtype, id_t id, int *status, int options, struct __wrusage *wrusage, siginfo_t *info); %7D%0A%09SYS_CAP_RIGHTS_LIMIT         = 533 // %7B int cap_rights_limit(int fd, cap_rights_t *rightsp); %7D%0A%09SYS_CAP_IOCTLS_LIMIT         = 534 // %7B int cap_ioctls_limit(int fd, const u_long *cmds, size_t ncmds); %7D%0A%09SYS_CAP_IOCTLS_GET           = 535 // %7B ssize_t cap_ioctls_get(int fd, u_long *cmds, size_t maxcmds); %7D%0A%09SYS_CAP_FCNTLS_LIMIT         = 536 // %7B int cap_fcntls_limit(int fd, uint32_t fcntlrights); %7D%0A%09SYS_CAP_FCNTLS_GET           = 537 // %7B int cap_fcntls_get(int fd, uint32_t *fcntlrightsp); %7D%0A%09SYS_BINDAT                   = 538 // %7B int bindat(int fd, int s, caddr_t name, int namelen); %7D%0A%09SYS_CONNECTAT                = 539 // %7B int connectat(int fd, int s, caddr_t name, int namelen); %7D%0A%09SYS_CHFLAGSAT                = 540 // %7B int chflagsat(int fd, const char *path, u_long flags, int atflag); %7D%0A%09SYS_ACCEPT4                  = 541 // %7B int accept4(int s, struct sockaddr * __restrict name, __socklen_t * __restrict anamelen, int flags); %7D%0A
 %09SYS
@@ -36252,467 +36252,714 @@
 ; %7D%0A
-%09SYS_PROCCTL                  = 544 // %7B int procctl(idtype_t idtype, id_t id, %5C%0A%09SYS_PPOLL                    = 545 // %7B int ppoll(struct pollfd *fds, u_int nfds, %5C%0A%09SYS_FUTIMENS                 = 546 // %7B int futimens(int fd, %5C%0A%09SYS_UTIMENSAT                = 547 // %7B int utimensat(int fd, %5C%0A%09SYS_NUMA_GETAFFINITY         = 548 // %7B int numa_getaffinity(cpuwhich_t which, %5C%0A%09SYS_NUMA_SETAFFINITY         = 549 // %7B int numa_setaffinity(cpuwhich_t which, %5C%0A
+%09SYS_PROCCTL                  = 544 // %7B int procctl(idtype_t idtype, id_t id, int com, void *data); %7D%0A%09SYS_PPOLL                    = 545 // %7B int ppoll(struct pollfd *fds, u_int nfds, const struct timespec *ts, const sigset_t *set); %7D%0A%09SYS_FUTIMENS                 = 546 // %7B int futimens(int fd, struct timespec *times); %7D%0A%09SYS_UTIMENSAT                = 547 // %7B int utimensat(int fd, char *path, struct timespec *times, int flag); %7D%0A%09SYS_NUMA_GETAFFINITY         = 548 // %7B int numa_getaffinity(cpuwhich_t which, id_t id, struct vm_domain_policy_entry *policy); %7D%0A%09SYS_NUMA_SETAFFINITY         = 549 // %7B int numa_setaffinity(cpuwhich_t which, id_t id, const struct vm_domain_policy_entry *policy); %7D%0A
 %09SYS
- f 0cfcd2dbbd8f9a8d77359525e6a977951f7f93cc62e736d3158cea73bad56bea vendor/golang.org/x/sys/unix/ztypes_freebsd_386.go
+ f aa4933a20387bac9b0c6c3c9fb576e95f2732d3610cfec825e0bafbf96f9b9ae vendor/golang.org/x/sys/unix/ztypes_freebsd_386.go
dmppatch 7
@@ -5039,76 +5039,1606 @@
 t (%0A
-%09PTRACE_TRACEME = 0x0%0A%09PTRACE_CONT    = 0x7%0A%09PTRACE_KILL    = 0x8%0A
+%09PTRACE_ATTACH     = 0xa%0A%09PTRACE_CONT       = 0x7%0A%09PTRACE_DETACH     = 0xb%0A%09PTRACE_GETFPREGS  = 0x23%0A%09PTRACE_GETFSBASE  = 0x47%0A%09PTRACE_GETLWPLIST = 0xf%0A%09PTRACE_GETNUMLWPS = 0xe%0A%09PTRACE_GETREGS    = 0x21%0A%09PTRACE_GETXSTATE  = 0x45%0A%09PTRACE_IO         = 0xc%0A%09PTRACE_KILL       = 0x8%0A%09PTRACE_LWPEVENTS  = 0x18%0A%09PTRACE_LWPINFO    = 0xd%0A%09PTRACE_SETFPREGS  = 0x24%0A%09PTRACE_SETREGS    = 0x22%0A%09PTRACE_SINGLESTEP = 0x9%0A%09PTRACE_TRACEME    = 0x0%0A
 )%0A
+%0Aconst (%0A%09PIOD_READ_D  = 0x1%0A%09PIOD_WRITE_D = 0x2%0A%09PIOD_READ_I  = 0x3%0A%09PIOD_WRITE_I = 0x4%0A)%0A%0Aconst (%0A%09PL_FLAG_BORN   = 0x100%0A%09PL_FLAG_EXITED = 0x200%0A%09PL_FLAG_SI     = 0x20%0A)%0A%0Aconst (%0A%09TRAP_BRKPT = 0x1%0A%09TRAP_TRACE = 0x2%0A)%0A%0Atype PtraceLwpInfoStruct struct %7B%0A%09Lwpid        int32%0A%09Event        int32%0A%09Flags        int32%0A%09Sigmask      Sigset_t%0A%09Siglist      Sigset_t%0A%09Siginfo      __Siginfo%0A%09Tdname       %5B20%5Dint8%0A%09Child_pid    int32%0A%09Syscall_code uint32%0A%09Syscall_narg uint32%0A%7D%0A%0Atype __Siginfo struct %7B%0A%09Signo    int32%0A%09Errno    int32%0A%09Code     int32%0A%09Pid      int32%0A%09Uid      uint32%0A%09Status   int32%0A%09Addr     *byte%0A%09Value    %5B4%5Dbyte%0A%09X_reason %5B32%5Dbyte%0A%7D%0A%0Atype Sigset_t struct %7B%0A%09Val %5B4%5Duint32%0A%7D%0A%0Atype Reg struct %7B%0A%09Fs     uint32%0A%09Es     uint32%0A%09Ds     uint32%0A%09Edi    uint32%0A%09Esi    uint32%0A%09Ebp    uint32%0A%09Isp    uint32%0A%09Ebx    uint32%0A%09Edx    uint32%0A%09Ecx    uint32%0A%09Eax    uint32%0A%09Trapno uint32%0A%09Err    uint32%0A%09Eip    uint32%0A%09Cs     uint32%0A%09Eflags uint32%0A%09Esp    uint32%0A%09Ss     uint32%0A%09Gs     uint32%0A%7D%0A%0Atype FpReg struct %7B%0A%09Env   %5B7%5Duint32%0A%09Acc   %5B8%5D%5B10%5Duint8%0A%09Ex_sw uint32%0A%09Pad   %5B64%5Duint8%0A%7D%0A%0Atype PtraceIoDesc struct %7B%0A%09Op   int32%0A%09Offs *byte%0A%09Addr *byte%0A%09Len  uint%0A%7D%0A
 %0Atyp
- f de411f3cae647a8881927365a7006c698b16c658fd254304a45086feff13a34f vendor/golang.org/x/sys/unix/ztypes_freebsd_amd64.go
+ f f48937a5ee8b68bce8071cfac6491ea44f792d52d8e77ee9677430af48bee521 vendor/golang.org/x/sys/unix/ztypes_freebsd_amd64.go
dmppatch 7
@@ -5020,76 +5020,1681 @@
 t (%0A
-%09PTRACE_TRACEME = 0x0%0A%09PTRACE_CONT    = 0x7%0A%09PTRACE_KILL    = 0x8%0A
+%09PTRACE_ATTACH     = 0xa%0A%09PTRACE_CONT       = 0x7%0A%09PTRACE_DETACH     = 0xb%0A%09PTRACE_GETFPREGS  = 0x23%0A%09PTRACE_GETFSBASE  = 0x47%0A%09PTRACE_GETLWPLIST = 0xf%0A%09PTRACE_GETNUMLWPS = 0xe%0A%09PTRACE_GETREGS    = 0x21%0A%09PTRACE_GETXSTATE  = 0x45%0A%09PTRACE_IO         = 0xc%0A%09PTRACE_KILL       = 0x8%0A%09PTRACE_LWPEVENTS  = 0x18%0A%09PTRACE_LWPINFO    = 0xd%0A%09PTRACE_SETFPREGS  = 0x24%0A%09PTRACE_SETREGS    = 0x22%0A%09PTRACE_SINGLESTEP = 0x9%0A%09PTRACE_TRACEME    = 0x0%0A)%0A%0Aconst (%0A%09PIOD_READ_D  = 0x1%0A%09PIOD_WRITE_D = 0x2%0A%09PIOD_READ_I  = 0x3%0A%09PIOD_WRITE_I = 0x4%0A)%0A%0Aconst (%0A%09PL_FLAG_BORN   = 0x100%0A%09PL_FLAG_EXITED = 0x200%0A%09PL_FLAG_SI     = 0x20%0A
 )%0A
+%0Aconst (%0A%09TRAP_BRKPT = 0x1%0A%09TRAP_TRACE = 0x2%0A)%0A%0Atype PtraceLwpInfoStruct struct %7B%0A%09Lwpid        int32%0A%09Event        int32%0A%09Flags        int32%0A%09Sigmask      Sigset_t%0A%09Siglist      Sigset_t%0A%09Siginfo      __Siginfo%0A%09Tdname       %5B20%5Dint8%0A%09Child_pid    int32%0A%09Syscall_code uint32%0A%09Syscall_narg uint32%0A%7D%0A%0Atype __Siginfo struct %7B%0A%09Signo  int32%0A%09Errno  int32%0A%09Code   int32%0A%09Pid    int32%0A%09Uid    uint32%0A%09Status int32%0A%09Addr   *byte%0A%09Value  %5B8%5Dbyte%0A%09_      %5B40%5Dbyte%0A%7D%0A%0Atype Sigset_t struct %7B%0A%09Val %5B4%5Duint32%0A%7D%0A%0Atype Reg struct %7B%0A%09R15    int64%0A%09R14    int64%0A%09R13    int64%0A%09R12    int64%0A%09R11    int64%0A%09R10    int64%0A%09R9     int64%0A%09R8     int64%0A%09Rdi    int64%0A%09Rsi    int64%0A%09Rbp    int64%0A%09Rbx    int64%0A%09Rdx    int64%0A%09Rcx    int64%0A%09Rax    int64%0A%09Trapno uint32%0A%09Fs     uint16%0A%09Gs     uint16%0A%09Err    uint32%0A%09Es     uint16%0A%09Ds     uint16%0A%09Rip    int64%0A%09Cs     int64%0A%09Rflags int64%0A%09Rsp    int64%0A%09Ss     int64%0A%7D%0A%0Atype FpReg struct %7B%0A%09Env   %5B4%5Duint64%0A%09Acc   %5B8%5D%5B16%5Duint8%0A%09Xacc  %5B16%5D%5B16%5Duint8%0A%09Spare %5B12%5Duint64%0A%7D%0A%0Atype PtraceIoDesc struct %7B%0A%09Op   int32%0A%09Offs *byte%0A%09Addr *byte%0A%09Len  uint%0A%7D%0A
 %0Atyp
- f a0f4d6b7b28e13880cf243295f5d9da371a7dc14c4f2ffcfc60e27e1f4ca4d0d vendor/golang.org/x/sys/unix/ztypes_freebsd_arm.go
+ f 6a0f2421552e3f9d2b73e9e135a36a9278ebd63d548a738e5fe93f6ddee71ebd vendor/golang.org/x/sys/unix/ztypes_freebsd_arm.go
dmppatch 7
@@ -5023,76 +5023,1372 @@
 t (%0A
-%09PTRACE_TRACEME = 0x0%0A%09PTRACE_CONT    = 0x7%0A%09PTRACE_KILL    = 0x8%0A
+%09PTRACE_ATTACH     = 0xa%0A%09PTRACE_CONT       = 0x7%0A%09PTRACE_DETACH     = 0xb%0A%09PTRACE_GETFPREGS  = 0x23%0A%09PTRACE_GETFSBASE  = 0x47%0A%09PTRACE_GETLWPLIST = 0xf%0A%09PTRACE_GETNUMLWPS = 0xe%0A%09PTRACE_GETREGS    = 0x21%0A%09PTRACE_GETXSTATE  = 0x45%0A%09PTRACE_IO         = 0xc%0A%09PTRACE_KILL       = 0x8%0A%09PTRACE_LWPEVENTS  = 0x18%0A%09PTRACE_LWPINFO    = 0xd%0A%09PTRACE_SETFPREGS  = 0x24%0A%09PTRACE_SETREGS    = 0x22%0A%09PTRACE_SINGLESTEP = 0x9%0A%09PTRACE_TRACEME    = 0x0%0A
 )%0A
+%0Aconst (%0A%09PIOD_READ_D  = 0x1%0A%09PIOD_WRITE_D = 0x2%0A%09PIOD_READ_I  = 0x3%0A%09PIOD_WRITE_I = 0x4%0A)%0A%0Aconst (%0A%09PL_FLAG_BORN   = 0x100%0A%09PL_FLAG_EXITED = 0x200%0A%09PL_FLAG_SI     = 0x20%0A)%0A%0Aconst (%0A%09TRAP_BRKPT = 0x1%0A%09TRAP_TRACE = 0x2%0A)%0A%0Atype PtraceLwpInfoStruct struct %7B%0A%09Lwpid        int32%0A%09Event        int32%0A%09Flags        int32%0A%09Sigmask      Sigset_t%0A%09Siglist      Sigset_t%0A%09Siginfo      __Siginfo%0A%09Tdname       %5B20%5Dint8%0A%09Child_pid    int32%0A%09Syscall_code uint32%0A%09Syscall_narg uint32%0A%7D%0A%0Atype __Siginfo struct %7B%0A%09Signo    int32%0A%09Errno    int32%0A%09Code     int32%0A%09Pid      int32%0A%09Uid      uint32%0A%09Status   int32%0A%09Addr     *byte%0A%09Value    %5B4%5Dbyte%0A%09X_reason %5B32%5Dbyte%0A%7D%0A%0Atype Sigset_t struct %7B%0A%09Val %5B4%5Duint32%0A%7D%0A%0Atype Reg struct %7B%0A%09R      %5B13%5Duint32%0A%09R_sp   uint32%0A%09R_lr   uint32%0A%09R_pc   uint32%0A%09R_cpsr uint32%0A%7D%0A%0Atype FpReg struct %7B%0A%09Fpr_fpsr uint32%0A%09Fpr      %5B8%5D%5B3%5Duint32%0A%7D%0A%0Atype PtraceIoDesc struct %7B%0A%09Op   int32%0A%09Offs *byte%0A%09Addr *byte%0A%09Len  uint%0A%7D%0A
 %0Atyp
- f 7e5409894206955ecf5d1fd7d86307cb25605d89b1804bfded396cd6793d70a8 vendor/golang.org/x/sys/unix/ztypes_freebsd_arm64.go
+ f 6e3ef3bbcfff72efb1b4d20530a30bc447072df122d28022bf0555b080033b2a vendor/golang.org/x/sys/unix/ztypes_freebsd_arm64.go
dmppatch 7
@@ -5020,76 +5020,1369 @@
 t (%0A
-%09PTRACE_TRACEME = 0x0%0A%09PTRACE_CONT    = 0x7%0A%09PTRACE_KILL    = 0x8%0A
+%09PTRACE_ATTACH     = 0xa%0A%09PTRACE_CONT       = 0x7%0A%09PTRACE_DETACH     = 0xb%0A%09PTRACE_GETFPREGS  = 0x23%0A%09PTRACE_GETFSBASE  = 0x47%0A%09PTRACE_GETLWPLIST = 0xf%0A%09PTRACE_GETNUMLWPS = 0xe%0A%09PTRACE_GETREGS    = 0x21%0A%09PTRACE_GETXSTATE  = 0x45%0A%09PTRACE_IO         = 0xc%0A%09PTRACE_KILL       = 0x8%0A%09PTRACE_LWPEVENTS  = 0x18%0A%09PTRACE_LWPINFO    = 0xd%0A%09PTRACE_SETFPREGS  = 0x24%0A%09PTRACE_SETREGS    = 0x22%0A%09PTRACE_SINGLESTEP = 0x9%0A%09PTRACE_TRACEME    = 0x0%0A
 )%0A
+%0Aconst (%0A%09PIOD_READ_D  = 0x1%0A%09PIOD_WRITE_D = 0x2%0A%09PIOD_READ_I  = 0x3%0A%09PIOD_WRITE_I = 0x4%0A)%0A%0Aconst (%0A%09PL_FLAG_BORN   = 0x100%0A%09PL_FLAG_EXITED = 0x200%0A%09PL_FLAG_SI     = 0x20%0A)%0A%0Aconst (%0A%09TRAP_BRKPT = 0x1%0A%09TRAP_TRACE = 0x2%0A)%0A%0Atype PtraceLwpInfoStruct struct %7B%0A%09Lwpid        int32%0A%09Event        int32%0A%09Flags        int32%0A%09Sigmask      Sigset_t%0A%09Siglist      Sigset_t%0A%09Siginfo      __Siginfo%0A%09Tdname       %5B20%5Dint8%0A%09Child_pid    int32%0A%09Syscall_code uint32%0A%09Syscall_narg uint32%0A%7D%0A%0Atype __Siginfo struct %7B%0A%09Signo    int32%0A%09Errno    int32%0A%09Code     int32%0A%09Pid      int32%0A%09Uid      uint32%0A%09Status   int32%0A%09Addr     *byte%0A%09Value    %5B8%5Dbyte%0A%09X_reason %5B40%5Dbyte%0A%7D%0A%0Atype Sigset_t struct %7B%0A%09Val %5B4%5Duint32%0A%7D%0A%0Atype Reg struct %7B%0A%09X    %5B30%5Duint64%0A%09Lr   uint64%0A%09Sp   uint64%0A%09Elr  uint64%0A%09Spsr uint32%0A%7D%0A%0Atype FpReg struct %7B%0A%09Fp_q  %5B32%5Duint128%0A%09Fp_sr uint32%0A%09Fp_cr uint32%0A%7D%0A%0Atype PtraceIoDesc struct %7B%0A%09Op   int32%0A%09Offs *byte%0A%09Addr *byte%0A%09Len  uint%0A%7D%0A
 %0Atyp
- f e50d5ca79231056c23150e706db74f5c3eae42a04d45047c9c003776e72adf86 vendor/golang.org/x/sys/unix/ztypes_linux_386.go
+ f 2421c27179d18961aa44640d65c5b08e30f88efb542753baaaeb57febf37bdb0 vendor/golang.org/x/sys/unix/ztypes_linux_386.go
dmppatch 7
@@ -15725,24 +15725,47 @@
 2%5Duint32%0A%7D%0A%0A
+const _C__NSIG = 0x41%0A%0A
 type Signalf
@@ -64164,20 +64164,305 @@
             = 0x5%0A)%0A
+%0Atype CapUserHeader struct %7B%0A%09Version uint32%0A%09Pid     int32%0A%7D%0A%0Atype CapUserData struct %7B%0A%09Effective   uint32%0A%09Permitted   uint32%0A%09Inheritable uint32%0A%7D%0A%0Aconst (%0A%09LINUX_CAPABILITY_VERSION_1 = 0x19980330%0A%09LINUX_CAPABILITY_VERSION_2 = 0x20071026%0A%09LINUX_CAPABILITY_VERSION_3 = 0x20080522%0A)%0A
- f c809d74a44c6b36d2cf38d973299e4766da5de109a0f790062199558aa785a36 vendor/golang.org/x/sys/unix/ztypes_linux_amd64.go
+ f 81f6f3831cdacf5f8aa9a874eaffdf995b673e87cc2613a6f454f2424588dc16 vendor/golang.org/x/sys/unix/ztypes_linux_amd64.go
dmppatch 7
@@ -15973,24 +15973,47 @@
 6%5Duint64%0A%7D%0A%0A
+const _C__NSIG = 0x41%0A%0A
 type Signalf
@@ -64376,20 +64376,305 @@
             = 0x5%0A)%0A
+%0Atype CapUserHeader struct %7B%0A%09Version uint32%0A%09Pid     int32%0A%7D%0A%0Atype CapUserData struct %7B%0A%09Effective   uint32%0A%09Permitted   uint32%0A%09Inheritable uint32%0A%7D%0A%0Aconst (%0A%09LINUX_CAPABILITY_VERSION_1 = 0x19980330%0A%09LINUX_CAPABILITY_VERSION_2 = 0x20071026%0A%09LINUX_CAPABILITY_VERSION_3 = 0x20080522%0A)%0A
- f 50dddff8d8fca42716ecf664a615e246cf916346be87d5a4fb4658b6028f7e18 vendor/golang.org/x/sys/unix/ztypes_linux_arm.go
+ f 1743f8810367dc415d6bf29eba4fd4c6b137131b25891d83fd98cd0312989b0e vendor/golang.org/x/sys/unix/ztypes_linux_arm.go
dmppatch 7
@@ -15552,24 +15552,47 @@
 2%5Duint32%0A%7D%0A%0A
+const _C__NSIG = 0x41%0A%0A
 type Signalf
@@ -64050,20 +64050,305 @@
             = 0x5%0A)%0A
+%0Atype CapUserHeader struct %7B%0A%09Version uint32%0A%09Pid     int32%0A%7D%0A%0Atype CapUserData struct %7B%0A%09Effective   uint32%0A%09Permitted   uint32%0A%09Inheritable uint32%0A%7D%0A%0Aconst (%0A%09LINUX_CAPABILITY_VERSION_1 = 0x19980330%0A%09LINUX_CAPABILITY_VERSION_2 = 0x20071026%0A%09LINUX_CAPABILITY_VERSION_3 = 0x20080522%0A)%0A
- f 42167cd04275e6a83c5a5c5cd2d1a14356349bcb72486f92cabf373ad50f83c5 vendor/golang.org/x/sys/unix/ztypes_linux_arm64.go
+ f 539734c08ddf1ccede26e2b4bcf445979acc2bed93d4828ddbae3408c9725b00 vendor/golang.org/x/sys/unix/ztypes_linux_arm64.go
dmppatch 7
@@ -15617,24 +15617,47 @@
 6%5Duint64%0A%7D%0A%0A
+const _C__NSIG = 0x41%0A%0A
 type Signalf
@@ -64020,20 +64020,305 @@
             = 0x5%0A)%0A
+%0Atype CapUserHeader struct %7B%0A%09Version uint32%0A%09Pid     int32%0A%7D%0A%0Atype CapUserData struct %7B%0A%09Effective   uint32%0A%09Permitted   uint32%0A%09Inheritable uint32%0A%7D%0A%0Aconst (%0A%09LINUX_CAPABILITY_VERSION_1 = 0x19980330%0A%09LINUX_CAPABILITY_VERSION_2 = 0x20071026%0A%09LINUX_CAPABILITY_VERSION_3 = 0x20080522%0A)%0A
- f 345ce2e3bb483cd43b7cfc830c9979d5e39833919bdd054e576e10107a420da6 vendor/golang.org/x/sys/unix/ztypes_linux_mips.go
+ f d07e5ac8fd7729060dc7429af9e73e03136e9a2558724d59f0ea0b2b8048bdff vendor/golang.org/x/sys/unix/ztypes_linux_mips.go
dmppatch 7
@@ -15640,24 +15640,47 @@
 2%5Duint32%0A%7D%0A%0A
+const _C__NSIG = 0x80%0A%0A
 type Signalf
@@ -64134,20 +64134,305 @@
             = 0x5%0A)%0A
+%0Atype CapUserHeader struct %7B%0A%09Version uint32%0A%09Pid     int32%0A%7D%0A%0Atype CapUserData struct %7B%0A%09Effective   uint32%0A%09Permitted   uint32%0A%09Inheritable uint32%0A%7D%0A%0Aconst (%0A%09LINUX_CAPABILITY_VERSION_1 = 0x19980330%0A%09LINUX_CAPABILITY_VERSION_2 = 0x20071026%0A%09LINUX_CAPABILITY_VERSION_3 = 0x20080522%0A)%0A
- f 59afa9de9ce3a78ef81892657a3aa48cff89f3fe1afcdc992e7dd812af58972d vendor/golang.org/x/sys/unix/ztypes_linux_mips64.go
+ f 7b1b04dde0c34ec770e0808b1ef85d5e65e11f04431da26022752e31acf9e5a0 vendor/golang.org/x/sys/unix/ztypes_linux_mips64.go
dmppatch 7
@@ -15655,24 +15655,47 @@
 6%5Duint64%0A%7D%0A%0A
+const _C__NSIG = 0x80%0A%0A
 type Signalf
@@ -64062,20 +64062,305 @@
             = 0x5%0A)%0A
+%0Atype CapUserHeader struct %7B%0A%09Version uint32%0A%09Pid     int32%0A%7D%0A%0Atype CapUserData struct %7B%0A%09Effective   uint32%0A%09Permitted   uint32%0A%09Inheritable uint32%0A%7D%0A%0Aconst (%0A%09LINUX_CAPABILITY_VERSION_1 = 0x19980330%0A%09LINUX_CAPABILITY_VERSION_2 = 0x20071026%0A%09LINUX_CAPABILITY_VERSION_3 = 0x20080522%0A)%0A
- f 27690530b31c17fd12816619b3a8d5f331bfaba453170909829b7e327c283320 vendor/golang.org/x/sys/unix/ztypes_linux_mips64le.go
+ f 772faf6a71d7e405d87d2d9298098074677bb3267559f3d96706abe7a3c0e86f vendor/golang.org/x/sys/unix/ztypes_linux_mips64le.go
dmppatch 7
@@ -15657,24 +15657,47 @@
 6%5Duint64%0A%7D%0A%0A
+const _C__NSIG = 0x80%0A%0A
 type Signalf
@@ -64064,20 +64064,305 @@
             = 0x5%0A)%0A
+%0Atype CapUserHeader struct %7B%0A%09Version uint32%0A%09Pid     int32%0A%7D%0A%0Atype CapUserData struct %7B%0A%09Effective   uint32%0A%09Permitted   uint32%0A%09Inheritable uint32%0A%7D%0A%0Aconst (%0A%09LINUX_CAPABILITY_VERSION_1 = 0x19980330%0A%09LINUX_CAPABILITY_VERSION_2 = 0x20071026%0A%09LINUX_CAPABILITY_VERSION_3 = 0x20080522%0A)%0A
- f 8afd9bee61a7194acba8750f326c9fd1892858c44899c8b2c56de3cc7f7c1b1e vendor/golang.org/x/sys/unix/ztypes_linux_mipsle.go
+ f 92d6d0beecf89b9e626e829f7240c1b4ee87d3eefc1995bae453f8c081921867 vendor/golang.org/x/sys/unix/ztypes_linux_mipsle.go
dmppatch 7
@@ -15642,24 +15642,47 @@
 2%5Duint32%0A%7D%0A%0A
+const _C__NSIG = 0x80%0A%0A
 type Signalf
@@ -64136,20 +64136,305 @@
             = 0x5%0A)%0A
+%0Atype CapUserHeader struct %7B%0A%09Version uint32%0A%09Pid     int32%0A%7D%0A%0Atype CapUserData struct %7B%0A%09Effective   uint32%0A%09Permitted   uint32%0A%09Inheritable uint32%0A%7D%0A%0Aconst (%0A%09LINUX_CAPABILITY_VERSION_1 = 0x19980330%0A%09LINUX_CAPABILITY_VERSION_2 = 0x20071026%0A%09LINUX_CAPABILITY_VERSION_3 = 0x20080522%0A)%0A
- f 6709a27c9dbd4c00253beb732bd2beff6dda4eb323c4211149ea4d376a6c1285 vendor/golang.org/x/sys/unix/ztypes_linux_ppc64.go
+ f 43ac92dcc58e46e2e5ce637bfa2622918fe4940c315ff82c48be49502de31d4a vendor/golang.org/x/sys/unix/ztypes_linux_ppc64.go
dmppatch 7
@@ -15797,24 +15797,47 @@
 6%5Duint64%0A%7D%0A%0A
+const _C__NSIG = 0x41%0A%0A
 type Signalf
@@ -64229,20 +64229,305 @@
             = 0x5%0A)%0A
+%0Atype CapUserHeader struct %7B%0A%09Version uint32%0A%09Pid     int32%0A%7D%0A%0Atype CapUserData struct %7B%0A%09Effective   uint32%0A%09Permitted   uint32%0A%09Inheritable uint32%0A%7D%0A%0Aconst (%0A%09LINUX_CAPABILITY_VERSION_1 = 0x19980330%0A%09LINUX_CAPABILITY_VERSION_2 = 0x20071026%0A%09LINUX_CAPABILITY_VERSION_3 = 0x20080522%0A)%0A
- f 5062c29c2e4840e01d53b3f7499527360a7177efb67c82904a8ed9d44ac6d97d vendor/golang.org/x/sys/unix/ztypes_linux_ppc64le.go
+ f b5e0b547b4091b967adc8d2686b392a64cd9c3db07ae71e2778dd656982f4d2e vendor/golang.org/x/sys/unix/ztypes_linux_ppc64le.go
dmppatch 7
@@ -15799,24 +15799,47 @@
 6%5Duint64%0A%7D%0A%0A
+const _C__NSIG = 0x41%0A%0A
 type Signalf
@@ -64231,20 +64231,305 @@
             = 0x5%0A)%0A
+%0Atype CapUserHeader struct %7B%0A%09Version uint32%0A%09Pid     int32%0A%7D%0A%0Atype CapUserData struct %7B%0A%09Effective   uint32%0A%09Permitted   uint32%0A%09Inheritable uint32%0A%7D%0A%0Aconst (%0A%09LINUX_CAPABILITY_VERSION_1 = 0x19980330%0A%09LINUX_CAPABILITY_VERSION_2 = 0x20071026%0A%09LINUX_CAPABILITY_VERSION_3 = 0x20080522%0A)%0A
- f d769b7812a759b79cf90cc92ce843f0c00bb397ecef63db94066a7aceeaa32bc vendor/golang.org/x/sys/unix/ztypes_linux_riscv64.go
+ f 812644b5c1bb327185a3ad6770472bfc6307766c46067f467f01ab5c8a6c3359 vendor/golang.org/x/sys/unix/ztypes_linux_riscv64.go
dmppatch 7
@@ -15917,24 +15917,47 @@
 6%5Duint64%0A%7D%0A%0A
+const _C__NSIG = 0x41%0A%0A
 type Signalf
@@ -64345,20 +64345,305 @@
             = 0x5%0A)%0A
+%0Atype CapUserHeader struct %7B%0A%09Version uint32%0A%09Pid     int32%0A%7D%0A%0Atype CapUserData struct %7B%0A%09Effective   uint32%0A%09Permitted   uint32%0A%09Inheritable uint32%0A%7D%0A%0Aconst (%0A%09LINUX_CAPABILITY_VERSION_1 = 0x19980330%0A%09LINUX_CAPABILITY_VERSION_2 = 0x20071026%0A%09LINUX_CAPABILITY_VERSION_3 = 0x20080522%0A)%0A
- f 7a03daf2bf738b526958cb785c1db227076abeb3fc932e9b69ebacaa6f560256 vendor/golang.org/x/sys/unix/ztypes_linux_s390x.go
+ f d3bff5f8f93d19ec6c3e5022d64a4a113144390fb7d427f59db4655b365df382 vendor/golang.org/x/sys/unix/ztypes_linux_s390x.go
dmppatch 7
@@ -16110,24 +16110,47 @@
 6%5Duint64%0A%7D%0A%0A
+const _C__NSIG = 0x41%0A%0A
 type Signalf
@@ -64536,20 +64536,305 @@
             = 0x5%0A)%0A
+%0Atype CapUserHeader struct %7B%0A%09Version uint32%0A%09Pid     int32%0A%7D%0A%0Atype CapUserData struct %7B%0A%09Effective   uint32%0A%09Permitted   uint32%0A%09Inheritable uint32%0A%7D%0A%0Aconst (%0A%09LINUX_CAPABILITY_VERSION_1 = 0x19980330%0A%09LINUX_CAPABILITY_VERSION_2 = 0x20071026%0A%09LINUX_CAPABILITY_VERSION_3 = 0x20080522%0A)%0A
- f a560fabdf6f7b67bf018742a786a72913aa9ffe0e4a717634fe1911d3aabd2ac vendor/golang.org/x/sys/unix/ztypes_linux_sparc64.go
+ f 543f41b55ec4c418ce30e72989fab85211b33fd9f32c7d3df52c2bb023f7bc99 vendor/golang.org/x/sys/unix/ztypes_linux_sparc64.go
dmppatch 7
@@ -15677,24 +15677,47 @@
 6%5Duint64%0A%7D%0A%0A
+const _C__NSIG = 0x41%0A%0A
 type Signalf
@@ -64084,20 +64084,305 @@
             = 0x5%0A)%0A
+%0Atype CapUserHeader struct %7B%0A%09Version uint32%0A%09Pid     int32%0A%7D%0A%0Atype CapUserData struct %7B%0A%09Effective   uint32%0A%09Permitted   uint32%0A%09Inheritable uint32%0A%7D%0A%0Aconst (%0A%09LINUX_CAPABILITY_VERSION_1 = 0x19980330%0A%09LINUX_CAPABILITY_VERSION_2 = 0x20071026%0A%09LINUX_CAPABILITY_VERSION_3 = 0x20080522%0A)%0A
- f 22a3fe99c1a2044d93e4a6108881a8cb7d73e2f56b3b94e10faebdd5e7905cfb vendor/golang.org/x/sys/unix/ztypes_netbsd_386.go
+ f 5f4579f546538132b60fdfa9613dd393a1a7cce23e61e9c748569d69db772ae0 vendor/golang.org/x/sys/unix/ztypes_netbsd_386.go
dmppatch 4
@@ -6065,16 +6065,45 @@
 = -0x64%0A
+%09AT_SYMLINK_FOLLOW   = 0x400%0A
 %09AT_SYML
- f 22a2413656dced26a70a4403ff10267c3e090bdd8e0197d3ad6f8a7399915638 vendor/golang.org/x/sys/unix/ztypes_netbsd_amd64.go
+ f 0ee1da0b6fbb60e57759e1da9262bc8240bbe5b480c0a93da34e43e01e8d80eb vendor/golang.org/x/sys/unix/ztypes_netbsd_amd64.go
dmppatch 4
@@ -6233,16 +6233,45 @@
 = -0x64%0A
+%09AT_SYMLINK_FOLLOW   = 0x400%0A
 %09AT_SYML
- f 38d8f463a66de5233ee4a715843deaf0cd41c30a2f4271ed469ab323003869ed vendor/golang.org/x/sys/unix/ztypes_netbsd_arm.go
+ f c61dff23c96b92b788c3bb8d61e93122f74d7b5f93ea747439baa544f78006a5 vendor/golang.org/x/sys/unix/ztypes_netbsd_arm.go
dmppatch 4
@@ -6192,16 +6192,45 @@
 = -0x64%0A
+%09AT_SYMLINK_FOLLOW   = 0x400%0A
 %09AT_SYML
- f 2ff6e18d51765dc90f47324cd01b2a6b97775e62779e1f8f69ac17c78b58c924 vendor/golang.org/x/sys/unix/ztypes_netbsd_arm64.go
+ f a4f0c0198975b7948dda2fbe43d3bc431027d7138de694a9959a651f3b3a54bc vendor/golang.org/x/sys/unix/ztypes_netbsd_arm64.go
dmppatch 4
@@ -6233,16 +6233,45 @@
 = -0x64%0A
+%09AT_SYMLINK_FOLLOW   = 0x400%0A
 %09AT_SYML
- f 67790a5d80a5bc12d222260cc0b0bbb1482542133cbda6038f710f64404872ab vendor/golang.org/x/sys/unix/ztypes_openbsd_386.go
+ f f17a0d21e5db9acc785fbc700a0395759ba2398888d50a53472a24d6824ec848 vendor/golang.org/x/sys/unix/ztypes_openbsd_386.go
dmppatch 4
@@ -6716,16 +6716,43 @@
 = -0x64%0A
+%09AT_SYMLINK_FOLLOW   = 0x4%0A
 %09AT_SYML
- f 36e61ead16ba85e090c169e5fd1a922628172750cb8cef957607fd007452590f vendor/golang.org/x/sys/unix/ztypes_openbsd_amd64.go
+ f 65c69808ea92ef8510915c2856c237f8eefae71e60326feefb97addefafb007e vendor/golang.org/x/sys/unix/ztypes_openbsd_amd64.go
dmppatch 4
@@ -6596,16 +6596,43 @@
 = -0x64%0A
+%09AT_SYMLINK_FOLLOW   = 0x4%0A
 %09AT_SYML
- f 5f60a22045c8a1aa639d1222da594dc6590354ca922d689350c7447b90e27776 vendor/golang.org/x/sys/unix/ztypes_openbsd_arm.go
+ f 618422436f8659da0da2f792ca8b3779aefd783966ec53fda0af7ef8e837b448 vendor/golang.org/x/sys/unix/ztypes_openbsd_arm.go
dmppatch 4
@@ -6615,16 +6615,43 @@
 = -0x64%0A
+%09AT_SYMLINK_FOLLOW   = 0x4%0A
 %09AT_SYML
- f 93ad0bc473ddf8728d61c9bb12f64f0c8e91d245474b02612cba2603607332fa vendor/golang.org/x/sys/unix/ztypes_openbsd_arm64.go
+ f 90cffdb84cfd9fd2a1cbbe4d4c3c5b6b3d680c3ab83345d11b09bf6896600b45 vendor/golang.org/x/sys/unix/ztypes_openbsd_arm64.go
dmppatch 4
@@ -6496,16 +6496,43 @@
 = -0x64%0A
+%09AT_SYMLINK_FOLLOW   = 0x4%0A
 %09AT_SYML
- f 71a3e258d64c0657dd6b7f16833dd17e08329beffdf1b5aff8f6ea0626ef42d1 vendor/golang.org/x/sys/windows/mkerrors.bash
+ f 804b6eb1e92950f9581554dbc9ac86bd6e8ee9230d5cec1610c8990b2ec7cf0c vendor/golang.org/x/sys/windows/mkerrors.bash
dmppatch 13
@@ -193,75 +193,8 @@
 ob%0A%0A
-%5B%5B $# -eq 1 %5D%5D %7C%7C %7B echo %22Usage: $0 OUTPUT_FILE.go%22 %3E&2; exit 1; %7D%0A
 wine
@@ -411,65 +411,67 @@
 %0A%0A%7B%0A
-%09echo %22// Code generated by 'go generate'; DO NOT EDIT.%22%0A
+%09echo %22// Code generated by 'mkerrors.bash'; DO NOT EDIT.%22%0A
 %09ech
@@ -1738,21 +1738,37 @@
 %22)%22%0A
-%7D %7C gofmt %3E %22$1%22%0A
+%7D %7C gofmt %3E %22zerrors_windows.go%22%0A
- f cd6d264d03e4994d6bcba3edf74e167da40855b0ae5af6edffc3b9a5f4f7a465 vendor/golang.org/x/sys/windows/mkerrors.go
+ f 3b7f6ac42ae1e73aa8d06d4f89f18b91916f153b030e9c01e15d41959b6b5fc6 vendor/golang.org/x/sys/windows/mkknownfolderids.bash
utf8file 28
#!/bin/bash

# Copyright 2019 The Go Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

set -e
shopt -s nullglob

knownfolders="$(printf '%s\n' "/mnt/c/Program Files (x86)/Windows Kits/"/*/Include/*/um/KnownFolders.h | sort -Vr | head -n 1)"
[[ -n $knownfolders ]] || { echo "Unable to find KnownFolders.h" >&2; exit 1; }

{
	echo "// Code generated by 'mkknownfolderids.bash'; DO NOT EDIT."
	echo
	echo "package windows"
	echo "type KNOWNFOLDERID GUID"
	echo "var ("
	while read -r line; do
		[[ $line =~ DEFINE_KNOWN_FOLDER\((FOLDERID_[^,]+),[\t\ ]*(0x[^,]+),[\t\ ]*(0x[^,]+),[\t\ ]*(0x[^,]+),[\t\ ]*(0x[^,]+),[\t\ ]*(0x[^,]+),[\t\ ]*(0x[^,]+),[\t\ ]*(0x[^,]+),[\t\ ]*(0x[^,]+),[\t\ ]*(0x[^,]+),[\t\ ]*(0x[^,]+),[\t\ ]*(0x[^,]+)\) ]] || continue
		printf "%s = &KNOWNFOLDERID{0x%08x, 0x%04x, 0x%04x, [8]byte{0x%02x, 0x%02x, 0x%02x, 0x%02x, 0x%02x, 0x%02x, 0x%02x, 0x%02x}}\n" \
			"${BASH_REMATCH[1]}" $(( "${BASH_REMATCH[2]}" )) $(( "${BASH_REMATCH[3]}" )) $(( "${BASH_REMATCH[4]}" )) \
			$(( "${BASH_REMATCH[5]}" )) $(( "${BASH_REMATCH[6]}" )) $(( "${BASH_REMATCH[7]}" )) $(( "${BASH_REMATCH[8]}" )) \
			$(( "${BASH_REMATCH[9]}" )) $(( "${BASH_REMATCH[10]}" )) $(( "${BASH_REMATCH[11]}" )) $(( "${BASH_REMATCH[12]}" ))
	done < "$knownfolders"
	echo ")"
} | gofmt > "zknownfolderids_windows.go"

- f aef684db186bfd41d098db3958ece30721599eeda376ed59b68137ed89aa8e42 vendor/golang.org/x/sys/windows/security_windows.go
+ f a9adc0a50a1ab7024901db96f4595f81508a36562e0f299fbd3eff455edd896a vendor/golang.org/x/sys/windows/security_windows.go
dmppatch 10
@@ -21578,40 +21578,312 @@
 t32%0A
-%09Groups     %5B1%5DSIDAndAttributes%0A
+%09Groups     %5B1%5DSIDAndAttributes // Use AllGroups() for iterating.%0A%7D%0A%0A// AllGroups returns a slice that can be used to iterate over the groups in g.%0Afunc (g *Tokengroups) AllGroups() %5B%5DSIDAndAttributes %7B%0A%09return (*%5B(1 %3C%3C 28) - 1%5DSIDAndAttributes)(unsafe.Pointer(&g.Groups%5B0%5D))%5B:g.GroupCount:g.GroupCount%5D%0A
 %7D%0A%0At
@@ -21938,45 +21938,351 @@
 t32%0A
-%09Privileges     %5B1%5DLUIDAndAttributes%0A
+%09Privileges     %5B1%5DLUIDAndAttributes // Use AllPrivileges() for iterating.%0A%7D%0A%0A// AllPrivileges returns a slice that can be used to iterate over the privileges in p.%0Afunc (p *Tokenprivileges) AllPrivileges() %5B%5DLUIDAndAttributes %7B%0A%09return (*%5B(1 %3C%3C 27) - 1%5DLUIDAndAttributes)(unsafe.Pointer(&p.Privileges%5B0%5D))%5B:p.PrivilegeCount:p.PrivilegeCount%5D%0A
 %7D%0A%0At
- f 4285b51fdde303dfc090e6e70a54f8b0ec93fd14f154ea427c5a0d7ca2e9705d vendor/golang.org/x/sys/windows/service.go
+ f d146ca684597768e69be9b0a1c43846764f23555fd8d7987cb7df2e94550e1b6 vendor/golang.org/x/sys/windows/service.go
dmppatch 8
@@ -6146,16 +6146,123 @@
 nt32%0A%7D%0A%0A
+type QUERY_SERVICE_LOCK_STATUS struct %7B%0A%09IsLocked     uint32%0A%09LockOwner    *uint16%0A%09LockDuration uint32%0A%7D%0A%0A
 //sys%09Cl
@@ -7083,24 +7083,188 @@
 rviceStatus%0A
+//sys%09QueryServiceLockStatus(mgr Handle, lockStatus *QUERY_SERVICE_LOCK_STATUS, bufSize uint32, bytesNeeded *uint32) (err error) = advapi32.QueryServiceLockStatusW%0A
 //sys%09Contro
- f 603f876d29ef9a4dad84ba1581ac2ffd566c927d865e597c979f95e6b06a2119 vendor/golang.org/x/sys/windows/syscall_windows.go
+ f fc842c05aa5cad71b2839bb3f316aef167ddb8f6ef2d99652d4b593bb470f8ce vendor/golang.org/x/sys/windows/syscall_windows.go
dmppatch 46
@@ -244,16 +244,24 @@
 yscall%22%0A
+%09%22time%22%0A
 %09%22unicod
@@ -7960,96 +7960,113 @@
 ssW%0A
-//sys%09OpenProcess(da uint32, inheritHandle bool, pid uint32) (handle Handle, err error)%0A
+//sys%09OpenProcess(desiredAccess uint32, inheritHandle bool, processId uint32) (handle Handle, err error)%0A
 //sy
@@ -8199,16 +8199,147 @@
 xecuteW%0A
+//sys%09shGetKnownFolderPath(id *KNOWNFOLDERID, flags uint32, token Token, path **uint16) (ret error) = shell32.SHGetKnownFolderPath%0A
 //sys%09Te
@@ -10546,24 +10546,85 @@
 onmentBlock%0A
+//sys%09getTickCount64() (ms uint64) = kernel32.GetTickCount64%0A
 //sys%09SetFil
@@ -15569,80 +15569,80 @@
 ExW%0A
-//sys%09getCurrentProcessId() (pid uint32) = kernel32.GetCurrentProcessId%0A
+//sys%09GetCurrentProcessId() (pid uint32) = kernel32.GetCurrentProcessId%0A
 //sy
@@ -16566,24 +16566,177 @@
 cess32NextW%0A
+//sys%09Thread32First(snapshot Handle, threadEntry *ThreadEntry32) (err error)%0A//sys%09Thread32Next(snapshot Handle, threadEntry *ThreadEntry32) (err error)%0A
 //sys%09Device
@@ -18507,16 +18507,615 @@
 eThread%0A
+//sys%09SetPriorityClass(process Handle, priorityClass uint32) (err error) = kernel32.SetPriorityClass%0A//sys%09GetPriorityClass(process Handle) (ret uint32, err error) = kernel32.GetPriorityClass%0A//sys%09SetInformationJobObject(job Handle, JobObjectInformationClass uint32, JobObjectInformation uintptr, JobObjectInformationLength uint32) (ret int, err error)%0A//sys%09GenerateConsoleCtrlEvent(ctrlEvent uint32, processGroupID uint32) (err error)%0A//sys%09GetProcessId(process Handle) (id uint32, err error)%0A//sys%09OpenThread(desiredAccess uint32, inheritHandle bool, threadId uint32) (handle Handle, err error)%0A
 %0A// Volu
@@ -21805,16 +21805,411 @@
 ageBoxW%0A
+//sys%09clsidFromString(lpsz *uint16, pclsid *GUID) (ret error) = ole32.CLSIDFromString%0A//sys%09stringFromGUID2(rguid *GUID, lpsz *uint16, cchMax int32) (chars int32) = ole32.StringFromGUID2%0A//sys%09coCreateGuid(pguid *GUID) (ret error) = ole32.CoCreateGuid%0A//sys%09CoTaskMemFree(address unsafe.Pointer) = ole32.CoTaskMemFree%0A//sys%09rtlGetVersion(info *OsVersionInfoEx) (ret error) = ntdll.RtlGetVersion%0A
 %0A// sysc
@@ -26883,32 +26883,135 @@
 e(b%5B0:n%5D)), nil%0A
+%7D%0A%0Afunc DurationSinceBoot() time.Duration %7B%0A%09return time.Duration(getTickCount64()) * time.Millisecond%0A
 %7D%0A%0Afunc Ftruncat
@@ -46063,70 +46063,70 @@
 %0A%7D%0A%0A
-func Getpid() (pid int) %7B return int(getCurrentProcessId()) %7D%0A
+func Getpid() (pid int) %7B return int(GetCurrentProcessId()) %7D%0A
 %0Afun
@@ -50231,16 +50231,2214 @@
 return n, nil%0A%7D%0A
+%0A// GUIDFromString parses a string in the form of%0A// %22%7BXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX%7D%22 into a GUID.%0Afunc GUIDFromString(str string) (GUID, error) %7B%0A%09guid := GUID%7B%7D%0A%09str16, err := syscall.UTF16PtrFromString(str)%0A%09if err != nil %7B%0A%09%09return guid, err%0A%09%7D%0A%09err = clsidFromString(str16, &guid)%0A%09if err != nil %7B%0A%09%09return guid, err%0A%09%7D%0A%09return guid, nil%0A%7D%0A%0A// GenerateGUID creates a new random GUID.%0Afunc GenerateGUID() (GUID, error) %7B%0A%09guid := GUID%7B%7D%0A%09err := coCreateGuid(&guid)%0A%09if err != nil %7B%0A%09%09return guid, err%0A%09%7D%0A%09return guid, nil%0A%7D%0A%0A// String returns the canonical string form of the GUID,%0A// in the form of %22%7BXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX%7D%22.%0Afunc (guid GUID) String() string %7B%0A%09var str %5B100%5Duint16%0A%09chars := stringFromGUID2(&guid, &str%5B0%5D, int32(len(str)))%0A%09if chars %3C= 1 %7B%0A%09%09return %22%22%0A%09%7D%0A%09return string(utf16.Decode(str%5B:chars-1%5D))%0A%7D%0A%0A// KnownFolderPath returns a well-known folder path for the current user, specified by one of%0A// the FOLDERID_ constants, and chosen and optionally created based on a KF_ flag.%0Afunc KnownFolderPath(folderID *KNOWNFOLDERID, flags uint32) (string, error) %7B%0A%09return Token(0).KnownFolderPath(folderID, flags)%0A%7D%0A%0A// KnownFolderPath returns a well-known folder path for the user token, specified by one of%0A// the FOLDERID_ constants, and chosen and optionally created based on a KF_ flag.%0Afunc (t Token) KnownFolderPath(folderID *KNOWNFOLDERID, flags uint32) (string, error) %7B%0A%09var p *uint16%0A%09err := shGetKnownFolderPath(folderID, flags, t, &p)%0A%09if err != nil %7B%0A%09%09return %22%22, err%0A%09%7D%0A%09defer CoTaskMemFree(unsafe.Pointer(p))%0A%09return UTF16ToString((*%5B(1 %3C%3C 30) - 1%5Duint16)(unsafe.Pointer(p))%5B:%5D), nil%0A%7D%0A%0A// RtlGetVersion returns the true version of the underlying operating system, ignoring%0A// any manifesting or compatibility layers on top of the win32 layer.%0Afunc RtlGetVersion() *OsVersionInfoEx %7B%0A%09info := &OsVersionInfoEx%7B%7D%0A%09info.osVersionInfoSize = uint32(unsafe.Sizeof(*info))%0A%09// According to documentation, this function always succeeds.%0A%09// The function doesn't even check the validity of the%0A%09// osVersionInfoSize member. Disassembling ntdll.dll indicates%0A%09// that the documentation is indeed correct about that.%0A%09_ = rtlGetVersion(info)%0A%09return info%0A%7D%0A
- f a9549e814320aa2430d7f1a123bd3cbde240aabde0e40b6a5bc210bbb8f02f83 vendor/golang.org/x/sys/windows/types_windows.go
+ f 0b68f99a1262bd81ea2663abd281178f4398f85e7227e473ee524ceed69a81ef vendor/golang.org/x/sys/windows/types_windows.go
dmppatch 20
@@ -4308,119 +4308,1235 @@
 FF%0A%0A
-%09PROCESS_TERMINATE         = 1%0A%09PROCESS_QUERY_INFORMATION = 0x00000400%0A%09SYNCHRONIZE               = 0x00100000%0A
+%09// Standard access rights.%0A%09DELETE       = 0x00010000%0A%09READ_CONTROL = 0x00020000%0A%09SYNCHRONIZE  = 0x00100000%0A%09WRITE_DAC    = 0x00040000%0A%09WRITE_OWNER  = 0x00080000%0A%0A%09// Access rights for process.%0A%09PROCESS_CREATE_PROCESS            = 0x0080%0A%09PROCESS_CREATE_THREAD             = 0x0002%0A%09PROCESS_DUP_HANDLE                = 0x0040%0A%09PROCESS_QUERY_INFORMATION         = 0x0400%0A%09PROCESS_QUERY_LIMITED_INFORMATION = 0x1000%0A%09PROCESS_SET_INFORMATION           = 0x0200%0A%09PROCESS_SET_QUOTA                 = 0x0100%0A%09PROCESS_SUSPEND_RESUME            = 0x0800%0A%09PROCESS_TERMINATE                 = 0x0001%0A%09PROCESS_VM_OPERATION              = 0x0008%0A%09PROCESS_VM_READ                   = 0x0010%0A%09PROCESS_VM_WRITE                  = 0x0020%0A%0A%09// Access rights for thread.%0A%09THREAD_DIRECT_IMPERSONATION      = 0x0200%0A%09THREAD_GET_CONTEXT               = 0x0008%0A%09THREAD_IMPERSONATE               = 0x0100%0A%09THREAD_QUERY_INFORMATION         = 0x0040%0A%09THREAD_QUERY_LIMITED_INFORMATION = 0x0800%0A%09THREAD_SET_CONTEXT               = 0x0010%0A%09THREAD_SET_INFORMATION           = 0x0020%0A%09THREAD_SET_LIMITED_INFORMATION   = 0x0400%0A%09THREAD_SET_THREAD_TOKEN          = 0x0080%0A%09THREAD_SUSPEND_RESUME            = 0x0002%0A%09THREAD_TERMINATE                 = 0x0001%0A
 %0A%09FI
@@ -15722,16 +15722,399 @@
 x8000%0A)%0A
+%0Aconst (%0A%09// Priority class.%0A%09ABOVE_NORMAL_PRIORITY_CLASS   = 0x00008000%0A%09BELOW_NORMAL_PRIORITY_CLASS   = 0x00004000%0A%09HIGH_PRIORITY_CLASS           = 0x00000080%0A%09IDLE_PRIORITY_CLASS           = 0x00000040%0A%09NORMAL_PRIORITY_CLASS         = 0x00000020%0A%09PROCESS_MODE_BACKGROUND_BEGIN = 0x00100000%0A%09PROCESS_MODE_BACKGROUND_END   = 0x00200000%0A%09REALTIME_PRIORITY_CLASS       = 0x00000100%0A)%0A
 %0Avar (%0A%09
@@ -20281,24 +20281,24 @@
 ZE   = 11%0A)%0A
-
 %0Atype Startu
@@ -21092,32 +21092,222 @@
 MAX_PATH%5Duint16%0A
+%7D%0A%0Atype ThreadEntry32 struct %7B%0A%09Size           uint32%0A%09Usage          uint32%0A%09ThreadID       uint32%0A%09OwnerProcessID uint32%0A%09BasePri        int32%0A%09DeltaPri       int32%0A%09Flags          uint32%0A
 %7D%0A%0Atype Systemti
@@ -42044,8 +42044,4163 @@
 funix.h%0A
+%0Aconst (%0A%09// flags for JOBOBJECT_BASIC_LIMIT_INFORMATION.LimitFlags%0A%09JOB_OBJECT_LIMIT_ACTIVE_PROCESS             = 0x00000008%0A%09JOB_OBJECT_LIMIT_AFFINITY                   = 0x00000010%0A%09JOB_OBJECT_LIMIT_BREAKAWAY_OK               = 0x00000800%0A%09JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION = 0x00000400%0A%09JOB_OBJECT_LIMIT_JOB_MEMORY                 = 0x00000200%0A%09JOB_OBJECT_LIMIT_JOB_TIME                   = 0x00000004%0A%09JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE          = 0x00002000%0A%09JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME          = 0x00000040%0A%09JOB_OBJECT_LIMIT_PRIORITY_CLASS             = 0x00000020%0A%09JOB_OBJECT_LIMIT_PROCESS_MEMORY             = 0x00000100%0A%09JOB_OBJECT_LIMIT_PROCESS_TIME               = 0x00000002%0A%09JOB_OBJECT_LIMIT_SCHEDULING_CLASS           = 0x00000080%0A%09JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK        = 0x00001000%0A%09JOB_OBJECT_LIMIT_SUBSET_AFFINITY            = 0x00004000%0A%09JOB_OBJECT_LIMIT_WORKINGSET                 = 0x00000001%0A)%0A%0Atype JOBOBJECT_BASIC_LIMIT_INFORMATION struct %7B%0A%09PerProcessUserTimeLimit int64%0A%09PerJobUserTimeLimit     int64%0A%09LimitFlags              uint32%0A%09MinimumWorkingSetSize   uintptr%0A%09MaximumWorkingSetSize   uintptr%0A%09ActiveProcessLimit      uint32%0A%09Affinity                uintptr%0A%09PriorityClass           uint32%0A%09SchedulingClass         uint32%0A%7D%0A%0Atype IO_COUNTERS struct %7B%0A%09ReadOperationCount  uint64%0A%09WriteOperationCount uint64%0A%09OtherOperationCount uint64%0A%09ReadTransferCount   uint64%0A%09WriteTransferCount  uint64%0A%09OtherTransferCount  uint64%0A%7D%0A%0Atype JOBOBJECT_EXTENDED_LIMIT_INFORMATION struct %7B%0A%09BasicLimitInformation JOBOBJECT_BASIC_LIMIT_INFORMATION%0A%09IoInfo                IO_COUNTERS%0A%09ProcessMemoryLimit    uintptr%0A%09JobMemoryLimit        uintptr%0A%09PeakProcessMemoryUsed uintptr%0A%09PeakJobMemoryUsed     uintptr%0A%7D%0A%0Aconst (%0A%09// UIRestrictionsClass%0A%09JOB_OBJECT_UILIMIT_DESKTOP          = 0x00000040%0A%09JOB_OBJECT_UILIMIT_DISPLAYSETTINGS  = 0x00000010%0A%09JOB_OBJECT_UILIMIT_EXITWINDOWS      = 0x00000080%0A%09JOB_OBJECT_UILIMIT_GLOBALATOMS      = 0x00000020%0A%09JOB_OBJECT_UILIMIT_HANDLES          = 0x00000001%0A%09JOB_OBJECT_UILIMIT_READCLIPBOARD    = 0x00000002%0A%09JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS = 0x00000008%0A%09JOB_OBJECT_UILIMIT_WRITECLIPBOARD   = 0x00000004%0A)%0A%0Atype JOBOBJECT_BASIC_UI_RESTRICTIONS struct %7B%0A%09UIRestrictionsClass uint32%0A%7D%0A%0Aconst (%0A%09// JobObjectInformationClass%0A%09JobObjectAssociateCompletionPortInformation = 7%0A%09JobObjectBasicLimitInformation              = 2%0A%09JobObjectBasicUIRestrictions                = 4%0A%09JobObjectCpuRateControlInformation          = 15%0A%09JobObjectEndOfJobTimeInformation            = 6%0A%09JobObjectExtendedLimitInformation           = 9%0A%09JobObjectGroupInformation                   = 11%0A%09JobObjectGroupInformationEx                 = 14%0A%09JobObjectLimitViolationInformation2         = 35%0A%09JobObjectNetRateControlInformation          = 32%0A%09JobObjectNotificationLimitInformation       = 12%0A%09JobObjectNotificationLimitInformation2      = 34%0A%09JobObjectSecurityLimitInformation           = 5%0A)%0A%0Aconst (%0A%09KF_FLAG_DEFAULT                          = 0x00000000%0A%09KF_FLAG_FORCE_APP_DATA_REDIRECTION       = 0x00080000%0A%09KF_FLAG_RETURN_FILTER_REDIRECTION_TARGET = 0x00040000%0A%09KF_FLAG_FORCE_PACKAGE_REDIRECTION        = 0x00020000%0A%09KF_FLAG_NO_PACKAGE_REDIRECTION           = 0x00010000%0A%09KF_FLAG_FORCE_APPCONTAINER_REDIRECTION   = 0x00020000%0A%09KF_FLAG_NO_APPCONTAINER_REDIRECTION      = 0x00010000%0A%09KF_FLAG_CREATE                           = 0x00008000%0A%09KF_FLAG_DONT_VERIFY                      = 0x00004000%0A%09KF_FLAG_DONT_UNEXPAND                    = 0x00002000%0A%09KF_FLAG_NO_ALIAS                         = 0x00001000%0A%09KF_FLAG_INIT                             = 0x00000800%0A%09KF_FLAG_DEFAULT_PATH                     = 0x00000400%0A%09KF_FLAG_NOT_PARENT_RELATIVE              = 0x00000200%0A%09KF_FLAG_SIMPLE_IDLIST                    = 0x00000100%0A%09KF_FLAG_ALIAS_ONLY                       = 0x80000000%0A)%0A%0Atype OsVersionInfoEx struct %7B%0A%09osVersionInfoSize uint32%0A%09MajorVersion      uint32%0A%09MinorVersion      uint32%0A%09BuildNumber       uint32%0A%09PlatformId        uint32%0A%09CsdVersion        %5B128%5Duint16%0A%09ServicePackMajor  uint16%0A%09ServicePackMinor  uint16%0A%09SuiteMask         uint16%0A%09ProductType       byte%0A%09_                 byte%0A%7D%0A
- f f2295cca07ef7a09229f74cdd79a7365067dc413b90f27b0580feb5962474a19 vendor/golang.org/x/sys/windows/zerrors_windows.go
+ f 7e8a3410b5b555b95f5fe31a52c32aff856bbd8ec3980ede5eb6195aa1e428e8 vendor/golang.org/x/sys/windows/zerrors_windows.go
dmppatch 4
@@ -1,53 +1,55 @@
-// Code generated by 'go generate'; DO NOT EDIT.%0A
+// Code generated by 'mkerrors.bash'; DO NOT EDIT.%0A
 %0Apac
+ f 3815bbaa8adf5400041954decc56e8889eb56eb20bfc30053e7799703af0fc95 vendor/golang.org/x/sys/windows/zknownfolderids_windows.go
utf8file 150
// Code generated by 'mkknownfolderids.bash'; DO NOT EDIT.

package windows

type KNOWNFOLDERID GUID

var (
	FOLDERID_NetworkFolder          = &KNOWNFOLDERID{0xd20beec4, 0x5ca8, 0x4905, [8]byte{0xae, 0x3b, 0xbf, 0x25, 0x1e, 0xa0, 0x9b, 0x53}}
	FOLDERID_ComputerFolder         = &KNOWNFOLDERID{0x0ac0837c, 0xbbf8, 0x452a, [8]byte{0x85, 0x0d, 0x79, 0xd0, 0x8e, 0x66, 0x7c, 0xa7}}
	FOLDERID_InternetFolder         = &KNOWNFOLDERID{0x4d9f7874, 0x4e0c, 0x4904, [8]byte{0x96, 0x7b, 0x40, 0xb0, 0xd2, 0x0c, 0x3e, 0x4b}}
	FOLDERID_ControlPanelFolder     = &KNOWNFOLDERID{0x82a74aeb, 0xaeb4, 0x465c, [8]byte{0xa0, 0x14, 0xd0, 0x97, 0xee, 0x34, 0x6d, 0x63}}
	FOLDERID_PrintersFolder         = &KNOWNFOLDERID{0x76fc4e2d, 0xd6ad, 0x4519, [8]byte{0xa6, 0x63, 0x37, 0xbd, 0x56, 0x06, 0x81, 0x85}}
	FOLDERID_SyncManagerFolder      = &KNOWNFOLDERID{0x43668bf8, 0xc14e, 0x49b2, [8]byte{0x97, 0xc9, 0x74, 0x77, 0x84, 0xd7, 0x84, 0xb7}}
	FOLDERID_SyncSetupFolder        = &KNOWNFOLDERID{0x0f214138, 0xb1d3, 0x4a90, [8]byte{0xbb, 0xa9, 0x27, 0xcb, 0xc0, 0xc5, 0x38, 0x9a}}
	FOLDERID_ConflictFolder         = &KNOWNFOLDERID{0x4bfefb45, 0x347d, 0x4006, [8]byte{0xa5, 0xbe, 0xac, 0x0c, 0xb0, 0x56, 0x71, 0x92}}
	FOLDERID_SyncResultsFolder      = &KNOWNFOLDERID{0x289a9a43, 0xbe44, 0x4057, [8]byte{0xa4, 0x1b, 0x58, 0x7a, 0x76, 0xd7, 0xe7, 0xf9}}
	FOLDERID_RecycleBinFolder       = &KNOWNFOLDERID{0xb7534046, 0x3ecb, 0x4c18, [8]byte{0xbe, 0x4e, 0x64, 0xcd, 0x4c, 0xb7, 0xd6, 0xac}}
	FOLDERID_ConnectionsFolder      = &KNOWNFOLDERID{0x6f0cd92b, 0x2e97, 0x45d1, [8]byte{0x88, 0xff, 0xb0, 0xd1, 0x86, 0xb8, 0xde, 0xdd}}
	FOLDERID_Fonts                  = &KNOWNFOLDERID{0xfd228cb7, 0xae11, 0x4ae3, [8]byte{0x86, 0x4c, 0x16, 0xf3, 0x91, 0x0a, 0xb8, 0xfe}}
	FOLDERID_Desktop                = &KNOWNFOLDERID{0xb4bfcc3a, 0xdb2c, 0x424c, [8]byte{0xb0, 0x29, 0x7f, 0xe9, 0x9a, 0x87, 0xc6, 0x41}}
	FOLDERID_Startup                = &KNOWNFOLDERID{0xb97d20bb, 0xf46a, 0x4c97, [8]byte{0xba, 0x10, 0x5e, 0x36, 0x08, 0x43, 0x08, 0x54}}
	FOLDERID_Programs               = &KNOWNFOLDERID{0xa77f5d77, 0x2e2b, 0x44c3, [8]byte{0xa6, 0xa2, 0xab, 0xa6, 0x01, 0x05, 0x4a, 0x51}}
	FOLDERID_StartMenu              = &KNOWNFOLDERID{0x625b53c3, 0xab48, 0x4ec1, [8]byte{0xba, 0x1f, 0xa1, 0xef, 0x41, 0x46, 0xfc, 0x19}}
	FOLDERID_Recent                 = &KNOWNFOLDERID{0xae50c081, 0xebd2, 0x438a, [8]byte{0x86, 0x55, 0x8a, 0x09, 0x2e, 0x34, 0x98, 0x7a}}
	FOLDERID_SendTo                 = &KNOWNFOLDERID{0x8983036c, 0x27c0, 0x404b, [8]byte{0x8f, 0x08, 0x10, 0x2d, 0x10, 0xdc, 0xfd, 0x74}}
	FOLDERID_Documents              = &KNOWNFOLDERID{0xfdd39ad0, 0x238f, 0x46af, [8]byte{0xad, 0xb4, 0x6c, 0x85, 0x48, 0x03, 0x69, 0xc7}}
	FOLDERID_Favorites              = &KNOWNFOLDERID{0x1777f761, 0x68ad, 0x4d8a, [8]byte{0x87, 0xbd, 0x30, 0xb7, 0x59, 0xfa, 0x33, 0xdd}}
	FOLDERID_NetHood                = &KNOWNFOLDERID{0xc5abbf53, 0xe17f, 0x4121, [8]byte{0x89, 0x00, 0x86, 0x62, 0x6f, 0xc2, 0xc9, 0x73}}
	FOLDERID_PrintHood              = &KNOWNFOLDERID{0x9274bd8d, 0xcfd1, 0x41c3, [8]byte{0xb3, 0x5e, 0xb1, 0x3f, 0x55, 0xa7, 0x58, 0xf4}}
	FOLDERID_Templates              = &KNOWNFOLDERID{0xa63293e8, 0x664e, 0x48db, [8]byte{0xa0, 0x79, 0xdf, 0x75, 0x9e, 0x05, 0x09, 0xf7}}
	FOLDERID_CommonStartup          = &KNOWNFOLDERID{0x82a5ea35, 0xd9cd, 0x47c5, [8]byte{0x96, 0x29, 0xe1, 0x5d, 0x2f, 0x71, 0x4e, 0x6e}}
	FOLDERID_CommonPrograms         = &KNOWNFOLDERID{0x0139d44e, 0x6afe, 0x49f2, [8]byte{0x86, 0x90, 0x3d, 0xaf, 0xca, 0xe6, 0xff, 0xb8}}
	FOLDERID_CommonStartMenu        = &KNOWNFOLDERID{0xa4115719, 0xd62e, 0x491d, [8]byte{0xaa, 0x7c, 0xe7, 0x4b, 0x8b, 0xe3, 0xb0, 0x67}}
	FOLDERID_PublicDesktop          = &KNOWNFOLDERID{0xc4aa340d, 0xf20f, 0x4863, [8]byte{0xaf, 0xef, 0xf8, 0x7e, 0xf2, 0xe6, 0xba, 0x25}}
	FOLDERID_ProgramData            = &KNOWNFOLDERID{0x62ab5d82, 0xfdc1, 0x4dc3, [8]byte{0xa9, 0xdd, 0x07, 0x0d, 0x1d, 0x49, 0x5d, 0x97}}
	FOLDERID_CommonTemplates        = &KNOWNFOLDERID{0xb94237e7, 0x57ac, 0x4347, [8]byte{0x91, 0x51, 0xb0, 0x8c, 0x6c, 0x32, 0xd1, 0xf7}}
	FOLDERID_PublicDocuments        = &KNOWNFOLDERID{0xed4824af, 0xdce4, 0x45a8, [8]byte{0x81, 0xe2, 0xfc, 0x79, 0x65, 0x08, 0x36, 0x34}}
	FOLDERID_RoamingAppData         = &KNOWNFOLDERID{0x3eb685db, 0x65f9, 0x4cf6, [8]byte{0xa0, 0x3a, 0xe3, 0xef, 0x65, 0x72, 0x9f, 0x3d}}
	FOLDERID_LocalAppData           = &KNOWNFOLDERID{0xf1b32785, 0x6fba, 0x4fcf, [8]byte{0x9d, 0x55, 0x7b, 0x8e, 0x7f, 0x15, 0x70, 0x91}}
	FOLDERID_LocalAppDataLow        = &KNOWNFOLDERID{0xa520a1a4, 0x1780, 0x4ff6, [8]byte{0xbd, 0x18, 0x16, 0x73, 0x43, 0xc5, 0xaf, 0x16}}
	FOLDERID_InternetCache          = &KNOWNFOLDERID{0x352481e8, 0x33be, 0x4251, [8]byte{0xba, 0x85, 0x60, 0x07, 0xca, 0xed, 0xcf, 0x9d}}
	FOLDERID_Cookies                = &KNOWNFOLDERID{0x2b0f765d, 0xc0e9, 0x4171, [8]byte{0x90, 0x8e, 0x08, 0xa6, 0x11, 0xb8, 0x4f, 0xf6}}
	FOLDERID_History                = &KNOWNFOLDERID{0xd9dc8a3b, 0xb784, 0x432e, [8]byte{0xa7, 0x81, 0x5a, 0x11, 0x30, 0xa7, 0x59, 0x63}}
	FOLDERID_System                 = &KNOWNFOLDERID{0x1ac14e77, 0x02e7, 0x4e5d, [8]byte{0xb7, 0x44, 0x2e, 0xb1, 0xae, 0x51, 0x98, 0xb7}}
	FOLDERID_SystemX86              = &KNOWNFOLDERID{0xd65231b0, 0xb2f1, 0x4857, [8]byte{0xa4, 0xce, 0xa8, 0xe7, 0xc6, 0xea, 0x7d, 0x27}}
	FOLDERID_Windows                = &KNOWNFOLDERID{0xf38bf404, 0x1d43, 0x42f2, [8]byte{0x93, 0x05, 0x67, 0xde, 0x0b, 0x28, 0xfc, 0x23}}
	FOLDERID_Profile                = &KNOWNFOLDERID{0x5e6c858f, 0x0e22, 0x4760, [8]byte{0x9a, 0xfe, 0xea, 0x33, 0x17, 0xb6, 0x71, 0x73}}
	FOLDERID_Pictures               = &KNOWNFOLDERID{0x33e28130, 0x4e1e, 0x4676, [8]byte{0x83, 0x5a, 0x98, 0x39, 0x5c, 0x3b, 0xc3, 0xbb}}
	FOLDERID_ProgramFilesX86        = &KNOWNFOLDERID{0x7c5a40ef, 0xa0fb, 0x4bfc, [8]byte{0x87, 0x4a, 0xc0, 0xf2, 0xe0, 0xb9, 0xfa, 0x8e}}
	FOLDERID_ProgramFilesCommonX86  = &KNOWNFOLDERID{0xde974d24, 0xd9c6, 0x4d3e, [8]byte{0xbf, 0x91, 0xf4, 0x45, 0x51, 0x20, 0xb9, 0x17}}
	FOLDERID_ProgramFilesX64        = &KNOWNFOLDERID{0x6d809377, 0x6af0, 0x444b, [8]byte{0x89, 0x57, 0xa3, 0x77, 0x3f, 0x02, 0x20, 0x0e}}
	FOLDERID_ProgramFilesCommonX64  = &KNOWNFOLDERID{0x6365d5a7, 0x0f0d, 0x45e5, [8]byte{0x87, 0xf6, 0x0d, 0xa5, 0x6b, 0x6a, 0x4f, 0x7d}}
	FOLDERID_ProgramFiles           = &KNOWNFOLDERID{0x905e63b6, 0xc1bf, 0x494e, [8]byte{0xb2, 0x9c, 0x65, 0xb7, 0x32, 0xd3, 0xd2, 0x1a}}
	FOLDERID_ProgramFilesCommon     = &KNOWNFOLDERID{0xf7f1ed05, 0x9f6d, 0x47a2, [8]byte{0xaa, 0xae, 0x29, 0xd3, 0x17, 0xc6, 0xf0, 0x66}}
	FOLDERID_UserProgramFiles       = &KNOWNFOLDERID{0x5cd7aee2, 0x2219, 0x4a67, [8]byte{0xb8, 0x5d, 0x6c, 0x9c, 0xe1, 0x56, 0x60, 0xcb}}
	FOLDERID_UserProgramFilesCommon = &KNOWNFOLDERID{0xbcbd3057, 0xca5c, 0x4622, [8]byte{0xb4, 0x2d, 0xbc, 0x56, 0xdb, 0x0a, 0xe5, 0x16}}
	FOLDERID_AdminTools             = &KNOWNFOLDERID{0x724ef170, 0xa42d, 0x4fef, [8]byte{0x9f, 0x26, 0xb6, 0x0e, 0x84, 0x6f, 0xba, 0x4f}}
	FOLDERID_CommonAdminTools       = &KNOWNFOLDERID{0xd0384e7d, 0xbac3, 0x4797, [8]byte{0x8f, 0x14, 0xcb, 0xa2, 0x29, 0xb3, 0x92, 0xb5}}
	FOLDERID_Music                  = &KNOWNFOLDERID{0x4bd8d571, 0x6d19, 0x48d3, [8]byte{0xbe, 0x97, 0x42, 0x22, 0x20, 0x08, 0x0e, 0x43}}
	FOLDERID_Videos                 = &KNOWNFOLDERID{0x18989b1d, 0x99b5, 0x455b, [8]byte{0x84, 0x1c, 0xab, 0x7c, 0x74, 0xe4, 0xdd, 0xfc}}
	FOLDERID_Ringtones              = &KNOWNFOLDERID{0xc870044b, 0xf49e, 0x4126, [8]byte{0xa9, 0xc3, 0xb5, 0x2a, 0x1f, 0xf4, 0x11, 0xe8}}
	FOLDERID_PublicPictures         = &KNOWNFOLDERID{0xb6ebfb86, 0x6907, 0x413c, [8]byte{0x9a, 0xf7, 0x4f, 0xc2, 0xab, 0xf0, 0x7c, 0xc5}}
	FOLDERID_PublicMusic            = &KNOWNFOLDERID{0x3214fab5, 0x9757, 0x4298, [8]byte{0xbb, 0x61, 0x92, 0xa9, 0xde, 0xaa, 0x44, 0xff}}
	FOLDERID_PublicVideos           = &KNOWNFOLDERID{0x2400183a, 0x6185, 0x49fb, [8]byte{0xa2, 0xd8, 0x4a, 0x39, 0x2a, 0x60, 0x2b, 0xa3}}
	FOLDERID_PublicRingtones        = &KNOWNFOLDERID{0xe555ab60, 0x153b, 0x4d17, [8]byte{0x9f, 0x04, 0xa5, 0xfe, 0x99, 0xfc, 0x15, 0xec}}
	FOLDERID_ResourceDir            = &KNOWNFOLDERID{0x8ad10c31, 0x2adb, 0x4296, [8]byte{0xa8, 0xf7, 0xe4, 0x70, 0x12, 0x32, 0xc9, 0x72}}
	FOLDERID_LocalizedResourcesDir  = &KNOWNFOLDERID{0x2a00375e, 0x224c, 0x49de, [8]byte{0xb8, 0xd1, 0x44, 0x0d, 0xf7, 0xef, 0x3d, 0xdc}}
	FOLDERID_CommonOEMLinks         = &KNOWNFOLDERID{0xc1bae2d0, 0x10df, 0x4334, [8]byte{0xbe, 0xdd, 0x7a, 0xa2, 0x0b, 0x22, 0x7a, 0x9d}}
	FOLDERID_CDBurning              = &KNOWNFOLDERID{0x9e52ab10, 0xf80d, 0x49df, [8]byte{0xac, 0xb8, 0x43, 0x30, 0xf5, 0x68, 0x78, 0x55}}
	FOLDERID_UserProfiles           = &KNOWNFOLDERID{0x0762d272, 0xc50a, 0x4bb0, [8]byte{0xa3, 0x82, 0x69, 0x7d, 0xcd, 0x72, 0x9b, 0x80}}
	FOLDERID_Playlists              = &KNOWNFOLDERID{0xde92c1c7, 0x837f, 0x4f69, [8]byte{0xa3, 0xbb, 0x86, 0xe6, 0x31, 0x20, 0x4a, 0x23}}
	FOLDERID_SamplePlaylists        = &KNOWNFOLDERID{0x15ca69b3, 0x30ee, 0x49c1, [8]byte{0xac, 0xe1, 0x6b, 0x5e, 0xc3, 0x72, 0xaf, 0xb5}}
	FOLDERID_SampleMusic            = &KNOWNFOLDERID{0xb250c668, 0xf57d, 0x4ee1, [8]byte{0xa6, 0x3c, 0x29, 0x0e, 0xe7, 0xd1, 0xaa, 0x1f}}
	FOLDERID_SamplePictures         = &KNOWNFOLDERID{0xc4900540, 0x2379, 0x4c75, [8]byte{0x84, 0x4b, 0x64, 0xe6, 0xfa, 0xf8, 0x71, 0x6b}}
	FOLDERID_SampleVideos           = &KNOWNFOLDERID{0x859ead94, 0x2e85, 0x48ad, [8]byte{0xa7, 0x1a, 0x09, 0x69, 0xcb, 0x56, 0xa6, 0xcd}}
	FOLDERID_PhotoAlbums            = &KNOWNFOLDERID{0x69d2cf90, 0xfc33, 0x4fb7, [8]byte{0x9a, 0x0c, 0xeb, 0xb0, 0xf0, 0xfc, 0xb4, 0x3c}}
	FOLDERID_Public                 = &KNOWNFOLDERID{0xdfdf76a2, 0xc82a, 0x4d63, [8]byte{0x90, 0x6a, 0x56, 0x44, 0xac, 0x45, 0x73, 0x85}}
	FOLDERID_ChangeRemovePrograms   = &KNOWNFOLDERID{0xdf7266ac, 0x9274, 0x4867, [8]byte{0x8d, 0x55, 0x3b, 0xd6, 0x61, 0xde, 0x87, 0x2d}}
	FOLDERID_AppUpdates             = &KNOWNFOLDERID{0xa305ce99, 0xf527, 0x492b, [8]byte{0x8b, 0x1a, 0x7e, 0x76, 0xfa, 0x98, 0xd6, 0xe4}}
	FOLDERID_AddNewPrograms         = &KNOWNFOLDERID{0xde61d971, 0x5ebc, 0x4f02, [8]byte{0xa3, 0xa9, 0x6c, 0x82, 0x89, 0x5e, 0x5c, 0x04}}
	FOLDERID_Downloads              = &KNOWNFOLDERID{0x374de290, 0x123f, 0x4565, [8]byte{0x91, 0x64, 0x39, 0xc4, 0x92, 0x5e, 0x46, 0x7b}}
	FOLDERID_PublicDownloads        = &KNOWNFOLDERID{0x3d644c9b, 0x1fb8, 0x4f30, [8]byte{0x9b, 0x45, 0xf6, 0x70, 0x23, 0x5f, 0x79, 0xc0}}
	FOLDERID_SavedSearches          = &KNOWNFOLDERID{0x7d1d3a04, 0xdebb, 0x4115, [8]byte{0x95, 0xcf, 0x2f, 0x29, 0xda, 0x29, 0x20, 0xda}}
	FOLDERID_QuickLaunch            = &KNOWNFOLDERID{0x52a4f021, 0x7b75, 0x48a9, [8]byte{0x9f, 0x6b, 0x4b, 0x87, 0xa2, 0x10, 0xbc, 0x8f}}
	FOLDERID_Contacts               = &KNOWNFOLDERID{0x56784854, 0xc6cb, 0x462b, [8]byte{0x81, 0x69, 0x88, 0xe3, 0x50, 0xac, 0xb8, 0x82}}
	FOLDERID_SidebarParts           = &KNOWNFOLDERID{0xa75d362e, 0x50fc, 0x4fb7, [8]byte{0xac, 0x2c, 0xa8, 0xbe, 0xaa, 0x31, 0x44, 0x93}}
	FOLDERID_SidebarDefaultParts    = &KNOWNFOLDERID{0x7b396e54, 0x9ec5, 0x4300, [8]byte{0xbe, 0x0a, 0x24, 0x82, 0xeb, 0xae, 0x1a, 0x26}}
	FOLDERID_PublicGameTasks        = &KNOWNFOLDERID{0xdebf2536, 0xe1a8, 0x4c59, [8]byte{0xb6, 0xa2, 0x41, 0x45, 0x86, 0x47, 0x6a, 0xea}}
	FOLDERID_GameTasks              = &KNOWNFOLDERID{0x054fae61, 0x4dd8, 0x4787, [8]byte{0x80, 0xb6, 0x09, 0x02, 0x20, 0xc4, 0xb7, 0x00}}
	FOLDERID_SavedGames             = &KNOWNFOLDERID{0x4c5c32ff, 0xbb9d, 0x43b0, [8]byte{0xb5, 0xb4, 0x2d, 0x72, 0xe5, 0x4e, 0xaa, 0xa4}}
	FOLDERID_Games                  = &KNOWNFOLDERID{0xcac52c1a, 0xb53d, 0x4edc, [8]byte{0x92, 0xd7, 0x6b, 0x2e, 0x8a, 0xc1, 0x94, 0x34}}
	FOLDERID_SEARCH_MAPI            = &KNOWNFOLDERID{0x98ec0e18, 0x2098, 0x4d44, [8]byte{0x86, 0x44, 0x66, 0x97, 0x93, 0x15, 0xa2, 0x81}}
	FOLDERID_SEARCH_CSC             = &KNOWNFOLDERID{0xee32e446, 0x31ca, 0x4aba, [8]byte{0x81, 0x4f, 0xa5, 0xeb, 0xd2, 0xfd, 0x6d, 0x5e}}
	FOLDERID_Links                  = &KNOWNFOLDERID{0xbfb9d5e0, 0xc6a9, 0x404c, [8]byte{0xb2, 0xb2, 0xae, 0x6d, 0xb6, 0xaf, 0x49, 0x68}}
	FOLDERID_UsersFiles             = &KNOWNFOLDERID{0xf3ce0f7c, 0x4901, 0x4acc, [8]byte{0x86, 0x48, 0xd5, 0xd4, 0x4b, 0x04, 0xef, 0x8f}}
	FOLDERID_UsersLibraries         = &KNOWNFOLDERID{0xa302545d, 0xdeff, 0x464b, [8]byte{0xab, 0xe8, 0x61, 0xc8, 0x64, 0x8d, 0x93, 0x9b}}
	FOLDERID_SearchHome             = &KNOWNFOLDERID{0x190337d1, 0xb8ca, 0x4121, [8]byte{0xa6, 0x39, 0x6d, 0x47, 0x2d, 0x16, 0x97, 0x2a}}
	FOLDERID_OriginalImages         = &KNOWNFOLDERID{0x2c36c0aa, 0x5812, 0x4b87, [8]byte{0xbf, 0xd0, 0x4c, 0xd0, 0xdf, 0xb1, 0x9b, 0x39}}
	FOLDERID_DocumentsLibrary       = &KNOWNFOLDERID{0x7b0db17d, 0x9cd2, 0x4a93, [8]byte{0x97, 0x33, 0x46, 0xcc, 0x89, 0x02, 0x2e, 0x7c}}
	FOLDERID_MusicLibrary           = &KNOWNFOLDERID{0x2112ab0a, 0xc86a, 0x4ffe, [8]byte{0xa3, 0x68, 0x0d, 0xe9, 0x6e, 0x47, 0x01, 0x2e}}
	FOLDERID_PicturesLibrary        = &KNOWNFOLDERID{0xa990ae9f, 0xa03b, 0x4e80, [8]byte{0x94, 0xbc, 0x99, 0x12, 0xd7, 0x50, 0x41, 0x04}}
	FOLDERID_VideosLibrary          = &KNOWNFOLDERID{0x491e922f, 0x5643, 0x4af4, [8]byte{0xa7, 0xeb, 0x4e, 0x7a, 0x13, 0x8d, 0x81, 0x74}}
	FOLDERID_RecordedTVLibrary      = &KNOWNFOLDERID{0x1a6fdba2, 0xf42d, 0x4358, [8]byte{0xa7, 0x98, 0xb7, 0x4d, 0x74, 0x59, 0x26, 0xc5}}
	FOLDERID_HomeGroup              = &KNOWNFOLDERID{0x52528a6b, 0xb9e3, 0x4add, [8]byte{0xb6, 0x0d, 0x58, 0x8c, 0x2d, 0xba, 0x84, 0x2d}}
	FOLDERID_HomeGroupCurrentUser   = &KNOWNFOLDERID{0x9b74b6a3, 0x0dfd, 0x4f11, [8]byte{0x9e, 0x78, 0x5f, 0x78, 0x00, 0xf2, 0xe7, 0x72}}
	FOLDERID_DeviceMetadataStore    = &KNOWNFOLDERID{0x5ce4a5e9, 0xe4eb, 0x479d, [8]byte{0xb8, 0x9f, 0x13, 0x0c, 0x02, 0x88, 0x61, 0x55}}
	FOLDERID_Libraries              = &KNOWNFOLDERID{0x1b3ea5dc, 0xb587, 0x4786, [8]byte{0xb4, 0xef, 0xbd, 0x1d, 0xc3, 0x32, 0xae, 0xae}}
	FOLDERID_PublicLibraries        = &KNOWNFOLDERID{0x48daf80b, 0xe6cf, 0x4f4e, [8]byte{0xb8, 0x00, 0x0e, 0x69, 0xd8, 0x4e, 0xe3, 0x84}}
	FOLDERID_UserPinned             = &KNOWNFOLDERID{0x9e3995ab, 0x1f9c, 0x4f13, [8]byte{0xb8, 0x27, 0x48, 0xb2, 0x4b, 0x6c, 0x71, 0x74}}
	FOLDERID_ImplicitAppShortcuts   = &KNOWNFOLDERID{0xbcb5256f, 0x79f6, 0x4cee, [8]byte{0xb7, 0x25, 0xdc, 0x34, 0xe4, 0x02, 0xfd, 0x46}}
	FOLDERID_AccountPictures        = &KNOWNFOLDERID{0x008ca0b1, 0x55b4, 0x4c56, [8]byte{0xb8, 0xa8, 0x4d, 0xe4, 0xb2, 0x99, 0xd3, 0xbe}}
	FOLDERID_PublicUserTiles        = &KNOWNFOLDERID{0x0482af6c, 0x08f1, 0x4c34, [8]byte{0x8c, 0x90, 0xe1, 0x7e, 0xc9, 0x8b, 0x1e, 0x17}}
	FOLDERID_AppsFolder             = &KNOWNFOLDERID{0x1e87508d, 0x89c2, 0x42f0, [8]byte{0x8a, 0x7e, 0x64, 0x5a, 0x0f, 0x50, 0xca, 0x58}}
	FOLDERID_StartMenuAllPrograms   = &KNOWNFOLDERID{0xf26305ef, 0x6948, 0x40b9, [8]byte{0xb2, 0x55, 0x81, 0x45, 0x3d, 0x09, 0xc7, 0x85}}
	FOLDERID_CommonStartMenuPlaces  = &KNOWNFOLDERID{0xa440879f, 0x87a0, 0x4f7d, [8]byte{0xb7, 0x00, 0x02, 0x07, 0xb9, 0x66, 0x19, 0x4a}}
	FOLDERID_ApplicationShortcuts   = &KNOWNFOLDERID{0xa3918781, 0xe5f2, 0x4890, [8]byte{0xb3, 0xd9, 0xa7, 0xe5, 0x43, 0x32, 0x32, 0x8c}}
	FOLDERID_RoamingTiles           = &KNOWNFOLDERID{0x00bcfc5a, 0xed94, 0x4e48, [8]byte{0x96, 0xa1, 0x3f, 0x62, 0x17, 0xf2, 0x19, 0x90}}
	FOLDERID_RoamedTileImages       = &KNOWNFOLDERID{0xaaa8d5a5, 0xf1d6, 0x4259, [8]byte{0xba, 0xa8, 0x78, 0xe7, 0xef, 0x60, 0x83, 0x5e}}
	FOLDERID_Screenshots            = &KNOWNFOLDERID{0xb7bede81, 0xdf94, 0x4682, [8]byte{0xa7, 0xd8, 0x57, 0xa5, 0x26, 0x20, 0xb8, 0x6f}}
	FOLDERID_CameraRoll             = &KNOWNFOLDERID{0xab5fb87b, 0x7ce2, 0x4f83, [8]byte{0x91, 0x5d, 0x55, 0x08, 0x46, 0xc9, 0x53, 0x7b}}
	FOLDERID_SkyDrive               = &KNOWNFOLDERID{0xa52bba46, 0xe9e1, 0x435f, [8]byte{0xb3, 0xd9, 0x28, 0xda, 0xa6, 0x48, 0xc0, 0xf6}}
	FOLDERID_OneDrive               = &KNOWNFOLDERID{0xa52bba46, 0xe9e1, 0x435f, [8]byte{0xb3, 0xd9, 0x28, 0xda, 0xa6, 0x48, 0xc0, 0xf6}}
	FOLDERID_SkyDriveDocuments      = &KNOWNFOLDERID{0x24d89e24, 0x2f19, 0x4534, [8]byte{0x9d, 0xde, 0x6a, 0x66, 0x71, 0xfb, 0xb8, 0xfe}}
	FOLDERID_SkyDrivePictures       = &KNOWNFOLDERID{0x339719b5, 0x8c47, 0x4894, [8]byte{0x94, 0xc2, 0xd8, 0xf7, 0x7a, 0xdd, 0x44, 0xa6}}
	FOLDERID_SkyDriveMusic          = &KNOWNFOLDERID{0xc3f2459e, 0x80d6, 0x45dc, [8]byte{0xbf, 0xef, 0x1f, 0x76, 0x9f, 0x2b, 0xe7, 0x30}}
	FOLDERID_SkyDriveCameraRoll     = &KNOWNFOLDERID{0x767e6811, 0x49cb, 0x4273, [8]byte{0x87, 0xc2, 0x20, 0xf3, 0x55, 0xe1, 0x08, 0x5b}}
	FOLDERID_SearchHistory          = &KNOWNFOLDERID{0x0d4c3db6, 0x03a3, 0x462f, [8]byte{0xa0, 0xe6, 0x08, 0x92, 0x4c, 0x41, 0xb5, 0xd4}}
	FOLDERID_SearchTemplates        = &KNOWNFOLDERID{0x7e636bfe, 0xdfa9, 0x4d5e, [8]byte{0xb4, 0x56, 0xd7, 0xb3, 0x98, 0x51, 0xd8, 0xa9}}
	FOLDERID_CameraRollLibrary      = &KNOWNFOLDERID{0x2b20df75, 0x1eda, 0x4039, [8]byte{0x80, 0x97, 0x38, 0x79, 0x82, 0x27, 0xd5, 0xb7}}
	FOLDERID_SavedPictures          = &KNOWNFOLDERID{0x3b193882, 0xd3ad, 0x4eab, [8]byte{0x96, 0x5a, 0x69, 0x82, 0x9d, 0x1f, 0xb5, 0x9f}}
	FOLDERID_SavedPicturesLibrary   = &KNOWNFOLDERID{0xe25b5812, 0xbe88, 0x4bd9, [8]byte{0x94, 0xb0, 0x29, 0x23, 0x34, 0x77, 0xb6, 0xc3}}
	FOLDERID_RetailDemo             = &KNOWNFOLDERID{0x12d4c69e, 0x24ad, 0x4923, [8]byte{0xbe, 0x19, 0x31, 0x32, 0x1c, 0x43, 0xa7, 0x67}}
	FOLDERID_Device                 = &KNOWNFOLDERID{0x1c2ac1dc, 0x4358, 0x4b6c, [8]byte{0x97, 0x33, 0xaf, 0x21, 0x15, 0x65, 0x76, 0xf0}}
	FOLDERID_DevelopmentFiles       = &KNOWNFOLDERID{0xdbe8e08e, 0x3053, 0x4bbc, [8]byte{0xb1, 0x83, 0x2a, 0x7b, 0x2b, 0x19, 0x1e, 0x59}}
	FOLDERID_Objects3D              = &KNOWNFOLDERID{0x31c0dd25, 0x9439, 0x4f12, [8]byte{0xbf, 0x41, 0x7f, 0xf4, 0xed, 0xa3, 0x87, 0x22}}
	FOLDERID_AppCaptures            = &KNOWNFOLDERID{0xedc0fe71, 0x98d8, 0x4f4a, [8]byte{0xb9, 0x20, 0xc8, 0xdc, 0x13, 0x3c, 0xb1, 0x65}}
	FOLDERID_LocalDocuments         = &KNOWNFOLDERID{0xf42ee2d3, 0x909f, 0x4907, [8]byte{0x88, 0x71, 0x4c, 0x22, 0xfc, 0x0b, 0xf7, 0x56}}
	FOLDERID_LocalPictures          = &KNOWNFOLDERID{0x0ddd015d, 0xb06c, 0x45d5, [8]byte{0x8c, 0x4c, 0xf5, 0x97, 0x13, 0x85, 0x46, 0x39}}
	FOLDERID_LocalVideos            = &KNOWNFOLDERID{0x35286a68, 0x3c57, 0x41a1, [8]byte{0xbb, 0xb1, 0x0e, 0xae, 0x73, 0xd7, 0x6c, 0x95}}
	FOLDERID_LocalMusic             = &KNOWNFOLDERID{0xa0c69a99, 0x21c8, 0x4671, [8]byte{0x87, 0x03, 0x79, 0x34, 0x16, 0x2f, 0xcf, 0x1d}}
	FOLDERID_LocalDownloads         = &KNOWNFOLDERID{0x7d83ee9b, 0x2244, 0x4e70, [8]byte{0xb1, 0xf5, 0x53, 0x93, 0x04, 0x2a, 0xf1, 0xe4}}
	FOLDERID_RecordedCalls          = &KNOWNFOLDERID{0x2f8b40c2, 0x83ed, 0x48ee, [8]byte{0xb3, 0x83, 0xa1, 0xf1, 0x57, 0xec, 0x6f, 0x9a}}
	FOLDERID_AllAppMods             = &KNOWNFOLDERID{0x7ad67899, 0x66af, 0x43ba, [8]byte{0x91, 0x56, 0x6a, 0xad, 0x42, 0xe6, 0xc5, 0x96}}
	FOLDERID_CurrentAppMods         = &KNOWNFOLDERID{0x3db40b20, 0x2a30, 0x4dbe, [8]byte{0x91, 0x7e, 0x77, 0x1d, 0xd2, 0x1d, 0xd0, 0x99}}
	FOLDERID_AppDataDesktop         = &KNOWNFOLDERID{0xb2c5e279, 0x7add, 0x439f, [8]byte{0xb2, 0x8c, 0xc4, 0x1f, 0xe1, 0xbb, 0xf6, 0x72}}
	FOLDERID_AppDataDocuments       = &KNOWNFOLDERID{0x7be16610, 0x1f7f, 0x44ac, [8]byte{0xbf, 0xf0, 0x83, 0xe1, 0x5f, 0x2f, 0xfc, 0xa1}}
	FOLDERID_AppDataFavorites       = &KNOWNFOLDERID{0x7cfbefbc, 0xde1f, 0x45aa, [8]byte{0xb8, 0x43, 0xa5, 0x42, 0xac, 0x53, 0x6c, 0xc9}}
	FOLDERID_AppDataProgramData     = &KNOWNFOLDERID{0x559d40a3, 0xa036, 0x40fa, [8]byte{0xaf, 0x61, 0x84, 0xcb, 0x43, 0x0a, 0x4d, 0x34}}
)

- f 2df0916c65d46db526644483d690ca5dbed278fe8b3bc1f8c75401624bb5c55b vendor/golang.org/x/sys/windows/zsyscall_windows.go
+ f d121861afbb4ec3960cefd6d7f9f0fc222df0c8c87f989153964d0116ad91f56 vendor/golang.org/x/sys/windows/zsyscall_windows.go
dmppatch 67
@@ -994,24 +994,114 @@
 ser32.dll%22)%0A
+%09modole32    = NewLazySystemDLL(%22ole32.dll%22)%0A%09modntdll    = NewLazySystemDLL(%22ntdll.dll%22)%0A
 %09modws2_32  
@@ -2183,24 +2183,113 @@
 iceStatus%22)%0A
+%09procQueryServiceLockStatusW            = modadvapi32.NewProc(%22QueryServiceLockStatusW%22)%0A
 %09procControl
@@ -6624,24 +6624,109 @@
 lExecuteW%22)%0A
+%09procSHGetKnownFolderPath               = modshell32.NewProc(%22SHGetKnownFolderPath%22)%0A
 %09procTermina
@@ -8468,24 +8468,104 @@
 mentBlock%22)%0A
+%09procGetTickCount64                     = modkernel32.NewProc(%22GetTickCount64%22)%0A
 %09procSetFile
@@ -12446,24 +12446,181 @@
 ss32NextW%22)%0A
+%09procThread32First                      = modkernel32.NewProc(%22Thread32First%22)%0A%09procThread32Next                       = modkernel32.NewProc(%22Thread32Next%22)%0A
 %09procDeviceI
@@ -13879,24 +13879,521 @@
 umeThread%22)%0A
+%09procSetPriorityClass                   = modkernel32.NewProc(%22SetPriorityClass%22)%0A%09procGetPriorityClass                   = modkernel32.NewProc(%22GetPriorityClass%22)%0A%09procSetInformationJobObject            = modkernel32.NewProc(%22SetInformationJobObject%22)%0A%09procGenerateConsoleCtrlEvent           = modkernel32.NewProc(%22GenerateConsoleCtrlEvent%22)%0A%09procGetProcessId                       = modkernel32.NewProc(%22GetProcessId%22)%0A%09procOpenThread                         = modkernel32.NewProc(%22OpenThread%22)%0A
 %09procDefineD
@@ -16101,24 +16101,407 @@
 ssageBoxW%22)%0A
+%09procCLSIDFromString                    = modole32.NewProc(%22CLSIDFromString%22)%0A%09procStringFromGUID2                    = modole32.NewProc(%22StringFromGUID2%22)%0A%09procCoCreateGuid                       = modole32.NewProc(%22CoCreateGuid%22)%0A%09procCoTaskMemFree                      = modole32.NewProc(%22CoTaskMemFree%22)%0A%09procRtlGetVersion                      = modntdll.NewProc(%22RtlGetVersion%22)%0A
 %09procWSAStar
@@ -26073,32 +26073,449 @@
 %7D%0A%09%7D%0A%09return%0A%7D%0A%0A
+func QueryServiceLockStatus(mgr Handle, lockStatus *QUERY_SERVICE_LOCK_STATUS, bufSize uint32, bytesNeeded *uint32) (err error) %7B%0A%09r1, _, e1 := syscall.Syscall6(procQueryServiceLockStatusW.Addr(), 4, uintptr(mgr), uintptr(unsafe.Pointer(lockStatus)), uintptr(bufSize), uintptr(unsafe.Pointer(bytesNeeded)), 0, 0)%0A%09if r1 == 0 %7B%0A%09%09if e1 != 0 %7B%0A%09%09%09err = errnoErr(e1)%0A%09%09%7D else %7B%0A%09%09%09err = syscall.EINVAL%0A%09%09%7D%0A%09%7D%0A%09return%0A%7D%0A%0A
 func ControlServ
@@ -44555,97 +44555,114 @@
 %0A%7D%0A%0A
-func OpenProcess(da uint32, inheritHandle bool, pid uint32) (handle Handle, err error) %7B%0A
+func OpenProcess(desiredAccess uint32, inheritHandle bool, processId uint32) (handle Handle, err error) %7B%0A
 %09var
@@ -44730,106 +44730,123 @@
 %0A%09%7D%0A
-%09r0, _, e1 := syscall.Syscall(procOpenProcess.Addr(), 3, uintptr(da), uintptr(_p0), uintptr(pid))%0A
+%09r0, _, e1 := syscall.Syscall(procOpenProcess.Addr(), 3, uintptr(desiredAccess), uintptr(_p0), uintptr(processId))%0A
 %09han
@@ -45383,32 +45383,351 @@
 call.EINVAL%0A%09%09%7D%0A
+%09%7D%0A%09return%0A%7D%0A%0Afunc shGetKnownFolderPath(id *KNOWNFOLDERID, flags uint32, token Token, path **uint16) (ret error) %7B%0A%09r0, _, _ := syscall.Syscall6(procSHGetKnownFolderPath.Addr(), 4, uintptr(unsafe.Pointer(id)), uintptr(flags), uintptr(token), uintptr(unsafe.Pointer(path)), 0, 0)%0A%09if r0 != 0 %7B%0A%09%09ret = syscall.Errno(r0)%0A
 %09%7D%0A%09return%0A%7D%0A%0Afu
@@ -52874,32 +52874,164 @@
 l.EINVAL%0A%09%09%7D%0A%09%7D%0A
+%09return%0A%7D%0A%0Afunc getTickCount64() (ms uint64) %7B%0A%09r0, _, _ := syscall.Syscall(procGetTickCount64.Addr(), 0, 0, 0, 0)%0A%09ms = uint64(r0)%0A
 %09return%0A%7D%0A%0Afunc 
@@ -66987,50 +66987,50 @@
 %0A%7D%0A%0A
-func getCurrentProcessId() (pid uint32) %7B%0A
+func GetCurrentProcessId() (pid uint32) %7B%0A
 %09r0,
@@ -69642,32 +69642,632 @@
 procEntry)), 0)%0A
+%09if r1 == 0 %7B%0A%09%09if e1 != 0 %7B%0A%09%09%09err = errnoErr(e1)%0A%09%09%7D else %7B%0A%09%09%09err = syscall.EINVAL%0A%09%09%7D%0A%09%7D%0A%09return%0A%7D%0A%0Afunc Thread32First(snapshot Handle, threadEntry *ThreadEntry32) (err error) %7B%0A%09r1, _, e1 := syscall.Syscall(procThread32First.Addr(), 2, uintptr(snapshot), uintptr(unsafe.Pointer(threadEntry)), 0)%0A%09if r1 == 0 %7B%0A%09%09if e1 != 0 %7B%0A%09%09%09err = errnoErr(e1)%0A%09%09%7D else %7B%0A%09%09%09err = syscall.EINVAL%0A%09%09%7D%0A%09%7D%0A%09return%0A%7D%0A%0Afunc Thread32Next(snapshot Handle, threadEntry *ThreadEntry32) (err error) %7B%0A%09r1, _, e1 := syscall.Syscall(procThread32Next.Addr(), 2, uintptr(snapshot), uintptr(unsafe.Pointer(threadEntry)), 0)%0A
 %09if r1 == 0 %7B%0A%09%09
@@ -75378,24 +75378,2043 @@
 %0A%09return%0A%7D%0A%0A
+func SetPriorityClass(process Handle, priorityClass uint32) (err error) %7B%0A%09r1, _, e1 := syscall.Syscall(procSetPriorityClass.Addr(), 2, uintptr(process), uintptr(priorityClass), 0)%0A%09if r1 == 0 %7B%0A%09%09if e1 != 0 %7B%0A%09%09%09err = errnoErr(e1)%0A%09%09%7D else %7B%0A%09%09%09err = syscall.EINVAL%0A%09%09%7D%0A%09%7D%0A%09return%0A%7D%0A%0Afunc GetPriorityClass(process Handle) (ret uint32, err error) %7B%0A%09r0, _, e1 := syscall.Syscall(procGetPriorityClass.Addr(), 1, uintptr(process), 0, 0)%0A%09ret = uint32(r0)%0A%09if ret == 0 %7B%0A%09%09if e1 != 0 %7B%0A%09%09%09err = errnoErr(e1)%0A%09%09%7D else %7B%0A%09%09%09err = syscall.EINVAL%0A%09%09%7D%0A%09%7D%0A%09return%0A%7D%0A%0Afunc SetInformationJobObject(job Handle, JobObjectInformationClass uint32, JobObjectInformation uintptr, JobObjectInformationLength uint32) (ret int, err error) %7B%0A%09r0, _, e1 := syscall.Syscall6(procSetInformationJobObject.Addr(), 4, uintptr(job), uintptr(JobObjectInformationClass), uintptr(JobObjectInformation), uintptr(JobObjectInformationLength), 0, 0)%0A%09ret = int(r0)%0A%09if ret == 0 %7B%0A%09%09if e1 != 0 %7B%0A%09%09%09err = errnoErr(e1)%0A%09%09%7D else %7B%0A%09%09%09err = syscall.EINVAL%0A%09%09%7D%0A%09%7D%0A%09return%0A%7D%0A%0Afunc GenerateConsoleCtrlEvent(ctrlEvent uint32, processGroupID uint32) (err error) %7B%0A%09r1, _, e1 := syscall.Syscall(procGenerateConsoleCtrlEvent.Addr(), 2, uintptr(ctrlEvent), uintptr(processGroupID), 0)%0A%09if r1 == 0 %7B%0A%09%09if e1 != 0 %7B%0A%09%09%09err = errnoErr(e1)%0A%09%09%7D else %7B%0A%09%09%09err = syscall.EINVAL%0A%09%09%7D%0A%09%7D%0A%09return%0A%7D%0A%0Afunc GetProcessId(process Handle) (id uint32, err error) %7B%0A%09r0, _, e1 := syscall.Syscall(procGetProcessId.Addr(), 1, uintptr(process), 0, 0)%0A%09id = uint32(r0)%0A%09if id == 0 %7B%0A%09%09if e1 != 0 %7B%0A%09%09%09err = errnoErr(e1)%0A%09%09%7D else %7B%0A%09%09%09err = syscall.EINVAL%0A%09%09%7D%0A%09%7D%0A%09return%0A%7D%0A%0Afunc OpenThread(desiredAccess uint32, inheritHandle bool, threadId uint32) (handle Handle, err error) %7B%0A%09var _p0 uint32%0A%09if inheritHandle %7B%0A%09%09_p0 = 1%0A%09%7D else %7B%0A%09%09_p0 = 0%0A%09%7D%0A%09r0, _, e1 := syscall.Syscall(procOpenThread.Addr(), 3, uintptr(desiredAccess), uintptr(_p0), uintptr(threadId))%0A%09handle = Handle(r0)%0A%09if handle == 0 %7B%0A%09%09if e1 != 0 %7B%0A%09%09%09err = errnoErr(e1)%0A%09%09%7D else %7B%0A%09%09%09err = syscall.EINVAL%0A%09%09%7D%0A%09%7D%0A%09return%0A%7D%0A%0A
 func DefineD
@@ -85032,32 +85032,1049 @@
 call.EINVAL%0A%09%09%7D%0A
+%09%7D%0A%09return%0A%7D%0A%0Afunc clsidFromString(lpsz *uint16, pclsid *GUID) (ret error) %7B%0A%09r0, _, _ := syscall.Syscall(procCLSIDFromString.Addr(), 2, uintptr(unsafe.Pointer(lpsz)), uintptr(unsafe.Pointer(pclsid)), 0)%0A%09if r0 != 0 %7B%0A%09%09ret = syscall.Errno(r0)%0A%09%7D%0A%09return%0A%7D%0A%0Afunc stringFromGUID2(rguid *GUID, lpsz *uint16, cchMax int32) (chars int32) %7B%0A%09r0, _, _ := syscall.Syscall(procStringFromGUID2.Addr(), 3, uintptr(unsafe.Pointer(rguid)), uintptr(unsafe.Pointer(lpsz)), uintptr(cchMax))%0A%09chars = int32(r0)%0A%09return%0A%7D%0A%0Afunc coCreateGuid(pguid *GUID) (ret error) %7B%0A%09r0, _, _ := syscall.Syscall(procCoCreateGuid.Addr(), 1, uintptr(unsafe.Pointer(pguid)), 0, 0)%0A%09if r0 != 0 %7B%0A%09%09ret = syscall.Errno(r0)%0A%09%7D%0A%09return%0A%7D%0A%0Afunc CoTaskMemFree(address unsafe.Pointer) %7B%0A%09syscall.Syscall(procCoTaskMemFree.Addr(), 1, uintptr(address), 0, 0)%0A%09return%0A%7D%0A%0Afunc rtlGetVersion(info *OsVersionInfoEx) (ret error) %7B%0A%09r0, _, _ := syscall.Syscall(procRtlGetVersion.Addr(), 1, uintptr(unsafe.Pointer(info)), 0, 0)%0A%09if r0 != 0 %7B%0A%09%09ret = syscall.Errno(r0)%0A
 %09%7D%0A%09return%0A%7D%0A%0Afu
- f 6460f7c83a64a252d3325dfc59be3877f523c7ab0748b311c58bb294ef0dbd58 vendor/modules.txt
+ f d34bff652deb42f1fcaafa12e3aae0f3ad96e2316181c0fff697aefca8a6e178 vendor/modules.txt
dmppatch 10
@@ -367,65 +367,65 @@
 zer%0A
-# golang.org/x/crypto v0.0.0-20190513172903-22d7a77e9e5f%0A
+# golang.org/x/crypto v0.0.0-20190701094942-4def268fd1a4%0A
 gola
@@ -724,62 +724,62 @@
 e2b%0A
-# golang.org/x/sys v0.0.0-20190527104216-9cd6430ef91e%0A
+# golang.org/x/sys v0.0.0-20190626221950-04f50cda93cb%0A
 gola
treehash 14326c436346375ece488dfb1b64ef0d22572117be1d9574eadc2b9c2d5956be
